{"assignees":[],"author":{"id":"MDQ6VXNlcjEyOTgxODY2","is_bot":false,"login":"usertoroot","name":"Disper"},"body":"## Report incorrect documentation\r\n\r\n**Location of incorrect documentation**\r\n https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.core.window.rolling.Rolling.apply.html?highlight=apply#pandas.core.[â€¦]olling.apply\r\n\r\n**Describe the problems or issues found in the documentation**\r\nIs the rolling apply fully implemented? `args` and `kwargs` seem to be ignored, or I am doing it wrong. I searched far and wide for examples of how to add a constant parameter for this function (like decay rate) but I have not found it. \r\n\r\nLooking at the implementation in Github https://github.com/rapidsai/cudf/blob/c929ba1fe85c152d6e8b4c868cd36f0802dafa51/python/cudf/cudf/core/window/rolling.py#L254 it also does not become directly clear how to use it. `args` and `kwargs` are not referenced.\r\n\r\n**Steps taken to verify documentation is incorrect**\r\nList any steps you have taken:\r\nLooked at the source code and examples.\r\n\r\n**Suggested fix for documentation**\r\nDetail proposed changes to fix the documentation if you have any.\r\nGive an example usage of the rolling apply with a constant parameter (for example, decay rate).\r\n---\r\n\r\n## Report needed documentation\r\n\r\n**Report needed documentation**\r\nA lot of rolling functions will have some kind of configuration parameters that are required. It should be possible to pass them.\r\n\r\n**Describe the documentation you'd like**\r\nEither documentation giving examples for this use case should be added, or if the feature is forgotten, the feature should be completed.\r\n\r\n**Steps taken to search for needed documentation**\r\nList any steps you have taken:\r\n- Google\r\n- https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#rolling-window\r\n- https://docs.rapids.ai/api/cudf/stable/api.html?highlight=apply#cudf.core.window.Rolling.apply\r\n","closed":false,"closedAt":null,"comments":[{"id":"MDEyOklzc3VlQ29tbWVudDgzMzcyNTE0MA==","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2021-05-06T17:40:27Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/7850#issuecomment-833725140","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDgzNDAwODYwOQ==","author":{"login":"shwina"},"authorAssociation":"CONTRIBUTOR","body":"Will take this on for 0.20.","createdAt":"2021-05-07T02:16:28Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/7850#issuecomment-834008609","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDgzNjQ1OTk3Ng==","author":{"login":"usertoroot"},"authorAssociation":"NONE","body":"Thanks @shwina !","createdAt":"2021-05-10T09:27:03Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/7850#issuecomment-836459976","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps45bNQp","author":{"login":"galipremsagar"},"authorAssociation":"CONTRIBUTOR","body":"@isVoid Do you think we can close this issue because of changes in #9522?","createdAt":"2021-11-08T18:17:31Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/7850#issuecomment-963433513","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps45b9ez","author":{"login":"isVoid"},"authorAssociation":"CONTRIBUTOR","body":"I think this feature request eventually asks for `args` and `kwargs` support for `rolling.apply`, which was not addressed yet.","createdAt":"2021-11-08T22:24:58Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/7850#issuecomment-963631027","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps46KBNK","author":{"login":"beckernick"},"authorAssociation":"MEMBER","body":"@usertoroot , could you share an example of the kind of function you're trying to run with rolling window apply?","createdAt":"2021-11-22T16:34:05Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/7850#issuecomment-975704906","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5GooGy","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"@brandon-b-miller given your work in adding support for `args` in `apply`, do you think it would be feasible to do something similar here? I know we don't want to add `kwargs` right now given the potential concerns with introducing numba incompatibilities, but perhaps `args` would be feasible?","createdAt":"2022-07-15T00:38:04Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/7850#issuecomment-1185055154","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5GqpvU","author":{"login":"brandon-b-miller"},"authorAssociation":"CONTRIBUTOR","body":"Really good question. The answer for now seems to be that this would take some work. The main reason is that the `rolling` UDF pipeline is still based on the original numba-libcudf_parser-jitify approach. The central UDF is compiled by numba into PTX for a single thread [here](https://github.com/rapidsai/cudf/blob/branch-22.08/python/cudf/cudf/_lib/aggregation.pyx#L215) and injected into a kernel that lives in c++ [here](https://github.com/rapidsai/cudf/blob/branch-22.08/cpp/src/rolling/detail/rolling.cuh#L1266). This makes it a little harder to generalize. \r\n\r\nSeeing these things on the horizon is one of the main reasons we moved `.apply` to generate/launch the kernel from numba rather than using c++/jitify. Python just makes it easier to programmatically generate kernels that have, say, an arbitrary number of `*args` rather that trying to do it in c++. Hence when it came time to do that it wasn't too big of a leap.\r\n\r\nI'd want to transition this API in much the same way if possible first. I'm guessing we'd pick up null support along the way and then `*args` shouldn't be too bad after that. \r\n\r\n","createdAt":"2022-07-15T14:11:24Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/7850#issuecomment-1185586132","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5Sr6w3","author":{"login":"bdice"},"authorAssociation":"CONTRIBUTOR","body":"Support for rolling apply `*args` was also requested by @Franc-Z in #12561.","createdAt":"2023-01-18T15:20:57Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/7850#issuecomment-1387244599","viewerDidAuthor":false}],"createdAt":"2021-04-04T12:48:14Z","id":"MDU6SXNzdWU4NDk4NjgxNTg=","labels":[{"id":"MDU6TGFiZWwxMDEzOTg5MDIz","name":"doc","description":"Documentation","color":"1C62F8"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":{"number":10,"title":"UDF Enhancements","description":"","dueOn":null},"number":7850,"projectCards":[{"project":{"name":"v22.12 Release"},"column":{"name":"Issue-P2"}}],"projectItems":[],"reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}}],"state":"OPEN","title":"[DOC] Rolling window apply with constant parameters.","updatedAt":"2023-01-18T15:21:11Z","url":"https://github.com/rapidsai/cudf/issues/7850"}
