{"assignees":[],"author":{"id":"MDQ6VXNlcjgxNjY0MTk=","is_bot":false,"login":"res-life","name":"Chong Gao"},"body":"**Describe the bug**\r\nSanitizer reports misaligned error when doing reduction on short type values in cuda12 ENV\r\n\r\n\r\n**Steps/Code to reproduce bug**\r\nCode:\r\n```cpp\r\n#include <cudf/types.hpp>\r\n#include <cudf/aggregation.hpp>\r\n#include <cudf/reduction.hpp>\r\n#include <cudf_test/base_fixture.hpp>\r\n#include <cudf_test/column_wrapper.hpp>\r\n\r\ntemplate <typename T, typename SourceElementT = T>\r\nusing column_wrapper =\r\n  typename std::conditional<std::is_same_v<T, cudf::string_view>,\r\n                            cudf::test::strings_column_wrapper,\r\n                            cudf::test::fixed_width_column_wrapper<T, SourceElementT>>::type;\r\nusing int16_col   = column_wrapper<int16_t>;\r\n\r\nstruct MyReductionTest : public cudf::test::BaseFixture {};\r\nTEST_F(MyReductionTest, AlignmentIssue)\r\n{\r\n  std::vector<int16_t> v({1, 2, 3});\r\n  int16_col col(v.begin(), v.end());\r\n  \r\n  auto const output_dtype                 = cudf::data_type{cudf::type_id::INT16};\r\n  auto min_agg = cudf::make_min_aggregation();\r\n  std::unique_ptr<cudf::scalar> reduction1 = cudf::reduce(col, *dynamic_cast<cudf::reduce_aggregation *>(&(*min_agg)), output_dtype);\r\n\r\n  auto const output_dtype2                 = cudf::data_type{cudf::type_id::BOOL8};\r\n  auto any_agg = cudf::make_any_aggregation();\r\n  std::unique_ptr<cudf::scalar> reduction2 = cudf::reduce(col, *dynamic_cast<cudf::reduce_aggregation *>(&(*any_agg)), output_dtype2);\r\n}\r\n\r\n```\r\n\r\nCompile and Run with sanitizer:\r\n```\r\ncompute-sanitizer --tool memcheck \\\r\n    --launch-timeout 600 \\\r\n    --error-exitcode -2 \\\r\n    --log-file \"./sanitizer_for_pid_%p.log\" \\\r\n    ./my-exe\r\n```\r\n\r\nPrint sanitizer log:\r\n```\r\nhead sanitizer_for_pid_42.log \r\n========= COMPUTE-SANITIZER\r\n========= Invalid __shared__ read of size 16 bytes\r\n=========     at 0x38c0 in void cub::CUB_101702_600_700_750_800_860_900_NS::DeviceReduceSingleTileKernel<cub::CUB_101702_600_700_750_800_860_900_NS::DeviceReducePolicy<short, short, int, cudf::DeviceMin>::Policy600, thrust::transform_iterator<thrust::identity<short>, thrust::transform_iterator<cudf::detail::value_accessor<short>, thrust::counting_iterator<int, thrust::use_default, thrust::use_default, thrust::use_default>, thrust::use_default, thrust::use_default>, thrust::use_default, thrust::use_default>, short *, int, cudf::DeviceMin, short>(T2, T3, T4, T5, T6)\r\n=========     by thread (0,0,0) in block (0,0,0)\r\n=========     Address 0x8 is misaligned\r\n=========     Saved host backtrace up to driver entry point at kernel launch time\r\n=========     Host Frame: [0x2d18f2]\r\n=========                in /usr/lib64/libcuda.so.1\r\n=========     Host Frame:__cudart1049 [0xd9bd3b]\r\n=========                in /home/chongg/code/spark-rapids-jni/target/cmake-build/gtests/./my-exe\r\n```\r\n\r\nThe main errors are:\r\n```\r\nInvalid __shared__ read of size 16 bytes\r\nAddress 0x8 is misaligned\r\n```\r\n\r\nOthers:\r\n```\r\nThere are 2 reductions in the code.\r\nIf another reduction follows a min reduction, then errors occur.\r\n```\r\n\r\n**Expected behavior**\r\nFix Sanitizer error.\r\n\r\n**Environment overview (please complete the following information)**\r\n - Environment location: Docker\r\n - Method of cuDF install: from source\r\n\r\n**Environment details**\r\nDocker image:  urm.nvidia.com/sw-spark-docker/plugin-jni:centos7-cuda12.0.1-blossom\r\nCUDA 12, for more details, refer to https://github.com/NVIDIA/spark-rapids-jni/issues/1349\r\n\r\n**Additional context**\r\nRefer to https://github.com/NVIDIA/spark-rapids-jni/issues/1349","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5neDrf","author":{"login":"davidwendt"},"authorAssociation":"CONTRIBUTOR","body":"I'm not able to reproduce the error on my local libcudf build.\r\n```\r\n$ /usr/local/cuda/bin/compute-sanitizer --version\r\nNVIDIA (R) Compute Sanitizer\r\nCopyright (c) 2020-2023 NVIDIA Corporation\r\nVersion 2022.4.1\r\n```\r\n```\r\n$ nvcc --version\r\nnvcc: NVIDIA (R) Cuda compiler driver\r\nCopyright (c) 2005-2022 NVIDIA Corporation\r\nBuilt on Mon_Oct_24_19:12:58_PDT_2022\r\nCuda compilation tools, release 12.0, V12.0.76\r\nBuild cuda_12.0.r12.0/compiler.31968024_0\r\n```","createdAt":"2023-09-26T16:54:42Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14192#issuecomment-1735932639","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5neF5P","author":{"login":"davidwendt"},"authorAssociation":"CONTRIBUTOR","body":"We have a few reductions tests in libcudf that use min-aggregation followed by a call to max-aggregation. Here is one that executes with `int16` types:\r\nhttps://github.com/rapidsai/cudf/blob/3196f6c36140962818aa8d12fe4fbd0dc522e31e/cpp/tests/reductions/reduction_tests.cpp#L152-L157\r\nAll of the tests are run with compute-sanitizer in our nightly builds\r\nCurious if these tests also fail for you in your environment as well.","createdAt":"2023-09-26T17:00:44Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14192#issuecomment-1735941711","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5nj0Wp","author":{"login":"ttnghia"},"authorAssociation":"CONTRIBUTOR","body":"I suspect that this is the same as my previous reported issue: https://github.com/rapidsai/cudf/issues/13685","createdAt":"2023-09-27T13:50:21Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14192#issuecomment-1737442729","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5nj28m","author":{"login":"res-life"},"authorAssociation":"CONTRIBUTOR","body":"> Curious if these tests also fail for you in your environment as well.\r\n\r\nYes, they also fail.\r\nI copied the `reduction_tests.cpp` file to [spark-rapids-jni](https://github.com/NVIDIA/spark-rapids-jni/tree/branch-23.10/src/main/cpp/tests), and compiled to an executable.\r\nTried to directly compile against the cuDF code, but the compile failed. So I copied the `reduction_tests.cpp` to spark-rapids-jni project and compile.","createdAt":"2023-09-27T13:55:56Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14192#issuecomment-1737453350","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5nt_Ut","author":{"login":"davidwendt"},"authorAssociation":"CONTRIBUTOR","body":"This seems specific to your test environment since our nightly compute-sanitizer does not fail running `reduction_tests.cpp` and I cannot reproduce the error locally either.\r\n\r\nPerhaps you can provide some details on the environment. \r\nIs libcudf.so being built from source or downloaded from conda, etc?\r\nIs there a way to duplicate an environment where we could debug libcudf (e.g. compile and link specific modules)?\r\n\r\nI see mention of a docker image in the description. Does the error occur only on centos7?\r\nThis kind of error would not be silent and so should be occurring always. Does it show up in your normal testing?\r\nIn other words, does the error occur without running compute-sanitizer? \r\nIf not, perhaps this could be a compute-sanitizer bug on CUDA-12 on centos7 instead.","createdAt":"2023-09-28T23:08:58Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14192#issuecomment-1740109101","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5n5eUH","author":{"login":"jlowe"},"authorAssociation":"MEMBER","body":"> Is libcudf.so being built from source or downloaded from conda, etc? \r\n\r\nThis is a custom build of libcudf for the RAPIDS Accelerator, where we are compiling libcudf as a PIC static library that is ultimately linked into a shared library and used by the JVM.\r\n\r\n> Is there a way to duplicate an environment where we could debug libcudf (e.g. compile and link specific modules)?\r\n> I see mention of a docker image in the description. Does the error occur only on centos7?\r\n\r\nThe Docker image is used to produce this build, see https://github.com/NVIDIA/spark-rapids-jni/blob/branch-23.10/CONTRIBUTING.md#building-in-the-docker-container.  After pulling the spark-rapids-jni and executing the build-in-docker script, the libcudf install will be in spark-rapids-jni/target/libcudf-install/.  You can use the run-in-docker script to get an interactive shell within the same environment as the build env if desired.\r\n\r\nThe result of the build can be run on any supported OS (e.g.: Ubuntu).  I don't know if the error has been reproduced in different OS's.\r\n\r\n> This kind of error would not be silent and so should be occurring always. Does it show up in your normal testing?\r\n\r\nNo, it only occurs when running under the compute-sanitizer, and specifically when compiling with CUDA12.  I agree that at this point it appears to be a compute-sanitizer bug specific to CUDA 12.\r\n\r\n","createdAt":"2023-10-02T14:24:57Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14192#issuecomment-1743119623","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5rizHS","author":{"login":"GregoryKimball"},"authorAssociation":"CONTRIBUTOR","body":"> I agree that at this point it appears to be a compute-sanitizer bug specific to CUDA 12.\r\nIf true, then the action here will be to file an nvbug with the compute-sanitizer team.","createdAt":"2023-11-09T17:46:55Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14192#issuecomment-1804284370","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5zs1lK","author":{"login":"davidwendt"},"authorAssociation":"CONTRIBUTOR","body":"Curious if this is perhaps resolved with the fixes for this issue https://github.com/NVIDIA/spark-rapids-jni/issues/1567 ","createdAt":"2024-02-13T10:38:05Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14192#issuecomment-1941133642","viewerDidAuthor":false}],"createdAt":"2023-09-26T09:42:13Z","id":"I_kwDOBWUGps5yB94i","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxMDEzOTg3MzUy","name":"0 - Backlog","description":"In queue waiting for assignment","color":"d4c5f9"}],"milestone":null,"number":14192,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] Sanitizer reports misaligned error when doing reduction on short type values in cuda12 ENV","updatedAt":"2024-02-13T10:38:06Z","url":"https://github.com/rapidsai/cudf/issues/14192"}
