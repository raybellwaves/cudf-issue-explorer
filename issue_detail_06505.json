{"assignees":[],"author":{"id":"MDQ6VXNlcjMyNDk5NDg=","is_bot":false,"login":"drabastomek","name":"Tomek Drabas"},"body":"**Describe the bug**\r\nReading a JSON file created from a Series `.to_json(path, orient='records', lines=True)` call leads to a `Input data is not a valid JSON file` when trying to read with `.read_json(path, orient='records', lines=True)` (with or without `engine='cudf'` parameter).\r\n\r\n**NOTE**: this is only a problem when saving Series in this format -- DataFrame objects are saved properly.\r\n\r\n**Steps/Code to reproduce bug**\r\n```\r\ncudf.Series([1,2,3,4,5]).to_json('sample.json', lines=True, orient='records')\r\n\r\ncudf.read_json('sample.json', lines=True, orient='records')\r\n```\r\n\r\nThe output file looks as follows:\r\n\r\n```\r\n1\r\n2\r\n3\r\n4\r\n5\r\n```\r\n\r\n**Expected behavior**\r\nThe file is read back properly and produces a valid `cudf.Series` object. \r\n\r\n**Environment overview (please complete the following information)**\r\n - Environment location: Docker\r\n - Method of cuDF install: Docker\r\n   - RAPIDS v 0.16 pull from nightly. ","closed":false,"closedAt":null,"comments":[{"id":"MDEyOklzc3VlQ29tbWVudDcwNzQyNDQ0Mg==","author":{"login":"galipremsagar"},"authorAssociation":"CONTRIBUTOR","body":"> The output file looks as follows:\r\n> \r\n> ```\r\n> 1\r\n> 2\r\n> 3\r\n> 4\r\n> 5\r\n> ```\r\n\r\nWe currently use pandas JSON writer and this output isn't a valid JSON file, but pandas can read back this output because of a dedicated parameter(`typ`) it has in `read_json` which will determine what the file contents could be. For example:\r\n\r\n```python\r\n>>> ser.to_json('s')\r\n>>> ser\r\n0    1\r\n1    2\r\n2    3\r\n3    4\r\nName: a, dtype: int64\r\n>>> buf = ser.to_json()\r\n>>> buf\r\n'{\"0\":1,\"1\":2,\"2\":3,\"3\":4}'\r\n>>> buf = ser.to_json()\r\n>>> buf\r\n'{\"0\":1,\"1\":2,\"2\":3,\"3\":4}'\r\n>>> pd.read_json(buf, typ='series')\r\n0    1\r\n1    2\r\n2    3\r\n3    4\r\ndtype: int64\r\n>>> buf = ser.to_json(orient='records', lines=True)\r\n>>> buf\r\n'1\\n2\\n3\\n4'\r\n>>> pd.read_json(buf, typ='series', orient='records', lines=True)\r\n0    1\r\n1    2\r\n2    3\r\n3    4\r\ndtype: int64\r\n```\r\n\r\n@kkraus14 I think we should support similar param(`typ`) in `cudf` aswell. \r\n\r\nBut it also raises the question if `'1\\n2\\n3\\n4'` should be considered a valid json, if not what could be a valid form in this case.","createdAt":"2020-10-13T01:12:01Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/6505#issuecomment-707424442","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDcwNzQ0MjAzMw==","author":{"login":"kkraus14"},"authorAssociation":"COLLABORATOR","body":"> @kkraus14 I think we should support similar param(`typ`) in `cudf` aswell.\r\n\r\nIf there was reasonable formats of JSON that could be supported then sure, but generally JSONLines is the most scalable / common one, so I'm not sure how much sense it makes to support other formats.\r\n\r\n> But it also raises the question if `'1\\n2\\n3\\n4'` should be considered a valid json, if not what could be a valid form in this case.\r\n\r\nThis is definitely not valid JSON. Could you raise an issue on Pandas if one doesn't already exist?","createdAt":"2020-10-13T02:16:45Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/6505#issuecomment-707442033","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDcwNzc4MTY4Mw==","author":{"login":"galipremsagar"},"authorAssociation":"CONTRIBUTOR","body":"Cross-linking pandas issue: https://github.com/pandas-dev/pandas/issues/37100","createdAt":"2020-10-13T14:34:41Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/6505#issuecomment-707781683","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDc4MDEyMzE2OA==","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been marked rotten due to no recent activity in the past 90d. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2021-02-16T21:17:07Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/6505#issuecomment-780123168","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5-IEmU","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"@galipremsagar @mroeschke WDYT of the status of this now? The last comment on the associated pandas issue was from Matt, so deferring to you two to decide if there's any action item here still.","createdAt":"2024-05-16T19:36:58Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/6505#issuecomment-2116045204","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5-REuh","author":{"login":"mroeschke"},"authorAssociation":"CONTRIBUTOR","body":"Yeah I think the OP exhibits the intended behavior as the output isn't necessary valid JSON (albeit the correctly formatted output), so I think this is a won't fix","createdAt":"2024-05-17T21:29:17Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/6505#issuecomment-2118405025","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5-cRT_","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"Hmm is that contradicting your last statement on [the associated pandas issue](https://github.com/pandas-dev/pandas/issues/37100#issuecomment-898187809)? Is there a behavior change needed on the pandas end, then? IIUC pandas is allowing this input through. Unless you're suggesting that it's OK for cudf not to support it since it's not valid JSON, but pandas will continue to do so because it already does, in which case we should consider the implications of the divergence for cudf.pandas.","createdAt":"2024-05-20T22:45:40Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/6505#issuecomment-2121340159","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5-czX9","author":{"login":"mroeschke"},"authorAssociation":"CONTRIBUTOR","body":"Sorry, I should have clarified that the `to_json` behavior that both cudf and pandas currently share is the intended behavior. But, yes I suppose `cudf.read_json` should be able to round trip that output like `pandas.read_json`\r\n\r\n```python\r\nIn [1]: import cudf, io\r\n\r\nIn [3]: import pandas as pd\r\n\r\nIn [8]: cudf.read_json(io.StringIO(cudf.Series([1,2,3,4,5]).to_json(lines=True, orient='records')), lines=True, orient=\"records\")\r\nRuntimeError: CUDF failure at: cudf/cpp/src/io/json/json_tree.cu:272: JSON Parser encountered an invalid format at location 2\r\n\r\nIn [9]: pd.read_json(io.StringIO(pd.Series([1,2,3,4,5]).to_json(lines=True, orient='records')), lines=True, orient=\"records\")\r\nOut[9]: \r\n   0\r\n0  1\r\n1  2\r\n2  3\r\n3  4\r\n4  5\r\n```","createdAt":"2024-05-21T00:26:31Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/6505#issuecomment-2121479677","viewerDidAuthor":false}],"createdAt":"2020-10-12T22:07:00Z","id":"MDU6SXNzdWU3MTk2OTk2NjE=","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"},{"id":"MDU6TGFiZWwxMTg1MjQ0MTQy","name":"cuIO","description":"cuIO issue","color":"fef2c0"}],"milestone":null,"number":6505,"projectCards":[{"project":{"name":"Bug Squashing"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] Reading JSON file saved from Series fails","updatedAt":"2024-05-21T00:26:32Z","url":"https://github.com/rapidsai/cudf/issues/6505"}
