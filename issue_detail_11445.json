{"assignees":[],"author":{"id":"MDQ6VXNlcjEzNTIxMDA4","is_bot":false,"login":"isVoid","name":"Michael Wang"},"body":"**Describe the bug**\r\n`cudf.get_dummies` does not function correctly when specified with `cats` üê±.\r\n\r\n**Steps/Code to reproduce bug**\r\n```python\r\nIn [1]: import cudf\r\nIn [2]: df = cudf.DataFrame({'col': list('abcdef')})\r\nIn [4]: cudf.get_dummies(df, cats={\"a\": ['a', 'c', 'f']})\r\nOut[4]: \r\n   col_a  col_b  col_c  col_d  col_e  col_f\r\n0      1      0      0      0      0      0\r\n1      0      1      0      0      0      0\r\n2      0      0      1      0      0      0\r\n3      0      0      0      1      0      0\r\n4      0      0      0      0      1      0\r\n5      0      0      0      0      0      1\r\n```\r\n\r\n**Expected behavior**\r\nPer documentation, `get_dummies` should only encode `a, c, f`. However, since [`pd.get_dummies`](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.get_dummies.html) does not support this argument. My suggestion is that we should remove it.\r\n\r\n**Additional Information**\r\nSince libcudf one-hot-encoding API encodes the column in a single contiguous buffer. The size of the return buffer is limited by the maximum addressable column size of libcudf, `std::numeric_limit<cudf::size_type>::max`. The removal of this argument may prevent user from doing manual batching. Instead, Python API should gracefully handle this situation internally.","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5HtxWb","author":{"login":"isVoid"},"authorAssociation":"CONTRIBUTOR","body":"cc @VibhuJawa for potential downstream influences.","createdAt":"2022-08-02T20:26:44Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11445#issuecomment-1203180955","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5Jp7tQ","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2022-09-02T17:06:53Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11445#issuecomment-1235729232","viewerDidAuthor":false}],"createdAt":"2022-08-02T20:22:20Z","id":"I_kwDOBWUGps5PDrCw","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxMDEzOTg3MzUy","name":"0 - Backlog","description":"In queue waiting for assignment","color":"d4c5f9"},{"id":"MDU6TGFiZWwxMDE2MzMyOTQ4","name":"good first issue","description":"Good for newcomers","color":"7057ff"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":{"number":5,"title":"Pandas API Alignment and Coverage","description":"","dueOn":null},"number":11445,"projectCards":[{"project":{"name":"Bug Squashing"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] `cats` argument does not behave correctly for `cudf.get_dummies`","updatedAt":"2024-05-17T15:10:28Z","url":"https://github.com/rapidsai/cudf/issues/11445"}
