{"assignees":[],"author":{"id":"MDQ6VXNlcjM0NDEzMjE=","is_bot":false,"login":"revans2","name":"Robert (Bobby) Evans"},"body":"**Is your feature request related to a problem? Please describe.**\r\nThe default setting for Spark when reading CSV for line delimiters is '\\r' (Carriage Return), '\\n' (Line Feed), and/or '\\r\\n' (Carriage Return followed by Line Feed)\r\n\r\nCurrently in the Spark plugin we pre-process the CSV input data before sending it to CUDF for parsing.  The pre-processing handles splits  to match what Spark currently does and also fixing the line delimiters to be a single uniform value.  We have found that with fast storage replacing the line delimiters is a real bottleneck.\r\n\r\nWe are also concerned about being ready to support GPU Direct Storage where we would not be able to pre-process the data before sending it to cudf.\r\n\r\n**Describe the solution you'd like**\r\nWe would like an option when parsing CSV to have CUDF recognize  '\\r' (Carriage Return), '\\n' (Line Feed), and '\\r\\n' (Carriage Return followed by Line Feed) all as valid line delimiters at the same time.\r\n\r\n**Describe alternatives you've considered**\r\nKeep doing what we are doing and be slower than ideal when parsing CSV and not be able to support CSV without config modifications when we do adopt GU Direct Storage.","closed":false,"closedAt":null,"comments":[{"id":"MDEyOklzc3VlQ29tbWVudDcxNDgyMTkzMQ==","author":{"login":"kkraus14"},"authorAssociation":"COLLABORATOR","body":"+1 to supporting this from the Python side as well","createdAt":"2020-10-22T23:46:59Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/6572#issuecomment-714821931","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDc4MDEyMzA2NA==","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been marked rotten due to no recent activity in the past 90d. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2021-02-16T21:16:56Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/6572#issuecomment-780123064","viewerDidAuthor":false}],"createdAt":"2020-10-21T12:44:09Z","id":"MDU6SXNzdWU3MjY0NDU1Njc=","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"},{"id":"MDU6TGFiZWwxMTg1MjQ0MTQy","name":"cuIO","description":"cuIO issue","color":"fef2c0"}],"milestone":{"number":12,"title":"CSV continuous improvement","description":"","dueOn":null},"number":6572,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] support '\\n', '\\r' and '\\r\\n' atthe same time as line delimiters for CSV parsing","updatedAt":"2023-08-10T16:14:42Z","url":"https://github.com/rapidsai/cudf/issues/6572"}
