{"assignees":[{"id":"MDQ6VXNlcjMxOTA0MDU=","login":"shwina","name":"Ashwin Srinath"}],"author":{"id":"MDQ6VXNlcjMxOTA0MDU=","is_bot":false,"login":"shwina","name":"Ashwin Srinath"},"body":"```python\r\n>>> import  cudf\r\n>>> s = cudf.Series([1, 2, 3])\r\n>>> s2 = s.iloc[:]  # s2 is a view into s\r\n>>> s.iloc[0] = -1  # this line does not behave as expected\r\n>>> s\r\n0   -1\r\n1    2\r\n2    3\r\ndtype: int64\r\n>>> s2\r\n0    1\r\n1    2\r\n2    3\r\ndtype: int64\r\n```\r\n\r\nContrast with Pandas:\r\n\r\n```python\r\n>>> import pandas as pd\r\n>>> s = pd.Series([1, 2, 3])\r\n>>> s2 = s.iloc[:]  # s2 is a view into s\r\n>>> s.iloc[0] = -1\r\n>>> s\r\n0   -1\r\n1    2\r\n2    3\r\ndtype: int64\r\n>>> s2\r\n0   -1\r\n1    2\r\n2    3\r\ndtype: int64\r\n```\r\n\r\nNote that setting  by slice works as expected:\r\n\r\n```python\r\n>>> import cudf\r\n>>> s = cudf.Series([1, 2, 3])\r\n>>> s2 = s.iloc[:]\r\n>>> s.iloc[0:1] = -1\r\n>>> s\r\n0   -1\r\n1    2\r\n2    3\r\ndtype: int64\r\n>>> s2\r\n0   -1\r\n1    2\r\n2    3\r\ndtype: int64\r\n```","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5GS5O6","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2022-07-08T21:03:01Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11085#issuecomment-1179358138","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5LvgUr","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2022-10-06T22:03:06Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11085#issuecomment-1270744363","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5MubZa","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"@shwina @wence- this seems tangentially related to the `__setitem__` issues that @wence- is currently investigating. Is fixing this within the scope of the current work?","createdAt":"2022-10-21T17:20:30Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11085#issuecomment-1287239258","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5M1zYb","author":{"login":"wence-"},"authorAssociation":"CONTRIBUTOR","body":"> @shwina @wence- this seems tangentially related to the `__setitem__` issues that @wence- is currently investigating. Is fixing this within the scope of the current work?\r\n\r\nNo, this needs deep-seated changes in the way `iloc` indexing and `__setitem__` work. Basically this is all unsafe because there's a significant portion of the code that assumes that, given a `Column`, there is only ever one higher-level holder of the `Column`, and hence that replacing the column associated with a `Series` object with a copy is safe.\r\n\r\nThis is, unfortunately, demonstrably not true (@shwina's example is one, here are a few more):\r\n\r\n```python\r\nimport cudf\r\nimport rmm\r\ns = cudf.Series([1,2,3,4])\r\nsview = s.iloc[:]\r\n\r\ndef owner(buf):\r\n    while not isinstance(buf, rmm.DeviceBuffer):\r\n         buf = buf.owner\r\n    return buf.ptr\r\n\r\n\r\nassert owner(s._column.data) == owner(sview._column.data) # True\r\n\r\ns.iloc[0:2] = [4,5]\r\n\r\nassert owner(s._column.data) == owner(sview._column.data) # False\r\n\r\nsview = s.iloc[:]\r\n\r\nassert owner(s._column.data) == owner(sview._column.data) # True\r\n\r\ns.iloc[[1,3]] = [7, 8]\r\n\r\nassert owner(s._column.data) == owner(sview._column.data) # False\r\n\r\nsview = s.iloc[:]\r\n\r\nassert owner(s._column.data) == owner(sview._column.data) # True\r\n\r\ns.iloc[[False, True, True, False]] = [7, 8]\r\n\r\nassert owner(s._column.data) == owner(sview._column.data) # False\r\n\r\n# This one works\r\n\r\nsview = s.iloc[:]\r\n\r\nassert owner(s._column.data) == owner(sview._column.data) # True\r\n\r\ns.iloc[1::1] = 2\r\n\r\nassert owner(s._column.data) == owner(sview._column.data) # True\r\n\r\n# But this doesn't\r\n\r\nsview = s.iloc[:]\r\n\r\nassert owner(s._column.data) == owner(sview._column.data) # True\r\n\r\ns.iloc[1::1] = [1,2,3]\r\n\r\nassert owner(s._column.data) == owner(sview._column.data) # False\r\n```\r\n\r\n(I have not checked the dataframe-equivalent ones)","createdAt":"2022-10-24T15:01:00Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11085#issuecomment-1289172507","viewerDidAuthor":false}],"createdAt":"2022-06-08T20:02:53Z","id":"I_kwDOBWUGps5Lafkm","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":null,"number":11085,"projectCards":[{"project":{"name":"Bug Squashing"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] Using `.iloc[]` to set a single value in a Series does not do so in-place","updatedAt":"2022-10-24T15:16:04Z","url":"https://github.com/rapidsai/cudf/issues/11085"}
