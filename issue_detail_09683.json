{"assignees":[{"id":"MDQ6VXNlcjEzNTIxMDA4","login":"isVoid","name":"Michael Wang"}],"author":{"id":"MDQ6VXNlcjIwNDc2OTU0","is_bot":false,"login":"wjxiz1992","name":"Allen Xu"},"body":"In machine leaning practice, it's very common to calculate mean value and do mean subtractions for input column data. For example:\r\n\r\nThe input is a LIST type column data with fixed row-length of 3:\r\n```\r\n[1,2,3]\r\n[3,1,2]\r\n[2,3,1]\r\n```\r\nUser wants to do mean centering for it: calculate the mean value for each sub column, in this case, it's always 2. Then do mean subtractions:\r\n```\r\n[-1, 0, 1]\r\n[1, -1, 0]\r\n[0, 1, -1] \r\n```\r\n\r\nIs their any nice way to do it? Currently I can only think of:\r\n1. use `cudf::lists::extract_list_element` to extract all sub column\r\n2. calculate mean value for each of them\r\n3. do subtraction\r\n4. construct them back to a LIST column.","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps45vBIr","author":{"login":"wjxiz1992"},"authorAssociation":"MEMBER","body":"@sperlingxx for visibility.","createdAt":"2021-11-15T08:03:17Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"EYES","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/9683#issuecomment-968626731","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps47R1jO","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2021-12-15T09:02:51Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/9683#issuecomment-994531534","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps4_wDzp","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2022-03-16T20:02:56Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/9683#issuecomment-1069563113","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5FdE5M","author":{"login":"GregoryKimball"},"authorAssociation":"CONTRIBUTOR","body":"@isVoid Does #9621 address this issue? ","createdAt":"2022-06-24T06:35:38Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/9683#issuecomment-1165250124","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5GotGJ","author":{"login":"isVoid"},"authorAssociation":"CONTRIBUTOR","body":"Hi all, apologies for late responses. I think we are missing a LIST type binary op to make that work. Basically you can get per list mean segmented sum and divided by `count_element` (not needed if LIST type is fixed size). But then you would need a custom kernel to perform per list centering. That is, to solve:\r\n\r\n```c++\r\n{{1, 2, 3}, {3, 1, 2}} - {2, 2}\r\n```\r\n\r\nIt would look something like:\r\n```c++\r\ngroup_idx = upper_bound(idx, offset.begin(), offset.end())-1;\r\ncentered[idx] = list[idx] - mean[group_idx];\r\n```\r\n\r\nAlternatively, you could hack it together by repeating the per list mean by list sizes and perform the subtraction on the values of the LIST column. I don't recommend if the use case isn't urgent though.","createdAt":"2022-07-15T01:21:49Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/9683#issuecomment-1185075593","viewerDidAuthor":false}],"createdAt":"2021-11-15T08:02:44Z","id":"I_kwDOBWUGps4-yIco","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjQ=","name":"question","description":"Further information is requested","color":"D4C5F9"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"}],"milestone":{"number":2,"title":"List and Struct data types and operations","description":"","dueOn":null},"number":9683,"projectCards":[{"project":{"name":"Other Issues"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[QST] Proper way to do mean centering for fixed-row-length LIST type column","updatedAt":"2024-02-23T18:42:30Z","url":"https://github.com/rapidsai/cudf/issues/9683"}
