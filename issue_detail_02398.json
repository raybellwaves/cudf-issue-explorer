{"assignees":[],"author":{"id":"MDQ6VXNlcjE5OTQ5MjA3","is_bot":false,"login":"ayushdg","name":"Ayush Dattagupta"},"body":"**Describe the bug**\r\nOften csv files have misplaced quotes and sometime there is a quotation mark as a part of one of the string fields. This should not be interpreted as a quotation mark indicating that a field has delimiters in it and therefore uses `\"`. \r\n**Steps/Code to reproduce bug**\r\n```\r\nimport cudf\r\ndf = cudf.read_csv('quoting.csv')\r\ndf.to_pandas()\r\n```\r\n```\r\n\ta\tb\tc\td\te\r\n0\t1\t192.16.1.2\t/abc/def/ghi\t200\t1\r\n1\t2\tnvidia.com\t/abc/def/ghi.html\t200\t1\r\n2\t3\t0.0.0.0\t/images\",500,1\\n4,0.0.0.0,/abc/def,200,2\\n5,ra...\t-1\t-1\r\n```\r\n**Expected behavior**\r\n```\r\nimport pandas as pd\r\ndf = pd..read_csv('quoting.csv')\r\ndf\r\n```\r\n```\r\n\ta\tb\tc\td\te\r\n0\t1\t192.16.1.2\t/abc/def/ghi\t200\t1\r\n1\t2\tnvidia.com\t/abc/def/ghi.html\t200\t1\r\n2\t3\t0.0.0.0\t/images\"\t500\t1\r\n3\t4\t0.0.0.0\t/abc/def\t200\t2\r\n4\t5\trapids.ai\t/images\t200\t2\r\n```\r\n\r\nWorkaround: Use cudf.read_csv with `quoting=3`. Pandas gives correct output for all quotation modes. \r\n\r\n**Environment overview (please complete the following information)**\r\n - Environment location: Docker nightly\r\n - Method of cuDF install: Docker\r\n   - `docker pull rapidsai/rapidsai-nightly:0.9-cuda10.0-runtime-ubuntu16.04-gcc5-py3.7`\r\n\r\n**Additional context**\r\nI might be wrong but maybe checking if opening quote exists just after delimiter and the second one before another delimiter might be the way? (Just a guess)\r\n\r\n[quoting.csv.zip](https://github.com/rapidsai/cudf/files/3433203/quoting.csv.zip)\r\n\r\n","closed":false,"closedAt":null,"comments":[{"id":"MDEyOklzc3VlQ29tbWVudDUyMDAyNjEzNg==","author":{"login":"mjsamoht"},"authorAssociation":"CONTRIBUTOR","body":"This is essentially the same problem as described in https://github.com/rapidsai/cudf/issues/873.\r\n\r\nThere isn't really a \"correct\" way of handling misplaced quotes.  For every example where pandas seemingly returns something more useful, you can construct an example where pandas returns the \"wrong\" data.\r\n\r\nWe could decide for cuIO to match pandas' behavior, with all the good and bad side effects.\r\n\r\nPlease take a look at the following to learn more how pandas behaves:\r\nhttps://github.com/rapidsai/cudf/issues/873#issuecomment-463004846\r\n","createdAt":"2019-08-09T18:50:29Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/2398#issuecomment-520026136","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDYyNjQ5MDI4Mg==","author":{"login":"harrism"},"authorAssociation":"MEMBER","body":"@kkraus14 @ayushdg @OlivierNV what do you think we should with this issue? Should we aim to match Pandas, or not?","createdAt":"2020-05-11T06:06:18Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/2398#issuecomment-626490282","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDYyNjc1MjMxNA==","author":{"login":"kkraus14"},"authorAssociation":"COLLABORATOR","body":"The above situation seems like something that would be nice to handle, but in general we shouldn't try to handle every edge case / error case of Pandas here. We should do what's logical / what's the best end user experience.\r\n\r\nAlternatively, instead of returning the correct results as above, if we were able to clearly and loudly error saying \"hey there was an unclosed quotation on line 123 at character 87, try setting `quoting=3`\" that would be perfectly good as well.","createdAt":"2020-05-11T14:49:24Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/2398#issuecomment-626752314","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDYyNjgyOTk3NQ==","author":{"login":"OlivierNV"},"authorAssociation":"CONTRIBUTOR","body":"IMO, we should try to match pandas if we can. The new csv implementation should be able to handle the case above when looking for `\\n`, but the data conversion stage doesn't, so it will have to do something similar (basically automatically ignoring quoting if a field doesn't start with a quote)\r\n[Edit] Although priority for malformed content should probably be lower than for correct cases, like basic escapechar support for the delimiter.","createdAt":"2020-05-11T17:06:07Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/2398#issuecomment-626829975","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5HG62d","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"As discussed in #873, these are edge cases where fixing them will break other (valid) use cases. The `quoting=3` WAR is the correct solution. The only actionable before closing this issue is to determine whether it might be feasible to throw a clear error for unclosed quotations like Keith mentions above. @vuule I don't know much about the CSV reader internals, do you think that would be feasible?","createdAt":"2022-07-22T23:10:04Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/2398#issuecomment-1192996253","viewerDidAuthor":false}],"createdAt":"2019-07-25T20:42:28Z","id":"MDU6SXNzdWU0NzMwNjEyNTY=","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"},{"id":"MDU6TGFiZWwxMTg1MjQ0MTQy","name":"cuIO","description":"cuIO issue","color":"fef2c0"}],"milestone":{"number":12,"title":"CSV continuous improvement","description":"","dueOn":null},"number":2398,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}},{"project":{"name":"Bug Squashing"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] read_csv fails to correctly handle misplaced quotes ","updatedAt":"2023-04-02T22:38:19Z","url":"https://github.com/rapidsai/cudf/issues/2398"}
