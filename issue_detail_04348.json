{"assignees":[],"author":{"id":"MDQ6VXNlcjExNjY0MjU5","is_bot":false,"login":"galipremsagar","name":"GALI PREM SAGAR"},"body":"**Describe the bug**\r\nThe current libcudf implementation & old nvstrings implementation of wrap are not in-line with that of pandas `.str.wrap`: https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.str.wrap.html#pandas.Series.str.wrap\r\nOur implementation seems to close to R's stringr library str_wrap function and to achieve that in Pandas we need to fix to a specific parameter setting like as follows:\r\n```\r\nexpand_tabs = False\r\n\r\nreplace_whitespace = True\r\n\r\ndrop_whitespace = True\r\n\r\nbreak_long_words = False\r\n\r\nbreak_on_hyphens = False\r\n```\r\n\r\nThere is inconsistency even if we compare with above setting of pandas to our present implementation, we seem to be maintaining tab spaces. Simple code example below.\r\n\r\n**Steps/Code to reproduce bug**\r\n```python\r\ndata = [' ', '\\t\\r\\n ', ''], width = 100\r\n\r\n    def test_string_wrap(data, width):\r\n        gs = cudf.Series(data)\r\n        ps = pd.Series(data)\r\n    \r\n>       assert_eq(gs.str.wrap(width=width), ps.str.wrap(width=width, break_long_words=False, expand_tabs=False, replace_whitespace=True, drop_whitespace=True, break_on_hyphens=False))\r\n\r\npython/cudf/cudf/tests/test_string.py:1145: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\npandas/_libs/testing.pyx:65: in pandas._libs.testing.assert_almost_equal\r\n    ???\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\n>   ???\r\nE   AssertionError: Series are different\r\nE   \r\nE   Series values are different (66.66667 %)\r\nE   [left]:  [ ,     , ]\r\nE   [right]: [, , ]\r\n\r\n```\r\n\r\nThis behavior seems to be for any value of `width`, not just 100.\r\n\r\n\r\nIf we ignore the specific parameter setting mentioned above, out of the box this is the result inconsistency between cudf and pandas implementation:\r\n```python\r\n\r\n\r\ndata = ['line to be wrapped', 'another line to be wrapped'], width = 1\r\n\r\n    def test_string_wrap(data, width):\r\n        gs = cudf.Series(data)\r\n        ps = pd.Series(data)\r\n    \r\n>     assert_eq(gs.str.wrap(width=width),ps.str.wrap(width=width))\r\n\r\npython/cudf/cudf/tests/test_string.py:1148: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\npandas/_libs/testing.pyx:65: in pandas._libs.testing.assert_almost_equal\r\n    ???\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\n>   ???\r\nE   AssertionError: Series are different\r\nE   \r\nE   Series values are different (100.0 %)\r\nE   [left]:  [line\r\nE   to\r\nE   be\r\nE   wrapped, another\r\nE   line\r\nE   to\r\nE   be\r\nE   wrapped]\r\nE   [right]: [l\r\nE   i\r\nE   n\r\nE   e\r\nE   t\r\nE   o\r\nE   b\r\nE   e\r\nE   w\r\nE   r\r\nE   a\r\nE   p\r\nE   p\r\nE   e\r\nE   d, a\r\nE   n\r\nE   o\r\nE   t\r\nE   h\r\nE   e\r\nE   r\r\nE   l\r\nE   i\r\nE   n\r\nE   e\r\nE   t\r\nE   o\r\nE   b\r\nE   e\r\nE   w\r\nE   r\r\nE   a\r\nE   p\r\nE   p\r\nE   e\r\nE   d]\r\n\r\npandas/_libs/testing.pyx:178: AssertionError\r\n```\r\n\r\n\r\n**Expected behavior**\r\n1. The values returned should be similar to that of the above.\r\n2. I'd also like to make this as a feature request to support the currently un-supported parameters:\r\n```\r\nexpand_tabs\r\nreplace_whitespace\r\ndrop_whitespace\r\nbreak_long_words\r\nbreak_on_hyphens\r\n```\r\n\r\n**Environment overview (please complete the following information)**\r\n - Environment location: Docker\r\n - Method of cuDF install: from source\r\n\r\n\r\n**Environment details**\r\nOutput of the `cudf/print_env.sh` script here:\r\n[env.txt](https://github.com/rapidsai/cudf/files/4295897/env.txt)\r\n\r\n**Additional context**\r\nSurfaced when testing this PR: #4339 \r\n","closed":false,"closedAt":null,"comments":[{"id":"MDEyOklzc3VlQ29tbWVudDU5NTU1NDkwOA==","author":{"login":"davidwendt"},"authorAssociation":"CONTRIBUTOR","body":"I would argue this really is not a bug since the code does not even include all of these parameters. The libcudf coded `wrap()` feature matches the nvstrings implementation which was the intention of the port. Perhaps this can be re-labeled as a feature request since supporting all of these parameters would be a very large task.\r\n@kkraus14 ","createdAt":"2020-03-06T01:43:50Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":2}}],"url":"https://github.com/rapidsai/cudf/issues/4348#issuecomment-595554908","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDc5ODk2MjcyNg==","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2021-03-14T19:14:15Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/4348#issuecomment-798962726","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDc5ODk2MjczMg==","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2021-03-14T19:14:16Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/4348#issuecomment-798962732","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5FlyQq","author":{"login":"GregoryKimball"},"authorAssociation":"CONTRIBUTOR","body":"We plan to stick to the current `wrap` behavior based on nvstrings, rather than exactly match Pandas behavior.","createdAt":"2022-06-27T15:58:15Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/4348#issuecomment-1167533098","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5Q0S6R","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"I think we're probably going to want to try to implement these features at some point. I'm going to reopen this one for further discussion.","createdAt":"2022-12-17T00:55:09Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/4348#issuecomment-1355886225","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5Q0UtL","author":{"login":"davidwendt"},"authorAssociation":"CONTRIBUTOR","body":"I've never seen this used. Do you have new information on requirements for this API?","createdAt":"2022-12-17T01:03:33Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/4348#issuecomment-1355893579","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5Q0hE2","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"No, my sudden interest in these mostly comes from needing to handle potentially changing defaults in pandas 2.0. I don't think that these are necessarily critical features to support, but given that the majority of our defaults are misaligned with pandas defaults (because we don't support the other option) I think we ought to think through the consequences for unwary pandas users. At the moment we throw out a bunch of warnings on basically any usage of `str.wrap` because our parameter defaults don't match pandas because we don't support the alternatives. That's also not a great UX.\r\n\r\nCC @shwina ","createdAt":"2022-12-17T01:36:28Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/4348#issuecomment-1355944246","viewerDidAuthor":false}],"createdAt":"2020-03-06T00:56:16Z","id":"MDU6SXNzdWU1NzY2MjgxOTY=","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxNTE1NjE2MjUz","name":"strings","description":"strings issues (C++ and Python)","color":"0e8a16"}],"milestone":null,"number":4348,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Support additional pandas features in strings wrap implementation","updatedAt":"2024-02-23T18:43:34Z","url":"https://github.com/rapidsai/cudf/issues/4348"}
