{"assignees":[{"id":"MDQ6VXNlcjE0ODc2NTg1","login":"divyegala","name":"Divye Gala"}],"author":{"id":"MDQ6VXNlcjEyNzI1MTEx","is_bot":false,"login":"GregoryKimball","name":"Gregory Kimball"},"body":"**Is your feature request related to a problem? Please describe.**\r\nlibcudf contains two sets of row operators: [legacy row operators](https://github.com/rapidsai/cudf/blob/branch-23.02/cpp/include/cudf/table/row_operators.cuh) for simple types and [experimental row operators](https://github.com/rapidsai/cudf/blob/branch-23.02/cpp/include/cudf/table/experimental/row_operators.cuh) for complex types. When we have completed \"Part 1\" of #11844, then we can safely refactor the experimental row operators to be the default, and drop the `table::experimental` namespace\r\n\r\n**Describe the solution you'd like**\r\nUltimately we will deprecate the legacy row operators and move the experimental row operators out of the experimental namespace. Please note that the new equality and lexicographic comparators will include \"fast paths\" for simple types (see #11330 and #11129), so the legacy row operators will continue to play a role.\r\n\r\nMerge plan for completing the deprecation\r\n- [x] Implement \"fast path\" for equality comparison (closed by #12676)\r\n- [ ] Breakup the row_comparator.cu (#11012)\r\n- [ ] Update all algorithms on new comparator, (complete Part 1 of #11844)\r\n- [ ] Drop the experimental namespace and remove legacy comparator\r\n\r\n**Describe alternatives you've considered**\r\nn/a\r\n\r\n**Additional context**\r\nSee #10186 and follow-on issue #11844 for more information about the nested type comparator project.","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5TiJ_u","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"To be clear, I would expect the \"fast paths\" that you describe to largely be implemented as template specializations of the new comparators rather than leaving the old comparators in place. Much of the code should be reusable and that's the path we've been able to follow in other places e.g. #11129.","createdAt":"2023-01-24T06:46:55Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/12593#issuecomment-1401462766","viewerDidAuthor":false}],"createdAt":"2023-01-23T17:56:35Z","id":"I_kwDOBWUGps5cmNG7","labels":[{"id":"MDU6TGFiZWwxMDEzOTg3NTAz","name":"2 - In Progress","description":"Currently a work in progress","color":"fef2c0"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"}],"milestone":{"number":2,"title":"List and Struct data types and operations","description":"","dueOn":null},"number":12593,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Refactor `experimental/row_operators.cuh` and make it default","updatedAt":"2024-02-23T18:02:06Z","url":"https://github.com/rapidsai/cudf/issues/12593"}
