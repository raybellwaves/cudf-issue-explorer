{"assignees":[],"author":{"id":"MDQ6VXNlcjEzNjA3NjY=","is_bot":false,"login":"jlowe","name":"Jason Lowe"},"body":"**Is your feature request related to a problem? Please describe.**\r\nThe Java bindings require explicit `close()` calls by the caller to prevent GPU OOM errors if garbage collection doesn't kick in often enough to free unreferenced Java objects wrapping GPU resources in a timely manner.  We currently have leaked object tracking via weak reference collection events for most GPU resources, but that does not currently cover `Scalar` instances which wrap `cudf::scalar`.\r\n\r\n**Describe the solution you'd like**\r\nThe same leak tracking and debugging done for `ColumnVector` should be applied to `Scalar`.  Although `Scalar` instances are not very large in practice (excluding the corner cases of nested type scalars), they can fragment the GPU memory pool drastically if there are enough of these tiny allocations leaked, causing GPU OOM errors much earlier than one would expect.\r\n","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps45xqLT","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2021-11-15T21:04:14Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/8227#issuecomment-969319123","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps45xtVd","author":{"login":"jlowe"},"authorAssociation":"MEMBER","body":"Still desired, low priority.","createdAt":"2021-11-15T21:20:33Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/8227#issuecomment-969332061","viewerDidAuthor":false}],"createdAt":"2021-05-12T18:29:35Z","id":"MDU6SXNzdWU4OTAzNzM2MzI=","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxNDA1MTQ1NjIz","name":"cuDF (Java)","description":"Affects Java cuDF API.","color":"006b75"},{"id":"MDU6TGFiZWwxNDA1MTQ2OTc1","name":"Spark","description":"Functionality that helps Spark RAPIDS","color":"7400ff"}],"milestone":null,"number":8227,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Leak tracking for Java Scalar instances","updatedAt":"2021-11-15T22:03:20Z","url":"https://github.com/rapidsai/cudf/issues/8227"}
