{"assignees":[{"id":"MDQ6VXNlcjExMjY5ODE=","login":"wence-","name":"Lawrence Mitchell"}],"author":{"id":"MDQ6VXNlcjExMjY5ODE=","is_bot":false,"login":"wence-","name":"Lawrence Mitchell"},"body":"## Status quo\n\nIndexing of dataframes and series happens through six user-facing routes:\n\n- `DataFrame.__setitem__`/`DataFrame.__getitem__`\n- `DataFrame.iloc.__setitem__`/`DataFrame.iloc.__getitem__`\n- `DataFrame.loc.__setitem__`/`DataFrame.loc.__getitem__`\n- `Series.__setitem__`/`Series.__getitem__`\n- `Series.iloc.__setitem__`/`Series.iloc.__getitem__`\n- `Series.loc.__setitem__`/`Series.loc.__getitem__`\n\nThese all have slightly different semantics (to match pandas behaviour), but there is still quite a lot of (possibly unnecessary) code duplication and a number of bugs around indexing. Many of these look to be because the business logic of handling slicing/gather-by-mask/indexing is intertwined with error handling and determining exactly what to slice. There's also logic effectively repeated between the loc and iloc versions in both cases.\n\nIt would be nice if the number of different paths into indexing was reduced, perhaps it is a pipe dream to share between Series and DataFrame (since a DataFrame is not just a collection of Series), but it feels like it should be possible to share more between iloc/loc/__setgetitem__.\n\nRelated issues:\n\n```[tasklist]\n### `iloc` bugs\n- [ ] #12748 \n- [ ] #13013\n- [ ] #13015\n- [ ] #13265\n- [ ] #13266 \n- [ ] #13267\n- [ ] #13515\n- [ ] #13293\n```\n```[tasklist]\n### Index bugs\n- [ ] #12954\n```\n\n```[tasklist]\n### `loc` bugs\n- [ ] #7448\n- [ ] #8585\n- [ ] #8693\n- [ ] #11298\n- [ ] #11944\n- [ ] #12259\n- [ ] #12286\n- [ ] #12504\n- [ ] #12505\n- [ ] #12801\n- [ ] #12833\n- [ ] #13014\n- [ ] #13015\n- [ ] #13031\n- [ ] #13268\n- [ ] #13269\n- [ ] #13270\n- [ ] #13379\n- [ ] https://github.com/rapidsai/cudf/issues/13653\n- [ ] https://github.com/rapidsai/cudf/issues/13658\n- [ ] https://github.com/rapidsai/cudf/issues/13652\n```\n```[tasklist]\n### Views vs. copies\n- [ ] #7374\n- [ ] #11085\n- [ ] #11990 \n```\n\n```[tasklist]\n### Other (mostly dtype-related)\n- [ ] #2684\n- [ ] #8184\n- [ ] #11477\n- [ ] #12039\n- [ ] #13532\n```\n\nYour issue here.\n\nAs we can see from this classification, `loc`-based indexing is definitely the harder nut to crack. The edge-cases that provoke most of the issues are cases where the values used in the indexing are _not_ in the index.","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5VcE3W","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"Thank you for putting in the effort to collect these issues!","createdAt":"2023-02-16T17:09:08Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/12793#issuecomment-1433423318","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5hGeoe","author":{"login":"mmccarty"},"authorAssociation":"CONTRIBUTOR","body":"cc @mroeschke ","createdAt":"2023-07-10T14:26:21Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/12793#issuecomment-1629088286","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps59tYRy","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"@wence- @mroeschke how many of these issues become moot once COW becomes the default behavior in pandas 3.0? If many, I think that is probably the better path for us to follow on those issues rather than trying to fix issues that we know are going away.","createdAt":"2024-05-14T00:24:26Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/12793#issuecomment-2109047922","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps59vuGe","author":{"login":"wence-"},"authorAssociation":"CONTRIBUTOR","body":"CoW unfortunately, I think, does not fix most of the issues here. They are mostly not to do with views vs copies. Most of them are that the desugaring step from the top-level syntax is not handled compatibly with pandas.","createdAt":"2024-05-14T09:02:31Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/12793#issuecomment-2109661598","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps59-07q","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"Sad, but not surprising. Just wanted to check since I did close a couple of related issues over the past week where COW definitely does fix them, but many others didn't look like they would be.","createdAt":"2024-05-15T23:03:19Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/12793#issuecomment-2113621738","viewerDidAuthor":false}],"createdAt":"2023-02-16T16:49:43Z","id":"I_kwDOBWUGps5ep4Ex","labels":[{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"},{"id":"MDU6TGFiZWwyNTQ2NTIxMDI0","name":"improvement","description":"Improvement / enhancement to an existing function","color":"bfd4f2"}],"milestone":null,"number":12793,"projectCards":[],"projectItems":[],"reactionGroups":[{"content":"HEART","users":{"totalCount":3}},{"content":"ROCKET","users":{"totalCount":1}}],"state":"OPEN","title":"[ENH]: Reworking of `iloc` and `loc` indexing","updatedAt":"2024-05-15T23:03:20Z","url":"https://github.com/rapidsai/cudf/issues/12793"}
