{"assignees":[],"author":{"id":"MDQ6VXNlcjE1MzgxNjU=","is_bot":false,"login":"vyasr","name":"Vyas Ramasubramani"},"body":"Currently our MultiIndex class supports duplicate names, while DataFrames do not. The MultiIndex support is buggy, however, and we are frequently finding new edge cases that break it. Since pandas DataFrames do support duplicate names and [we explicitly choose not to](https://github.com/rapidsai/cudf/blob/branch-22.04/python/cudf/cudf/core/dataframe.py#L4377), I think it makes sense to do the same for MultiIndex. It improves our internal consistency and helps us write much more robust code. Making this change would probably fix a number of currently unknown/hidden bugs.\r\n\r\nThe major caveat here is that we do need to support MultiIndexes where all the names are None. However, handling this case would potentially be much simpler since we could use a sentinel or another class attribute to track whether names are meaningful or not. Default names could be integers, and any setting of names would require setting all column names to unique values.\r\n\r\nAn aside: If we ever did want to support duplicate names properly, it would involve a refactoring at the level of `ColumnAccessor`, which currently uses a dictionary as the underlying data structure to map names to columns. We would then need to update all of our functions that rely on `_from_data` to populate a new object that could support duplicate names rather than a dictionary. This is a substantial undertaking and out of scope for this issue.","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5ALbH8","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"CC @shwina @galipremsagar ","createdAt":"2022-03-23T19:26:23Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10500#issuecomment-1076736508","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5B-LiD","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2022-04-22T20:03:02Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10500#issuecomment-1106819203","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5CFMgW","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"The alternative resolution to this issue would be if we changed the ColumnAccessor to use a list of columns and a list of names instead of maintaining a dictionary of name:column mappings. If we made that change, then both DataFrame and MultiIndex could support duplicate names with only a little bit of additional logic to ensure that accessor methods behave in the expected way when duplicate names exist. However, any such changes to the ColumnAccessor will be motivated by more pressing concerns than supporting duplicate names (overall package performance, stability, and robustness), so we shouldn't rush to any solutions just to solve the duplicate names problem.","createdAt":"2022-04-25T14:34:09Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10500#issuecomment-1108658198","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5Dy6Ij","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2022-05-25T15:12:43Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10500#issuecomment-1137418787","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5I-Qdu","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2022-08-23T16:03:18Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10500#issuecomment-1224279918","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5-OUEs","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"@mroeschke do you know if there are any plans to change the duplicate names support in pandas? There are a lot of ways in which it's kind of broken to allow this since basic operations stop working if there are duplicate names, so this seems like an API improvement that we could suggest in pandas itself (excepting the MultiIndex all None case; we may still need to support that since a MultiIndex without names is probably the most common case).","createdAt":"2024-05-17T14:02:52Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10500#issuecomment-2117681452","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5-PUeC","author":{"login":"mroeschke"},"authorAssociation":"CONTRIBUTOR","body":"We could propose disallowing duplicate names, but I doubt there would be much appetite to disallow them. \r\n\r\nI don't recall seeing many bug reports over the years because a MultiIndex had duplicate names as the names are essentially metadata (carried around as a immutable `list`) and not used in any meaningful way in MultiIndex operations.","createdAt":"2024-05-17T16:19:58Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10500#issuecomment-2117945218","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5-cWDm","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"Sorry, I should clarify. I wasn't only thinking about MultiIndex objects, but also DataFrame objects. For example, pandas lets you do this:\r\n```\r\nIn [1]: import pandas as pd       \r\n                                                   \r\nIn [2]: df = pd.DataFrame({\"a\": [1, 2, 3], \"b\": [4, 5, 6], \"c\": [7, 8, 9]})\r\n                                                   \r\nIn [3]: df.columns = [\"a\", \"a\", \"b\"]\r\n                                                                                                                                                                                                            In [4]: df     \r\nOut[4]:                     \r\n   a  a  b                 \r\n0  1  4  7                                         \r\n1  2  5  8          \r\n2  3  6  9   \r\n```\r\n\r\nThat certainly has impacts on various downstream operations and leads to odd-looking failures, e.g.\r\n```\r\nIn [5]: df.groupby(\"a\").sum()\r\n...\r\nValueError: Grouper for 'a' not 1-dimensional\r\n```","createdAt":"2024-05-20T23:03:17Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10500#issuecomment-2121359590","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5-cuGe","author":{"login":"mroeschke"},"authorAssociation":"CONTRIBUTOR","body":"Ah I see. I think this would be tough sell too since a lot of APIs were developed overtime to handle duplicate columns (I suspect the main motivation was to \"gracefully\" support IO usecases (CSVs) with duplicate headers).\r\n\r\nThere has been an ask to make column labels unique by default https://github.com/pandas-dev/pandas/issues/53217, but also a larger discussion at one point to make handling duplicate columns consistent https://github.com/pandas-dev/pandas/issues/47718 so I think there's greater appetite at the behavior consistency of duplicate labels rather than disallowing them","createdAt":"2024-05-21T00:01:40Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10500#issuecomment-2121458078","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5-cw7E","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"OK got it. That is very helpful context, thanks! If that is the case and there is real interest in this in pandas, then we may have to rethink cudf's plans around duplicate names and issues like #13273 ","createdAt":"2024-05-21T00:15:11Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10500#issuecomment-2121469636","viewerDidAuthor":false}],"createdAt":"2022-03-23T19:26:15Z","id":"I_kwDOBWUGps5GP4fw","labels":[{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"},{"id":"MDU6TGFiZWwyNTQ2NTIxMDI0","name":"improvement","description":"Improvement / enhancement to an existing function","color":"bfd4f2"},{"id":"MDU6TGFiZWwyNTQ2NTIxMDQ5","name":"breaking","description":"Breaking change","color":"d93f0b"}],"milestone":{"number":6,"title":"cuDF Python Refactoring","description":"Refactor Python layers to improve performance, robustness, and extensibility. Ongoing development is being guided by the roadmap and evolving development guide.","dueOn":null},"number":10500,"projectCards":[{"project":{"name":"Other Issues"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}}],"state":"OPEN","title":"Remove partial support for duplicate MultIindex names unless they are all None","updatedAt":"2024-05-21T00:15:12Z","url":"https://github.com/rapidsai/cudf/issues/10500"}
