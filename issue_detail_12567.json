{"assignees":[{"id":"MDQ6VXNlcjc0MTY5MzU=","login":"ttnghia","name":"Nghia Truong"}],"author":{"id":"MDQ6VXNlcjc0MTY5MzU=","is_bot":false,"login":"ttnghia","name":"Nghia Truong"},"body":"There were reported performance regressions in `make_lists_column` and `make_structs_column` recently after calling to `purge_nonempty_nulls` has been added to these factory functions. We need to sanitize (i.e., remove non-empty nulls) for the input data but both checking and removing non-empty nulls may incur some (even significant) overhead.\r\n\r\nI propose adding a parameter to the callers of `purge_nonempty_nulls` such as:\r\n```\r\nsuperimpose_nulls(..., std::unique_ptr<column>&& input, bool sanitize_input, ....);\r\n```\r\n\r\nBy having such parameter (`bool sanitize_input`), we can make the calls to `purge_nonempty_nulls` optional. In some places such as data IO or some custom kernel, we know for sure that all the nulls are empty thus we will not have to waste the overhead of checking non-empty nulls.","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5SszQd","author":{"login":"ttnghia"},"authorAssociation":"CONTRIBUTOR","body":"Targeting 23.04 release.","createdAt":"2023-01-18T17:50:08Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/12567#issuecomment-1387475997","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5Zb-SA","author":{"login":"GregoryKimball"},"authorAssociation":"CONTRIBUTOR","body":"I would like to connect this issue and https://github.com/rapidsai/cudf/issues/12786. I would like to identify any libcudf algorithms that generate nonempty nulls and only add sanitization where it is needed due to implementation details for particular algorithms.","createdAt":"2023-04-07T17:52:56Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/12567#issuecomment-1500505216","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5v_39-","author":{"login":"GregoryKimball"},"authorAssociation":"CONTRIBUTOR","body":"To add some context to this work, we recently added null sanitization checks in #14559, and also started simplifying nulls checking in #13312. \n\nIt's also worth mentioning that `purge_nonempty_null` has caused degenerate performance with copying columns with deeply nested structs (>16 levels). See #14363 for a patch that helped us avoid null sanitization for columns with no parent nulls. The performance observations are captured in issue #TBD.\n\nWe should continue to minimize the usage of `purge_nonempty_nulls`, as part of following our policy \"libcudf expects nested types to have sanitized null masks\" in the [developer guide](https://docs.rapids.ai/api/libcudf/stable/developer_guide)).","createdAt":"2024-01-05T17:22:01Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/12567#issuecomment-1879015294","viewerDidAuthor":false}],"createdAt":"2023-01-18T17:49:01Z","id":"I_kwDOBWUGps5bsl3B","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"},{"id":"MDU6TGFiZWwxMzIyMjUyNjE3","name":"Performance","description":"Performance related issue","color":"C2E0C6"}],"milestone":null,"number":12567,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Make calling to `purge_nonempty_nulls` optional in various places","updatedAt":"2024-01-05T17:23:33Z","url":"https://github.com/rapidsai/cudf/issues/12567"}
