{"assignees":[],"author":{"id":"MDQ6VXNlcjExNjM1MzYz","is_bot":false,"login":"justkrismanohar","name":""},"body":"looking the apply_rows, how can I pass in a cudf dataframe as an argument  so something like \r\n```\r\nimport cudf\r\nimport numpy as np\r\n\r\ndfA = cudf.DataFrame({'A': [0, 1, 2, 3, 4],\r\n                   'B': [5, 6, 7, 8, 9],\r\n                   'C': ['a', 'b', 'c', 'd', 'e']})\r\ndfA\r\n\r\ndfB = cudf.DataFrame({'A': [0, 1, 2, 3, 4],\r\n                   'B': [5, 6, 7, 8, 9],\r\n                   'C': ['a', 'b', 'c', 'd', 'e']})\r\n\r\ndef fn(A, B, out1,k1):\r\n    for i, (a, b) in enumerate(zip(A, B)):\r\n        out1[i] = 1 # awesome work done here that uses all k1\r\n\r\ndfB.apply_rows(fn, incols = ['A','B'], outcols = dict(out1=np.float64), kwargs=dict(k1=dfA))\r\n```","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5cpfzz","author":{"login":"shwina"},"authorAssociation":"CONTRIBUTOR","body":"Hi @justkrismanohar -- thanks for raising this issue! This is not currently possible. Are you able to provide a real example of `fn`? I'd like to see if it's at all possible to suggest any workarounds that could apply to your specific use-case.\r\n","createdAt":"2023-05-19T10:43:24Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/13375#issuecomment-1554382067","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5cqKAj","author":{"login":"justkrismanohar"},"authorAssociation":"NONE","body":"Thanks for clarifying @shwina okay so I have my test_df and this fn pred3. To make the prediction it needs the entire train_df. So right now it looks like this\r\n\r\n`        for index, tx in test_df.to_pandas().iterrows():\r\n            test_df.loc[index,'pred'] = pred3(tx,train_df, kappa,target_col=target_col, att_list=att_list)`\r\n\r\nI wanna get rid of that for loop, so I was trying the apply rows, but i can't seem to pass in the dataframe\r\n\r\nSome other thoughts I had, was if it were possible to get a reference to the df on the GPU and just pass that - its purely looks ups i need to do, no modifications to the dataframe...","createdAt":"2023-05-19T13:14:43Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/13375#issuecomment-1554554915","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5cqZ_S","author":{"login":"brandon-b-miller"},"authorAssociation":"CONTRIBUTOR","body":"If your data is static, you can wrap it in a couple of numpy arrays and access it from inside your function using `apply`. For example:\r\n```python\r\nimport cudf\r\nimport numpy as np\r\n\r\ndf = cudf.DataFrame({\r\n    'a': [1,2,3],\r\n    'b': [4,5,6] \r\n})\r\n\r\nmy_data = np.array([1,2,3])\r\n\r\ndef f(row):\r\n    sum = row['a'] + row['b']\r\n    for i in my_data:\r\n        sum += i\r\n    return sum\r\n\r\nres = df.apply(f, axis=1)\r\nprint(res)\r\n```\r\nThis yields\r\n```\r\n0    11\r\n1    13\r\n2    15\r\ndtype: int64\r\n```","createdAt":"2023-05-19T14:00:46Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/13375#issuecomment-1554620370","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5cqjHn","author":{"login":"shwina"},"authorAssociation":"CONTRIBUTOR","body":"(note that this requires all your data to be numeric)","createdAt":"2023-05-19T14:17:18Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/13375#issuecomment-1554657767","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5cuXz_","author":{"login":"justkrismanohar"},"authorAssociation":"NONE","body":"neat trick, i guess should work for 2d data as well, I'll give it a go and let you know. Would dictionaries be allowed in the definition of f above - I am thinking it has to compile down to numba ...","createdAt":"2023-05-20T06:06:21Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/13375#issuecomment-1555660031","viewerDidAuthor":false}],"createdAt":"2023-05-18T03:28:58Z","id":"I_kwDOBWUGps5mN61T","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMDE2MzIwNzI3","name":"numba","description":"Numba issue","color":"9c2cdd"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":null,"number":13375,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Pass dataframe as a parameter to .apply_rows","updatedAt":"2023-05-20T06:06:55Z","url":"https://github.com/rapidsai/cudf/issues/13375"}
