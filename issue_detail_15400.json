{"assignees":[],"author":{"id":"MDQ6VXNlcjE1MzgxNjU=","is_bot":false,"login":"vyasr","name":"Vyas Ramasubramani"},"body":"**Is your feature request related to a problem? Please describe.**\r\npandas has a `set_flags` API that disallows duplicate labels from existing on a pandas object. Therefore, subsequent operations on the could/should (this feature isn't really maintained/thorough in pandas) fail if duplicate labels are introduced. \r\n\r\n```python\r\nIn [4]: import pandas\r\n\r\nIn [5]: df = pandas.DataFrame({\"A\": [0, 1, 2, 3]}, index=[\"x\", \"y\", \"X\", \"Y\"]).set_flags(\r\n   ...: \r\n   ...:     allows_duplicate_labels=False\r\n   ...: \r\n   ...: )\r\n\r\nIn [6]: df.rename(str.upper)\r\nDuplicateLabelError: Index has duplicates.\r\n      positions\r\nlabel          \r\nX        [0, 2]\r\nY        [1, 3]\r\n```\r\n\r\n**Describe the solution you'd like**\r\nIt would be nice to add some support for this behavior in cudf.pandas, probably hidden behind the pandas compatibility mode option in cudf.\r\n\r\n**Describe alternatives you've considered**\r\nNone\r\n\r\n**Additional context**\r\nThe extra overhead of this mode of operation could be pretty high since every operation would need to be checked after the fact. It's probably still OK to include, but we should probably benchmark to understand the implications when we do it.","closed":false,"closedAt":null,"comments":[],"createdAt":"2024-03-27T00:24:32Z","id":"I_kwDOBWUGps6Ds3im","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"LA_kwDOBWUGps8AAAABlj4eYg","name":"cudf.pandas","description":"Issues specific to cudf.pandas","color":"984DFB"}],"milestone":{"number":35,"title":"Proxying - cudf.pandas","description":"","dueOn":null},"number":15400,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Support pandas flags in cudf.pandas","updatedAt":"2024-04-15T18:03:25Z","url":"https://github.com/rapidsai/cudf/issues/15400"}
