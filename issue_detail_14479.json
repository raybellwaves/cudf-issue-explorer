{"assignees":[],"author":{"id":"MDQ6VXNlcjExMjY5ODE=","is_bot":false,"login":"wence-","name":"Lawrence Mitchell"},"body":"**Is your feature request related to a problem? Please describe.**\n\nHistorically (I think) certain features were available in libcudf before others. For example, while hash joins appeared quite early on `cudf::contains` was only factored out of the semi join infrastructure in #11100.\n\nAs a result, there are a number of places in cudf where an API was implemented using a sub-optimal approach (be that in terms of memory footprint or performance) just because it was needed in the Python API.\n\nFor example in #14478, we replace a sub-optimal (in both memory _and_ performance) inner join, with a call to `cudf::contains` now that it is available.\n\n**Describe the solution you'd like**\n\nWe should go through and check for other instances of this historical anti-pattern and either:\n\n- replace with calls to appropriate (existing) libcudf primitives\n- gather feature requests for new libcudf primitives based on the usage we observe.\n\n**Describe alternatives you've considered**\n\nn/a\n\n**Additional context**\n\nIt is probable that candidates can be found by looking calls to `merge` in the cudf codebase. As well as argsort/scatter/gather patterns (that's #13557).\n```[tasklist]\n### Tasks\n- [ ] https://github.com/rapidsai/cudf/issues/13557\n- [ ] https://github.com/rapidsai/cudf/pull/14478\n- [ ] https://github.com/rapidsai/cudf/issues/14480\n- [ ] https://github.com/rapidsai/cudf/issues/14485\n- [ ] https://github.com/rapidsai/cudf/issues/14486\n- [ ] https://github.com/rapidsai/cudf/issues/13630\n- [ ] https://github.com/rapidsai/cudf/issues/13565\n- [ ] https://github.com/rapidsai/cudf/issues/13456\n- [ ] https://github.com/rapidsai/cudf/issues/14487\n```\n","closed":false,"closedAt":null,"comments":[],"createdAt":"2023-11-22T18:58:02Z","id":"I_kwDOBWUGps53n5-c","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMzIyMjUyNjE3","name":"Performance","description":"Performance related issue","color":"C2E0C6"},{"id":"LA_kwDOBWUGps8AAAABc-htjg","name":"no-oom","description":"Reducing memory footprint of cudf algorithms","color":"FBCA04"}],"milestone":null,"number":14479,"projectCards":[],"projectItems":[],"reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":2}}],"state":"OPEN","title":"[ENH] Audit cudf APIs for use of inappropriate algorithms","updatedAt":"2023-11-23T17:09:45Z","url":"https://github.com/rapidsai/cudf/issues/14479"}
