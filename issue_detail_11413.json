{"assignees":[],"author":{"id":"MDQ6VXNlcjQ0Nzg3MzU5","is_bot":false,"login":"AdamKorcz","name":""},"body":"**Is your feature request related to a problem? Please describe.**\r\ncuDF has an extensive fuzzing suite that could benefit the project by running in the CI.\r\n\r\n**Describe the solution you'd like**\r\nIn this issue I suggest [ClusterfuzzLite](https://google.github.io/clusterfuzzlite/) integration for cuDF. This would require:\r\n\r\n1. Adding a `.github/workflows/cflite.yml` file.\r\n2. Adding a .clusterfuzzlite directory with build files.\r\n3. Rewriting the fuzzers into coverage-guided fuzzers via [Atheris](https://github.com/google/atheris).\r\n\r\n**Describe alternatives you've considered**\r\n\r\n\r\n**Additional context**\r\nClusterfuzzLite handles the management of running fuzzers in the CI when PRs are made. It has a number of features that are useful for projects with multiple fuzzers:\r\n\r\n1. CFL reuses corpus so that the fuzzers don't start from scratch every run.\r\n2. [Batch fuzzing](https://google.github.io/clusterfuzzlite/running-clusterfuzzlite/github-actions/#batch-fuzzing) will run the fuzzers periodically to look for harder-to-find bugs and build of the corpus.\r\n3. Only fuzzers that cover code that is changed in PRs run in the CI.\r\n\r\nI will be glad to take the lead on this one if it is of interest to cuDF.\r\n","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5Hm3sB","author":{"login":"shwina"},"authorAssociation":"CONTRIBUTOR","body":"Hi @AdamKorcz - thanks for reaching out! We're definitely interested in improvements around our fuzzing infrastructure and appreciate any help!\r\n\r\nWe're currently in the process of migrating our CI to use GitHub Actions and we expect that to be complete in the coming weeks. I imagine that will make it easier to integrate a tool like ClusterfuzzLite. Perhaps we can touch base again once that migration is complete?","createdAt":"2022-08-01T15:42:55Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11413#issuecomment-1201371905","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5JgBuc","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2022-08-31T16:03:29Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11413#issuecomment-1233132444","viewerDidAuthor":false}],"createdAt":"2022-08-01T11:07:28Z","id":"I_kwDOBWUGps5O7khx","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"},{"id":"MDU6TGFiZWwxMTg1MjQ0MTQy","name":"cuIO","description":"cuIO issue","color":"fef2c0"}],"milestone":null,"number":11413,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] ClusterfuzzLite integration","updatedAt":"2023-04-02T22:40:28Z","url":"https://github.com/rapidsai/cudf/issues/11413"}
