{"assignees":[{"id":"MDQ6VXNlcjM5NDM3NjE=","login":"bdice","name":"Bradley Dice"}],"author":{"id":"MDQ6VXNlcjEzNjA3NjY=","is_bot":false,"login":"jlowe","name":"Jason Lowe"},"body":"**Is your feature request related to a problem? Please describe.**\r\nCurrently the hashing tests use a relatively small number of fixed values and some tests should be parameterized to test all possible input types.\r\n\r\n**Describe the solution you'd like**\r\nIdeally the tests should use procedurally generated input with the ability to generate a controllable percentage of nulls and corner case values (e.g.: min/max values, zero, -0.0/NaN,+/-Inf for floating point types, etc.).  The results should then be compared against a reference CPU implementation that computes on the same input.\r\n\r\nThere should also be negative tests that verify any unsupported input types throw appropriate exceptions.\r\n","closed":false,"closedAt":null,"comments":[{"id":"MDEyOklzc3VlQ29tbWVudDgyNTY4MjY1MQ==","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2021-04-23T14:04:58Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/7700#issuecomment-825682651","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDgyNTY5NDU2Nw==","author":{"login":"jlowe"},"authorAssociation":"MEMBER","body":"Would still like to see this, but it is not high priority.","createdAt":"2021-04-23T14:23:26Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/7700#issuecomment-825694567","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5GohN5","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"@bdice given all your ongoing work involving hashing (including testing like #11145 but also new hash functions that require tests like #9215) would you be open to taking this on? The key is finding suitable reference implementations, which may not be the same for all hash functions, but otherwise the logic for the tests seems like they would be identical (up to maybe some edge cases that we expect some hashes to support but not others).","createdAt":"2022-07-14T23:37:17Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/7700#issuecomment-1185026937","viewerDidAuthor":false}],"createdAt":"2021-03-24T14:00:05Z","id":"MDU6SXNzdWU4Mzk3NTQyNzI=","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMDEzOTg3MzUy","name":"0 - Backlog","description":"In queue waiting for assignment","color":"d4c5f9"},{"id":"MDU6TGFiZWwxMDE2MzQyNTY3","name":"tests","description":"Unit testing for project","color":"204ea3"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"}],"milestone":null,"number":7700,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Improve libcudf hashing tests","updatedAt":"2022-07-26T13:34:07Z","url":"https://github.com/rapidsai/cudf/issues/7700"}
