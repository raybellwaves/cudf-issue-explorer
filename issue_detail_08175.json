{"assignees":[],"author":{"id":"MDQ6VXNlcjg0NTczODg=","is_bot":false,"login":"beckernick","name":"Nick Becker"},"body":"Pandas's unique method returns an array, while ours returns a Series.\r\n\r\n```python\r\nimport cudf\r\nprint(cudf.__version__)\r\nâ€‹\r\ndf = cudf.DataFrame({\r\n    \"a\": [0,1,2,0,1,2,0]\r\n})\r\ntype(df['a'].unique()), type(df['a'].to_pandas().unique())\r\n0.20.0a+248.g7623f3978b\r\n(cudf.core.series.Series, numpy.ndarray)\r\n```","closed":false,"closedAt":null,"comments":[{"id":"MDEyOklzc3VlQ29tbWVudDgzMzY5NTA1NQ==","author":{"login":"kkraus14"},"authorAssociation":"COLLABORATOR","body":"Hmm, this is problematic for us in handling things like strings or decimal values which can't be supported by arrays as of now. @shwina is scoping building `cudf.arrays` similar to `pandas.arrays` which would potentially give a path forward in the future.","createdAt":"2021-05-06T17:10:10Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":2}}],"url":"https://github.com/rapidsai/cudf/issues/8175#issuecomment-833695055","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps45xqM-","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2021-11-15T21:04:22Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/8175#issuecomment-969319230","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5-IjYR","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"I'm not sure what we should do about this. I don't think extension arrays are on our roadmap for any time soon. @galipremsagar WDYT? We could match the type for types supported by cupy, but returning a different object based on the data type seems even worse than the status quo. Fundamentally I don't know that we'll ever be able to solve this since we have other types that cupy will probably never support (list and struct, for instance). ","createdAt":"2024-05-16T21:02:09Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/8175#issuecomment-2116171281","viewerDidAuthor":false}],"createdAt":"2021-05-06T16:08:54Z","id":"MDU6SXNzdWU4Nzc2NzMyNDE=","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":null,"number":8175,"projectCards":[{"project":{"name":"Bug Squashing"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] Series unique should return an array rather than a dataframe","updatedAt":"2024-05-16T21:02:10Z","url":"https://github.com/rapidsai/cudf/issues/8175"}
