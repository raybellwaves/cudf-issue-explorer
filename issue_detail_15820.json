{"assignees":[],"author":{"id":"U_kgDOBb2DzQ","is_bot":false,"login":"dagardner-nv","name":"David Gardner"},"body":"**Describe the bug**\r\n`cudf.read_json` doesn't raise an exception when parsing invalid json when `lines=True` and `engine='cudf'`. Instead it returns a single row DF with an empty string value.\r\n\r\nSetting `lines=False` raises a `RuntimeError` (should be a `ValueError`).\r\nAlternately setting `engine='pandas'` raises a `ValueError`.\r\n\r\n**Steps/Code to reproduce bug**\r\n```python\r\nfrom io import StringIO\r\n\r\nimport cudf\r\n\r\nprint(cudf.__version__)\r\ninvalid_payload = '{\"not_valid\":\"json'\r\n\r\n# Produces a single row DF\r\nprint(\"Testing lines=True, engine=cudf\")\r\nprint(cudf.read_json(StringIO(invalid_payload), lines=True, engine='cudf'))\r\n\r\n\r\n# Works as expected\r\nprint(\"Testing lines=False, engine=cudf\")\r\ntry: \r\n    cudf.read_json(StringIO(invalid_payload), lines=False, engine='cudf')\r\nexcept Exception as e:\r\n    print(e)\r\n\r\n# Works as expected\r\nprint(\"Testing lines=True, engine=pandas\")\r\ntry:\r\n    cudf.read_json(StringIO(invalid_payload), lines=True, engine='pandas')\r\nexcept Exception as e:\r\n    print(e)\r\n```\r\n\r\n**Expected behavior**\r\nA raised `ValueError`, although any exception is better than \r\n\r\n**Environment overview (please complete the following information)**\r\n - Environment location: [Bare-metal]\r\n - Method of cuDF install: [conda]\r\n\r\nObserved in versions 24.04.01 and 24.02.02","closed":false,"closedAt":null,"comments":[],"createdAt":"2024-05-22T19:04:58Z","id":"I_kwDOBWUGps6Jw2rb","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"}],"milestone":null,"number":15820,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] `cudf.read_json` does not raise an exception with invalid data when `lines=True` and `engine='cudf'`","updatedAt":"2024-05-22T19:04:58Z","url":"https://github.com/rapidsai/cudf/issues/15820"}
