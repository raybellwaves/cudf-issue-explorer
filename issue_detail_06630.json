{"assignees":[],"author":{"id":"MDQ6VXNlcjEzNjA3NjY=","is_bot":false,"login":"jlowe","name":"Jason Lowe"},"body":"**Is your feature request related to a problem? Please describe.**\r\nDuring Spark's shuffle table columns are copied back to the host via `copyToHost`.  Each operation is synchronous with the default stream.  This causes unnecessary synchronization when there are many columns to copy, since only a single synchronization at the end of all copy transfers is necessary.  Also the copy interface does not allow a stream to be specified.\r\n\r\n**Describe the solution you'd like**\r\n`ColumnVector` should provide a `copyToHostAsync` method that can specify an optional stream to use for the copy operations.  The Javadoc for the method should make it clear that the caller must synchronize with the stream before using the resulting `HostColumnVector` instance.\r\n\r\n**Describe alternatives you've considered**\r\nThis can be accomplished today via reaching into the `ColumnVector` and accessing the individual `DeviceMemoryBuffer` instances (e.g.: data, validity, offsets), but this is complicated for the caller and especially so when child columns are involved for nested types.\r\n","closed":false,"closedAt":null,"comments":[{"id":"MDEyOklzc3VlQ29tbWVudDc4MDA5MzQxMA==","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been marked rotten due to no recent activity in the past 90d. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2021-02-16T20:19:50Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/6630#issuecomment-780093410","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDc4MDA5NDQ1MA==","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been marked stale due to no recent activity in the past 30d. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be marked rotten if there is no activity in the next 60d.","createdAt":"2021-02-16T20:21:02Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/6630#issuecomment-780094450","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDc4MTAwNDAwOA==","author":{"login":"sameerz"},"authorAssociation":"CONTRIBUTOR","body":"@jlowe is this still needed?  ","createdAt":"2021-02-18T02:45:01Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/6630#issuecomment-781004008","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDc4MTM3MjM5OQ==","author":{"login":"jlowe"},"authorAssociation":"MEMBER","body":"Yes, the description is still accurate.","createdAt":"2021-02-18T14:14:23Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/6630#issuecomment-781372399","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDg0NDM5MjM4OA==","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2021-05-19T19:11:46Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/6630#issuecomment-844392388","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDg0NDM5NDM1OA==","author":{"login":"jlowe"},"authorAssociation":"MEMBER","body":"Still desired but low priority","createdAt":"2021-05-19T19:14:35Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/6630#issuecomment-844394358","viewerDidAuthor":false}],"createdAt":"2020-10-30T18:05:03Z","id":"MDU6SXNzdWU3MzM0MDcxNjE=","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMzIyMjUyNjE3","name":"Performance","description":"Performance related issue","color":"C2E0C6"},{"id":"MDU6TGFiZWwxNDA1MTQ1NjIz","name":"cuDF (Java)","description":"Affects Java cuDF API.","color":"006b75"},{"id":"MDU6TGFiZWwxNDA1MTQ2OTc1","name":"Spark","description":"Functionality that helps Spark RAPIDS","color":"7400ff"}],"milestone":null,"number":6630,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Java ColumnVector should support async copyToHost","updatedAt":"2021-05-19T20:04:37Z","url":"https://github.com/rapidsai/cudf/issues/6630"}
