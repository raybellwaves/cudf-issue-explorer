{"assignees":[],"author":{"id":"MDQ6VXNlcjU2Njk1OTMw","is_bot":false,"login":"nvdbaranec","name":""},"body":"\r\n`cudf::column` uses `rmm::device_buffer` for internal storage. `rmm::device_buffer` internally stores the stream it was created on.  This can create issues when creating columns on temporary worker-style streams and then returning them to a primary stream.  When the column gets destroyed, rmm throws exceptions about invalid device contexts.\r\n\r\nA `set_stream(rmm::cuda_stream_view)` function that recurses through all children would make it easier to hand off columns between streams. \r\n\r\nWe initially encountered this issue with `cudf::io::column_buffer` which has a similar problem but it will also be an issue for columns themselves.","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5N8-Sp","author":{"login":"bdice"},"authorAssociation":"CONTRIBUTOR","body":"The `rmm::device_buffer` has a [set_stream](https://docs.rapids.ai/api/librmm/nightly/classrmm_1_1device__buffer.html#ab271ced85f304e3061a3ff72526dbc37) method. This proposed API would call that method of the underlying buffer.\r\n\r\nThis seems reasonable from what I can tell, but its utility (transferring ownership between streams) will be limited until we expose streams publicly, aside from the internal I/O methods that @hyperbolic2346 is working on. Perhaps we should wait to add this to the public API until we have a broader discussion of adding streams to libcudf APIs?","createdAt":"2022-11-08T21:10:17Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/12093#issuecomment-1307829417","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5N8-zc","author":{"login":"nvdbaranec"},"authorAssociation":"CONTRIBUTOR","body":"I think that's totally fine.  The stuff Mike is working on is just experimental stuff as is, and doesn't actually require this from `column` itself.","createdAt":"2022-11-08T21:12:19Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/12093#issuecomment-1307831516","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5N-Nmy","author":{"login":"hyperbolic2346"},"authorAssociation":"CONTRIBUTOR","body":"I added a PR showing what we are talking about here. I don't know if this is the best way to expose this, but it hopefully clears it up enough to have a solid conversation about it.","createdAt":"2022-11-09T03:22:50Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/12093#issuecomment-1308154290","viewerDidAuthor":false}],"createdAt":"2022-11-08T17:39:15Z","id":"I_kwDOBWUGps5V3k-g","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMDEzOTg3NTAz","name":"2 - In Progress","description":"Currently a work in progress","color":"fef2c0"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"},{"id":"MDU6TGFiZWwyNTQ2NTIxMDI0","name":"improvement","description":"Improvement / enhancement to an existing function","color":"bfd4f2"}],"milestone":{"number":19,"title":"Enable streams","description":"Enable safe usage of a stream-ordered libcudf API","dueOn":null},"number":12093,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[{"content":"HEART","users":{"totalCount":1}}],"state":"OPEN","title":"[FEA] cudf::column needs a set_stream() function.","updatedAt":"2022-11-19T18:20:31Z","url":"https://github.com/rapidsai/cudf/issues/12093"}
