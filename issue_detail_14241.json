{"assignees":[],"author":{"id":"MDQ6VXNlcjEwNjQ3MDgy","is_bot":false,"login":"mroeschke","name":"Matthew Roeschke"},"body":"**Is your feature request related to a problem? Please describe.**\r\nDate-parsing functionality, e.g. `to_datetime`, does not always correctly handle when string arguments in an iterable have different formats. Currently a format is inferred from the first argument and is applied to all other arguments\r\n\r\n```python\r\nIn [2]: cudf.to_datetime([\"2020-01-01\", \"2020-01-01 10:11:12\"])\r\nOut[2]: DatetimeIndex(['2020-01-01', '2020-01-01'], dtype='datetime64[ns]')  # not OK\r\n\r\nIn [3]: cudf.to_datetime([\"2020-01-01 10:11:12\", \"2020-01-01\"])\r\nOut[3]: DatetimeIndex(['2020-01-01 10:11:12', '2020-01-01 00:00:00'], dtype='datetime64[ns]')  # technically OK\r\n```\r\n\r\n**Describe the solution you'd like**\r\nIdeally each string should be independently parsed to account for mixed formats. pandas 2.0 supports a `format=\"mixed\"` argument for the user to explicit call-out that the data has mixed format to trigger the slower, string-by-string parsing mode\r\n\r\n**Describe alternatives you've considered**\r\nCalling `to_datetime` in a loop over each format.\r\n\r\n**Additional context**\r\nAdd any other context, code examples, or references to existing implementations about the feature request here.\r\n","closed":false,"closedAt":null,"comments":[],"createdAt":"2023-10-02T17:31:07Z","id":"I_kwDOBWUGps5ylIAz","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":null,"number":14241,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Support mixed datetime string formats in date parsing","updatedAt":"2023-10-02T17:31:07Z","url":"https://github.com/rapidsai/cudf/issues/14241"}
