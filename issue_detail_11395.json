{"assignees":[],"author":{"id":"MDQ6VXNlcjM1MDYzMDg=","is_bot":false,"login":"hyperbolic2346","name":"Mike Wilson"},"body":"Nitpick: Looks like `schema_tree_node` needs a constructor. :]\r\n\r\nI would've recommended aggregate initialization, but I'm not sure how appropriate it would be, since it's initializing parent members:\r\n```suggestion\r\n        schema_tree_node col_schema {\r\n          .type            = Type::BYTE_ARRAY,\r\n          .converted_type  = ConvertedType::UNKNOWN,\r\n          .stats_dtype     = statistics_dtype::dtype_byte_array,\r\n          .repetition_type = col_nullable ? OPTIONAL : REQUIRED,\r\n          .name = (schema[parent_idx].name == \"list\") ? \"element\" : col_meta.get_name(),\r\n          .parent_idx  = parent_idx,\r\n          .leaf_column = col\r\n        };\r\n```\r\n\r\nMy personal preference would be to avoid construct-then-initialize. But this is purely stylistic. Please feel free to ignore.\r\n\r\n_Originally posted by @mythrocks in https://github.com/rapidsai/cudf/pull/11328#discussion_r932746165_","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5JRk0j","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2022-08-28T00:14:59Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11395#issuecomment-1229344035","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5Muh4t","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"@mythrocks @hyperbolic2346 I looked through the code in `writer_impl.cu` and I'm not sure what the best approach is here. Aggregate initialization is totally fine with (public) parent classes and members, but the issue with either aggregate initialization or the use of a constructor is that I see at least three variants of these objects in terms of what members are set. It's not clear to me if those are the only options, or if there might even be further combinations of attributes set in future iterations, each of which would necessitate a different constructor signature. With [C++20 designated initializers](https://en.cppreference.com/w/cpp/language/aggregate_initialization#Designated_initializers) we could do this very neatly, but I don't see a clean solution right now. Am I understanding correctly how the object could be used, or do you think there is a simpler constructor we could define to improve the code in its current state?","createdAt":"2022-10-21T17:48:11Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11395#issuecomment-1287265837","viewerDidAuthor":false}],"createdAt":"2022-07-28T23:26:36Z","id":"I_kwDOBWUGps5Oxd2-","labels":[{"id":"MDU6TGFiZWwxMDEzOTg3Nzk5","name":"0 - Waiting on Author","description":"Waiting for author to respond to review","color":"ffb88c"},{"id":"MDU6TGFiZWwxMDEzOTg3OTIx","name":"proposal","description":"Change current process or code","color":"2a2c89"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"},{"id":"MDU6TGFiZWwxMTg1MjQ0MTQy","name":"cuIO","description":"cuIO issue","color":"fef2c0"}],"milestone":null,"number":11395,"projectCards":[{"project":{"name":"Other Issues"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"`schema_tree_node` needs a constructor.","updatedAt":"2023-04-02T22:39:21Z","url":"https://github.com/rapidsai/cudf/issues/11395"}
