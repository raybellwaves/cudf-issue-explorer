{"assignees":[{"id":"MDQ6VXNlcjExMjY5ODE=","login":"wence-","name":"Lawrence Mitchell"}],"author":{"id":"MDQ6VXNlcjExMjY5ODE=","is_bot":false,"login":"wence-","name":"Lawrence Mitchell"},"body":"**Describe the bug**\r\n\r\n```python\r\nIn [49]: col = cudf.core.column.as_column([1, 2, 3, 4])\r\n\r\nIn [50]: col\r\nOut[50]: \r\n<cudf.core.column.numerical.NumericalColumn object at 0x7fcd07e6c4c0>\r\n[\r\n  1,\r\n  2,\r\n  3,\r\n  4\r\n]\r\ndtype: int64\r\n\r\nIn [51]: col[::-1] = cudf.Scalar(7)\r\n\r\nIn [52]: col\r\nOut[52]: \r\n<cudf.core.column.numerical.NumericalColumn object at 0x7fcd07e6c4c0>\r\n[\r\n  1,\r\n  2,\r\n  3,\r\n  4\r\n]\r\ndtype: int64\r\n```\r\n\r\nThis eventually calls `_scatter_by_slice`, which does this:\r\n\r\n```python\r\n    def _scatter_by_slice(\r\n        self,\r\n        key: builtins.slice,\r\n        value: Union[cudf.core.scalar.Scalar, ColumnBase],\r\n    ) -> Optional[Self]:\r\n        \"\"\"If this function returns None, it's either a no-op (slice is empty),\r\n        or the inplace replacement is already performed (fill-in-place).\r\n        \"\"\"\r\n        start, stop, step = key.indices(len(self))\r\n        if start >= stop:\r\n            return None\r\n        num_keys = len(range(start, stop, step))\r\n\r\n```\r\n\r\nBut that first check is not right to determine if the slice is empty.\r\n\r\n```python\r\n# x[::-1]\r\nslice(None, None, -1).indices(3)\r\n# => (2, -1, -1)\r\n```\r\n\r\n**Expected behavior**\r\n\r\nThis should work.","closed":false,"closedAt":null,"comments":[],"createdAt":"2023-06-08T08:50:43Z","id":"I_kwDOBWUGps5oJ1AE","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxMDEzOTg3MzUy","name":"0 - Backlog","description":"In queue waiting for assignment","color":"d4c5f9"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":{"number":5,"title":"Pandas API Alignment and Coverage","description":"","dueOn":null},"number":13532,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] `Column._scatter_by_slice` doesn't handle negative-stride slices correctly.","updatedAt":"2023-06-08T08:50:44Z","url":"https://github.com/rapidsai/cudf/issues/13532"}
