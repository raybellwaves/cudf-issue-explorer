{"assignees":[],"author":{"id":"MDQ6VXNlcjU2Njk1OTMw","is_bot":false,"login":"nvdbaranec","name":""},"body":"\r\nRan into some code in a PR that was staging results into a std::vector just so that it could be passed to a factory function.  Seems like it would be useful to have versions that take (device) iterators directly. ","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5BnoFF","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2022-04-17T16:02:57Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10453#issuecomment-1100906821","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5FoZTR","author":{"login":"GregoryKimball"},"authorAssociation":"CONTRIBUTOR","body":"This reminds me of the [string column factory discussion](https://github.com/rapidsai/cudf/issues/5150#issuecomment-626671698) in #5150. @nvdbaranec would you please post a snippet showing what you have in mind?","createdAt":"2022-06-28T04:48:28Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10453#issuecomment-1168217297","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5HelRK","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2022-07-29T12:05:09Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10453#issuecomment-1199199306","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5HfnqC","author":{"login":"nvdbaranec"},"authorAssociation":"CONTRIBUTOR","body":"> This reminds me of the [string column factory discussion](https://github.com/rapidsai/cudf/issues/5150#issuecomment-626671698) in #5150. @nvdbaranec would you please post a snippet showing what you have in mind?\r\n\r\nLate reply.   Snippet would pretty much be exactly like David's example in your link, \r\n\r\n```\r\ntemplate <typename Iterator>\r\nrmm::device_uvector<T> make_device_uvector_async(\r\n  Iterator values_begin, Iterator values_end,\r\n  rmm::cuda_stream_view stream        = cudf::default_stream_value,\r\n  rmm::mr::device_memory_resource* mr = rmm::mr::get_current_device_resource())\r\n```","createdAt":"2022-07-29T15:00:29Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10453#issuecomment-1199471234","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5HgRDA","author":{"login":"davidwendt"},"authorAssociation":"CONTRIBUTOR","body":"Would you be able to find any examples you mention in the description?\r\nAre you saying device data is being copied into a `std::vector` to build a `device_uvector`?","createdAt":"2022-07-29T16:11:33Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10453#issuecomment-1199640768","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5HgeFo","author":{"login":"nvdbaranec"},"authorAssociation":"CONTRIBUTOR","body":"No, just that we have a lot of cases where the input is expressed as an iterator that the user has to manually put in a `std::vector` before calling the `host_span` overload.  If you could just pass the iterators and let the function do the staging it would cut down on some clutter.\r\n\r\nI believe the specific example was this, but it's pretty common in the code.\r\n\r\nhttps://github.com/rapidsai/cudf/blob/03f1c1c5c5fcf90bd594aabd41b6e15f54690777/java/src/main/native/src/row_conversion.cu#L1842","createdAt":"2022-07-29T16:34:03Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10453#issuecomment-1199694184","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5HgepG","author":{"login":"nvdbaranec"},"authorAssociation":"CONTRIBUTOR","body":"Although I guess I did specify (device) in the description.  Those would be useful as well, though maybe only applicable in limited circumstances.","createdAt":"2022-07-29T16:34:59Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10453#issuecomment-1199696454","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5HghuQ","author":{"login":"davidwendt"},"authorAssociation":"CONTRIBUTOR","body":"Sorry, this does not make sense to me. The iterator is for host data then?\r\nThere is no shortcut here. \r\nThe data would need to be copied to a host vector (i.e. `std::vector`) before creating a `device_uvector`.\r\nThe iterator version does not help solve this fact.","createdAt":"2022-07-29T16:40:24Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10453#issuecomment-1199709072","viewerDidAuthor":false}],"createdAt":"2022-03-18T15:49:01Z","id":"I_kwDOBWUGps5F9dsm","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMDEzOTg3OTIx","name":"proposal","description":"Change current process or code","color":"2a2c89"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"}],"milestone":null,"number":10453,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Iterator versions of make_device_uvector_sync() and make_device_uvector_async()","updatedAt":"2022-07-29T16:40:25Z","url":"https://github.com/rapidsai/cudf/issues/10453"}
