{"assignees":[],"author":{"id":"MDQ6VXNlcjMwMjcxOTU=","is_bot":false,"login":"devavret","name":"Devavret Makkar"},"body":"Improve readability of thread id based branches by giving them more descriptive names.\r\n\r\n#### e.g.\r\n```c++\r\nif (!t) // is actually a t == 0\r\n```\r\n#### and\r\nhttps://github.com/rapidsai/cudf/blob/57ef76927373d7260b6a0eda781e59a4c563d36e/cpp/src/io/statistics/column_stats.cu#L285\r\nIs actually a `lane_id == 0`\r\nAs demonstrated in https://github.com/rapidsai/cudf/issues/6241#issuecomment-693125331, prefer cooperative groups for this.\r\n\r\n\r\n#### and\r\nhttps://github.com/rapidsai/cudf/blob/85cd56dfb3449140f18c7cef3a3be01ac976fd14/cpp/src/io/parquet/page_enc.cu#L1256\r\nis actually ~`t < 32`~ `lane_id == 31`. (~I think this might be an oversight,~ ignore as it might be fixed in #6238 ).","closed":false,"closedAt":null,"comments":[{"id":"MDEyOklzc3VlQ29tbWVudDY5Mjg5NzU4Mg==","author":{"login":"OlivierNV"},"authorAssociation":"CONTRIBUTOR","body":"Nope: last one is `if (lane_id == 31)`, for those that prefer the \"lane id\" terminology.","createdAt":"2020-09-15T18:33:52Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/6241#issuecomment-692897582","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDY5Mjk0MTMzNQ==","author":{"login":"devavret"},"authorAssociation":"CONTRIBUTOR","body":"> Nope: last one is `if (lane_id == 31)`, for those that prefer the \"lane id\" terminology.\r\n\r\nThanks. Thus demonstrated that it wasn't so readable for me ðŸ˜† ","createdAt":"2020-09-15T19:49:06Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/6241#issuecomment-692941335","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDY5MzA5NDAzMQ==","author":{"login":"vuule"},"authorAssociation":"CONTRIBUTOR","body":"Also, isn't `!(t & 0x1f)` actually `t % 32 == 0`, not `t == 0` ?\r\nEdit: confirmed for modulo. Also confirmed that the compiler generates the same code.","createdAt":"2020-09-16T00:08:39Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/6241#issuecomment-693094031","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDY5MzEyNTMzMQ==","author":{"login":"jrhemstad"},"authorAssociation":"CONTRIBUTOR","body":"> Also, isn't `!(t & 0x1f)` actually `t % 32 == 0`, not `t == 0` ?\r\n> Edit: confirmed for modulo. Also confirmed that the compiler generates the same code.\r\n\r\nhttps://godbolt.org/z/a9ercr\r\n\r\nNote that using CG also generates the same code, but it actually gives you access to the special `laneid` register. ","createdAt":"2020-09-16T02:06:42Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":2}},{"content":"EYES","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/6241#issuecomment-693125331","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDY5MzMxOTE0Mw==","author":{"login":"devavret"},"authorAssociation":"CONTRIBUTOR","body":"> Also, isn't `!(t & 0x1f)` actually `t % 32 == 0`, not `t == 0` ?\r\n\r\nThat's what I wrote. `lane_id == 0`","createdAt":"2020-09-16T10:31:16Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/6241#issuecomment-693319143","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDc4MDEyMzUyNQ==","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been marked rotten due to no recent activity in the past 90d. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2021-02-16T21:17:44Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/6241#issuecomment-780123525","viewerDidAuthor":false}],"createdAt":"2020-09-15T18:12:23Z","id":"MDU6SXNzdWU3MDIxNDUzMzc=","labels":[{"id":"MDU6TGFiZWwxMDE2MzMyOTQ4","name":"good first issue","description":"Good for newcomers","color":"7057ff"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"},{"id":"MDU6TGFiZWwxMTg1MjQ0MTQy","name":"cuIO","description":"cuIO issue","color":"fef2c0"}],"milestone":null,"number":6241,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}},{"content":"HEART","users":{"totalCount":1}}],"state":"OPEN","title":"[FEA] Improve readability of thread id based branching","updatedAt":"2024-02-23T18:02:26Z","url":"https://github.com/rapidsai/cudf/issues/6241"}
