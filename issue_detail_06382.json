{"assignees":[],"author":{"id":"MDQ6VXNlcjQyNjI0NzAz","is_bot":false,"login":"rgsl888prabhu","name":"Ram (Ramakrishna Prabhu)"},"body":"**Describe the bug**\r\n`cudf.read_json` is failing to parse DateTime64 typed columns correctly when expected dtype is provided. \r\n\r\n**Steps/Code to reproduce bug**\r\n```\r\n>>> import cudf\r\n>>> import pandas as pd\r\n>>> pdf = pd.DataFrame({\"a\":[45461150050, 55414521000, 4544624522000, 4546345758000, 45445254600]}, dtype='datetime64[ms]')\r\n>>> pdf\r\n                        a\r\n0 1970-01-01 00:00:45.461\r\n1 1970-01-01 00:00:55.414\r\n2 1970-01-01 01:15:44.624\r\n3 1970-01-01 01:15:46.345\r\n4 1970-01-01 00:00:45.445\r\n>>> buffer = pdf.to_json(compression='infer', lines=True, orient=\"records\")\r\n>>> buffer\r\n'{\"a\":45461}\\n{\"a\":55414}\\n{\"a\":4544624}\\n{\"a\":4546345}\\n{\"a\":45445}'\r\n>>> df = cudf.read_json(buffer, ompression='infer', lines=True, orient=\"records\", dtype=['timestamp[ms]'])\r\n>>> df\r\n                        a\r\n0 1969-12-31 23:59:59.999\r\n1 1969-12-31 23:59:59.999\r\n2 1969-12-31 23:59:59.999\r\n3 1969-12-31 23:59:59.999\r\n4 1969-12-31 23:59:59.999\r\n```\r\nIf `dtype` isn't specified, and if we cast the resulting int64 column, we get expected result\r\n```\r\n>>> expected_df = cudf.read_json(buffer, ompression='infer', lines=True, orient=\"records\")\r\n>>> expected_df['a'] = expected_df['a'].astype('datetime64[ms]')\r\n>>> expected_df\r\n                        a\r\n0 1970-01-01 00:00:45.461\r\n1 1970-01-01 00:00:55.414\r\n2 1970-01-01 01:15:44.624\r\n3 1970-01-01 01:15:46.345\r\n4 1970-01-01 00:00:45.445\r\n>>> \r\n```\r\n\r\n**Expected behavior**\r\n`cudf.read_json` should handle dtype arguement.\r\n```\r\n>>> df = cudf.read_json(buffer, ompression='infer', lines=True, orient=\"records\", dtype=['timestamp[ms]'])\r\n>>> df\r\n\r\n                        a\r\n0 1970-01-01 00:00:45.461\r\n1 1970-01-01 00:00:55.414\r\n2 1970-01-01 01:15:44.624\r\n3 1970-01-01 01:15:46.345\r\n4 1970-01-01 00:00:45.445\r\n>>> \r\n```\r\n\r\n**Environment overview (please complete the following information)**\r\n - Environment location: Bare-metal\r\n - Method of cuDF install: conda","closed":false,"closedAt":null,"comments":[{"id":"MDEyOklzc3VlQ29tbWVudDc4MDEyMzM2OQ==","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been marked rotten due to no recent activity in the past 90d. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2021-02-16T21:17:27Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/6382#issuecomment-780123369","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5-IA0o","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"This still fails, but it does so differently now in dtype detection of the timestamp type (also the signature of `read_json` has changed subtly, the dtype needs to be a dict now):\r\n```\r\nIn [6]: >>> import cudf\r\n   ...: >>> import pandas as pd\r\n   ...: >>> pdf = pd.DataFrame({\"a\":[45461150050, 55414521000, 4544624522000, 4546345758000, 45445254600]}, dtype='datetime64[ms]')\r\n   ...: >>> buffer = pdf.to_json(compression='infer', lines=True, orient=\"records\")\r\n   ...: >>> buffer\r\n   ...: '{\"a\":45461}\\n{\"a\":55414}\\n{\"a\":4544624}\\n{\"a\":4546345}\\n{\"a\":45445}'\r\n   ...: >>> df = cudf.read_json(buffer, compression='infer', lines=True, orient=\"records\", dtype={\"a\": 'timestamp[ms]'})\r\n   ...: >>> df\r\n...\r\n\r\nFile ~/.conda/envs/rapids/lib/python3.10/site-packages/pandas/core/dtypes/common.py:1645, in pandas_dtype(dtype)\r\n   1640     with warnings.catch_warnings():\r\n   1641         # GH#51523 - Series.astype(np.integer) doesn't show\r\n   1642         # numpy deprecation warning of np.integer\r\n   1643         # Hence enabling DeprecationWarning\r\n   1644         warnings.simplefilter(\"always\", DeprecationWarning)\r\n-> 1645         npdtype = np.dtype(dtype)\r\n   1646 except SyntaxError as err:\r\n   1647     # np.dtype uses `eval` which can raise SyntaxError\r\n   1648     raise TypeError(f\"data type '{dtype}' not understood\") from err\r\n\r\nTypeError: data type 'timestamp[ms]' not understood\r\n```","createdAt":"2024-05-16T19:29:05Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/6382#issuecomment-2116029736","viewerDidAuthor":false}],"createdAt":"2020-09-30T22:49:03Z","id":"MDU6SXNzdWU3MTIzMzEwMjg=","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"},{"id":"MDU6TGFiZWwxMTg1MjQ0MTQy","name":"cuIO","description":"cuIO issue","color":"fef2c0"}],"milestone":null,"number":6382,"projectCards":[{"project":{"name":"Bug Squashing"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] `cudf.read_json` is incorrectly parsing TimeStamp typed columns","updatedAt":"2024-05-16T19:29:06Z","url":"https://github.com/rapidsai/cudf/issues/6382"}
