{"assignees":[],"author":{"id":"MDQ6VXNlcjExMjY5ODE=","is_bot":false,"login":"wence-","name":"Lawrence Mitchell"},"body":"In `copying.copy_range` we have an `inplace=False/True` argument.\r\n\r\nIf `inplace` is `True`, then the column is modified in place, if `inplace` is False, a new (copied) column is created and then modified. If the case that the range we are copying is empty, at present `inplace=False` _still_ returns a new copy (even though `copy_range` is a no-op in this situation).\r\n\r\nShould it be allowed that\r\n\r\n```\r\ncopy_range(source, target, empty_range, inplace=False)\r\n```\r\n\r\nCan return `target` (rather than a copy of `target`)?\r\n\r\nSee discussion where this came p: https://github.com/rapidsai/cudf/pull/12075#discussion_r1015307155\r\n      \r\n\r\n","closed":false,"closedAt":null,"comments":[],"createdAt":"2022-11-14T11:17:05Z","id":"I_kwDOBWUGps5WTLWE","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjQ=","name":"question","description":"Further information is requested","color":"D4C5F9"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":{"number":6,"title":"cuDF Python Refactoring","description":"Refactor Python layers to improve performance, robustness, and extensibility. Ongoing development is being guided by the roadmap and evolving development guide.","dueOn":null},"number":12135,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"Behaviour of inplace for `copy_range` when range is empty.","updatedAt":"2022-11-19T21:40:14Z","url":"https://github.com/rapidsai/cudf/issues/12135"}
