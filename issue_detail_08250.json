{"assignees":[{"id":"MDQ6VXNlcjE1MzgxNjU=","login":"vyasr","name":"Vyas Ramasubramani"}],"author":{"id":"MDQ6VXNlcjE1MzgxNjU=","is_bot":false,"login":"vyasr","name":"Vyas Ramasubramani"},"body":"**Describe the bug**\r\nWe currently make use of certain numpy and pandas utilities for dtype checking in various parts of our code base. These utilities are not reliable for us because they do not necessarily work on our extension dtypes, but currently these issues are being handled on a case-by-case basis, leaving us open to various bugs. We should instead write our own utilities that handle our own dtypes in addition to the common dtypes from other projects.\r\n\r\n**Steps/Code to reproduce bug**\r\nHere's one example for `np.issubdtype`.\r\n```\r\n>>> np.issubdtype(cudf.Decimal64Dtype(10, 2), np.int32)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/nfs/vyasr/local/rapids/compose/etc/conda/cuda_11.2.0/envs/rapids/lib/python3.7/site-packages/numpy/core/numerictypes.py\", line 419, in issubdtype\r\n    arg1 = dtype(arg1).type\r\nTypeError: Cannot interpret 'Decimal64Dtype(precision=10, scale=2)' as a data type\r\n```\r\n\r\n**Expected behavior**\r\nReturns True or False\r\n\r\n**Additional context**\r\nHere's a not necessarily exhaustive list of functions that may need to be replaced (some have equivalents that simply aren't used everywhere):\r\n- [ ] `np.issubdtype`\r\n- [ ] `np.can_cast`\r\n- [ ] Anything from `pd.api.types`\r\n- [ ] `np.find_common_type`","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps43I-nb","author":{"login":"galipremsagar"},"authorAssociation":"CONTRIBUTOR","body":"@vyasr Can we move this to `21.12`?","createdAt":"2021-09-22T16:43:10Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/8250#issuecomment-925100507","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps43JhiG","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"Yup, moved.","createdAt":"2021-09-22T19:20:09Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/8250#issuecomment-925243526","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps49geIz","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2022-02-07T21:04:40Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/8250#issuecomment-1031922227","viewerDidAuthor":false}],"createdAt":"2021-05-14T16:52:41Z","id":"MDU6SXNzdWU4OTIwODQwNzc=","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxMDEzOTg3MzUy","name":"0 - Backlog","description":"In queue waiting for assignment","color":"d4c5f9"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":{"number":6,"title":"cuDF Python Refactoring","description":"Refactor Python layers to improve performance, robustness, and extensibility. Ongoing development is being guided by the roadmap and evolving development guide.","dueOn":null},"number":8250,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}}],"state":"OPEN","title":"[BUG] Implement custom dtype handling utilities","updatedAt":"2024-02-23T18:42:25Z","url":"https://github.com/rapidsai/cudf/issues/8250"}
