{"assignees":[],"author":{"id":"MDQ6VXNlcjEwNjQ3MDgy","is_bot":false,"login":"mroeschke","name":"Matthew Roeschke"},"body":"**Describe the bug**\r\ncudf.from_pandas unnecessarily sorts incoming MultiIndex levels\r\n\r\n**Steps/Code to reproduce bug**\r\n```python\r\nIn [1]: import cudf\r\n\r\nIn [2]: mi = cudf.MultiIndex.from_tuples([(\"a\", \"b\"), (\"c\", \"d\")])\r\n\r\nIn [4]: import pandas\r\n\r\nIn [5]: mi = pandas.MultiIndex.from_tuples([(\"e\", \"f\"), (\"c\", \"d\")])\r\n\r\nIn [6]: new_mi = mi.insert(0, (\"a\", \"b\"))\r\n\r\nIn [7]: new_mi.levels[0]\r\nOut[7]: Index(['c', 'e', 'a'], dtype='object')\r\n\r\nIn [8]: cudf.from_pandas(new_mi).levels[0]\r\nOut[8]: StringIndex(['a' 'e' 'c'], dtype='object', name=0)\r\n```\r\n\r\n**Expected behavior**\r\nNot sure if there's a specific reason why cudf needs to sort the levels or if there are any subsequent behaviors dependent on sorting, but it would be great if level order was preserved. This could be gated behind `mode.pandas_compatible`\r\n\r\n**Environment overview (please complete the following information)**\r\n - Environment location: Bare-metal\r\n - Method of cuDF install: conda\r\n   - If method of install is [Docker], provide `docker pull` & `docker run` commands used\r\n\r\n**Environment details**\r\nPlease run and paste the output of the `cudf/print_env.sh` script here, to gather any other relevant environment details\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5lUkPg","author":{"login":"galipremsagar"},"authorAssociation":"CONTRIBUTOR","body":"@mroeschke I think there is an inconsistency with `pd.MultiIndex.levels`:\r\n```python\r\nIn [1]: import pandas as pd\r\n\r\nIn [2]: mi = pd.MultiIndex.from_tuples([(\"e\", \"f\"), (\"c\", \"d\")])\r\n\r\nIn [3]: mi\r\nOut[3]: \r\nMultiIndex([('e', 'f'),\r\n            ('c', 'd')],\r\n           )\r\n\r\nIn [4]: mi.levels[0]\r\nOut[4]: Index(['c', 'e'], dtype='object')\r\n\r\nIn [5]: mi.levels[1]\r\nOut[5]: Index(['d', 'f'], dtype='object')\r\n\r\nIn [6]: new_mi = mi.insert(0, (\"a\", \"b\"))\r\n\r\nIn [7]: new_mi\r\nOut[7]: \r\nMultiIndex([('a', 'b'),\r\n            ('e', 'f'),\r\n            ('c', 'd')],\r\n           )\r\n\r\nIn [8]: new_mi.levels[0]\r\nOut[8]: Index(['c', 'e', 'a'], dtype='object')\r\n\r\nIn [9]: mi = pd.MultiIndex.from_tuples([(\"a\", \"b\"), (\"e\", \"f\"), (\"c\", \"d\")])\r\n\r\nIn [10]: mi\r\nOut[10]: \r\nMultiIndex([('a', 'b'),\r\n            ('e', 'f'),\r\n            ('c', 'd')],\r\n           )\r\n\r\nIn [11]: mi.levels[0]\r\nOut[11]: Index(['a', 'c', 'e'], dtype='object')\r\n```\r\n\r\nis `#8` the correct behavior or `#11`? Any idea how the `.levels[0]` are ordered during construction? Clearly, they aren't being ordered by their occurrence order. I think they are being _sorted_?","createdAt":"2023-08-30T21:44:20Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14007#issuecomment-1699890144","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5lUpiS","author":{"login":"mroeschke"},"authorAssociation":"CONTRIBUTOR","body":"I think in pandas during the initial construction for of a `MultiIndex`, level values are sorted. Then for `insert` specifically, adding a new level value appends to the end of `.levels[n]` so that `.codes[n]` doesn't need to be recomputed if `sorted(.levels[n] + new value)` changed the ordering.\r\n\r\nSo I don't think `.levels[n]` necessarily has an ordering convention unfortunately","createdAt":"2023-08-30T22:06:36Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14007#issuecomment-1699911826","viewerDidAuthor":false}],"createdAt":"2023-08-30T18:29:01Z","id":"I_kwDOBWUGps5vtaTP","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"}],"milestone":null,"number":14007,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] cudf.from_pandas unnecessarily sorts incoming MultiIndex levels","updatedAt":"2024-02-23T18:02:31Z","url":"https://github.com/rapidsai/cudf/issues/14007"}
