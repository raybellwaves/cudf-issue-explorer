{"assignees":[{"id":"MDQ6VXNlcjc0MTY5MzU=","login":"ttnghia","name":"Nghia Truong"}],"author":{"id":"MDQ6VXNlcjc0MTY5MzU=","is_bot":false,"login":"ttnghia","name":"Nghia Truong"},"body":"For nested sliced columns that have an offsets column child, their offsets columns may contain values that do not start from zero. For example:\r\n```\r\noffsets = [5, 7, 20, ...]\r\n```\r\n\r\nMany operations on these sliced columns need to generate an output offsets column that starts with zero. For example, with the input column having offsets given above, the output offsets column should be:\r\n```\r\noffsets = [0, 2, 13, ...]\r\n```\r\nSuch output offsets column is generated simply by subtracting all the values with the first value. Yes, very simple. \r\n\r\nI would like to have an internal API implementing this feature. Currently, there are several other APIs using it by implementing private code in their `.cu` files. For example:\r\n * `lists/segmented_sort.cu`\r\n * `lists/drop_list_duplicates` (FYI: https://github.com/rapidsai/cudf/pull/9202#discussion_r712266408)","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps43CCS2","author":{"login":"jrhemstad"},"authorAssociation":"CONTRIBUTOR","body":"Are there situations where we could instead create a transform iterator to materialize the \"clean\" offsets instead of needing to materialize the new offsets? ","createdAt":"2021-09-20T20:40:25Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/9256#issuecomment-923280566","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps43CCvf","author":{"login":"ttnghia"},"authorAssociation":"CONTRIBUTOR","body":"I believe the answer is yes. However, in the two files listed above, a new offsets column is needed to generating an output lists column (using `make_lists_column`).","createdAt":"2021-09-20T20:43:06Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/9256#issuecomment-923282399","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps43CE4W","author":{"login":"jrhemstad"},"authorAssociation":"CONTRIBUTOR","body":"Maybe the solution here can then be to add that iterator and then provide a convenience function that just uses that iterator to fill a new column. ","createdAt":"2021-09-20T20:51:44Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":2}}],"url":"https://github.com/rapidsai/cudf/issues/9256#issuecomment-923291158","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps47FWVw","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2021-12-10T20:03:09Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/9256#issuecomment-991257968","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps4_ckf9","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2022-03-10T20:03:25Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/9256#issuecomment-1064454141","viewerDidAuthor":false}],"createdAt":"2021-09-20T19:59:02Z","id":"I_kwDOBWUGps47r1QR","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"},{"id":"MDU6TGFiZWwyNTQ2NTIxMDI0","name":"improvement","description":"Improvement / enhancement to an existing function","color":"bfd4f2"},{"id":"MDU6TGFiZWwyNTQ2NTIxMDY4","name":"non-breaking","description":"Non-breaking change","color":"0e8a16"}],"milestone":null,"number":9256,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":2}}],"state":"OPEN","title":"[FEA] Add an internal utility API to return an offsets column of a sliced column starting with zero","updatedAt":"2024-02-23T18:42:45Z","url":"https://github.com/rapidsai/cudf/issues/9256"}
