{"assignees":[],"author":{"id":"MDQ6VXNlcjExNjY0MjU5","is_bot":false,"login":"galipremsagar","name":"GALI PREM SAGAR"},"body":"I am getting an AssertionError in the ydata test note book: https://github.com/ydataai/ydata-profiling/blob/develop/tests/notebooks/meteorites.ipynb\r\n\r\n```python\r\nfrom pathlib import Path\r\n\r\nimport numpy as np\r\nimport pandas as pd\r\nimport requests\r\nfrom IPython.display import display\r\nfrom IPython.utils.capture import capture_output\r\n\r\nimport ydata_profiling\r\nfrom ydata_profiling.utils.cache import cache_file\r\n\r\nfile_name = cache_file(\r\n    \"meteorites.csv\",\r\n    \"https://data.nasa.gov/api/views/gh4g-9sfh/rows.csv?accessType=DOWNLOAD\",\r\n)\r\n\r\ndf = pd.read_csv(file_name)\r\n\r\n# Note: Pandas does not support dates before 1880, so we ignore these for this analysis\r\ndf[\"year\"] = pd.to_datetime(df[\"year\"], errors=\"coerce\")\r\n\r\n# Example: Constant variable\r\ndf[\"source\"] = \"NASA\"\r\n\r\n# Example: Boolean variable\r\ndf[\"boolean\"] = np.random.choice([True, False], df.shape[0])\r\n\r\n# Example: Mixed with base types\r\ndf[\"mixed\"] = np.random.choice([1, \"A\"], df.shape[0])\r\n\r\n# Example: Highly correlated variables\r\ndf[\"reclat_city\"] = df[\"reclat\"] + np.random.normal(scale=5, size=(len(df)))\r\n\r\n# Example: Duplicate observations\r\nduplicates_to_add = pd.DataFrame(df.iloc[0:10])\r\nduplicates_to_add[\"name\"] = duplicates_to_add[\"name\"] + \" copy\"\r\n\r\ndf = pd.concat([df, duplicates_to_add], ignore_index=True)\r\n\r\n# Inline report without saving\r\nwith capture_output() as out:\r\n    pr = df.profile_report(\r\n        sort=None,\r\n        html={\"style\": {\"full_width\": True}},\r\n        progress_bar=False,\r\n        minimal=True,\r\n    )\r\n    display(pr)\r\n\r\nassert len(out.outputs) == 2\r\nassert out.outputs[0].data[\"text/plain\"] == \"<IPython.core.display.HTML object>\"\r\nassert out.outputs[1].data[\"text/plain\"] == \"\"\r\n```\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nAssertionError                            Traceback (most recent call last)\r\nCell In[3], line 11\r\n      3     pr = df.profile_report(\r\n      4         sort=None,\r\n      5         html={\"style\": {\"full_width\": True}},\r\n      6         progress_bar=False,\r\n      7         minimal=True,\r\n      8     )\r\n      9     display(pr)\r\n---> 11 assert len(out.outputs) == 2\r\n     12 assert out.outputs[0].data[\"text/plain\"] == \"<IPython.core.display.HTML object>\"\r\n     13 assert out.outputs[1].data[\"text/plain\"] == \"\"\r\n\r\nAssertionError: \r\n```","closed":false,"closedAt":null,"comments":[],"createdAt":"2023-11-28T18:10:50Z","id":"I_kwDOBWUGps54Gsc_","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxMDEzOTg3MzUy","name":"0 - Backlog","description":"In queue waiting for assignment","color":"d4c5f9"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"},{"id":"LA_kwDOBWUGps8AAAABlj4eYg","name":"cudf.pandas","description":"Issues specific to cudf.pandas","color":"984DFB"}],"milestone":{"number":33,"title":"Profiler - cudf.pandas","description":"Tasks related to improving cudf.pandas profiler.","dueOn":null},"number":14516,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] AssertionError when `cudf.pandas` is used with `ydata_profiling` ","updatedAt":"2024-04-12T15:54:37Z","url":"https://github.com/rapidsai/cudf/issues/14516"}
