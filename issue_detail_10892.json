{"assignees":[],"author":{"id":"MDQ6VXNlcjc0MTY5MzU=","is_bot":false,"login":"ttnghia","name":"Nghia Truong"},"body":"Sometimes, we want to compare rows of a table with a single element given as a scalar. In order to do that, at the caller site, we have to convert the scalar into a column of one row, then convert that column into a table, then pass both tables into the comparator. This is repetitive and tedious.\r\n\r\nWe should add overloads for the row comparator that can automatically do this. The caller just needs to pass in the input table and input scalar.","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5DbGAY","author":{"login":"ttnghia"},"authorAssociation":"CONTRIBUTOR","body":"Reference: https://github.com/rapidsai/cudf/pull/10883#discussion_r876570411","createdAt":"2022-05-19T04:00:48Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10892#issuecomment-1131175960","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5DbKEv","author":{"login":"ttnghia"},"authorAssociation":"CONTRIBUTOR","body":"This issue depends on https://github.com/rapidsai/cudf/issues/10893","createdAt":"2022-05-19T04:35:56Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10892#issuecomment-1131192623","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5FGnsX","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2022-06-18T05:02:42Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10892#issuecomment-1159363351","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5IjYKX","author":{"login":"bdice"},"authorAssociation":"CONTRIBUTOR","body":"This should be worked on. Without a comparator for tables/columns and scalars, lifetime management of a column derived from the scalar gets very awkward. https://github.com/rapidsai/cudf/blob/ee15d1c10b51169abe26b1fa052ae568296696d5/cpp/src/lists/contains.cu#L251-L268\r\n\r\nI commented here:\r\nhttps://github.com/rapidsai/cudf/pull/10548/files#r946174668\r\n\r\n> Upon further investigation: the current state is quite yucky, with lifetime management for one code path but not the other. We should be able to handle this a different way, by making a comparator that accepts a scalar, owns the temporary column, and accepts one index (for the column/table input). Centralizing lifetime management in the comparator has been part of our existing designs, so that's probably good to continue.\r\n> There aren't a lot of alternatives I can see without improving this at the comparator level, but it's pretty gross in the current state.\r\n","createdAt":"2022-08-16T22:27:36Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10892#issuecomment-1217233559","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5IjiBr","author":{"login":"ttnghia"},"authorAssociation":"CONTRIBUTOR","body":"Note that this issue is relevant not just for equality comparison but for lexicographic comparison. Usage of that case can be binary searching or many other comparison cases involving scalar.","createdAt":"2022-08-16T23:33:29Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10892#issuecomment-1217273963","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5KbtC2","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2022-09-16T00:16:10Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10892#issuecomment-1248776374","viewerDidAuthor":false}],"createdAt":"2022-05-19T04:00:28Z","id":"I_kwDOBWUGps5J-tOe","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"}],"milestone":{"number":2,"title":"List and Struct data types and operations","description":"","dueOn":null},"number":10892,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Add overloads for row comparator that automatically handle comparisons between rows of a table with a scalar","updatedAt":"2024-02-23T18:42:36Z","url":"https://github.com/rapidsai/cudf/issues/10892"}
