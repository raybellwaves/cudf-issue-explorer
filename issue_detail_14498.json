{"assignees":[{"id":"MDQ6VXNlcjMxOTA0MDU=","login":"shwina","name":"Ashwin Srinath"}],"author":{"id":"MDQ6VXNlcjg0NTczODg=","is_bot":false,"login":"beckernick","name":"Nick Becker"},"body":"It's fairly common for workflows to involve processing 1-2 large tables (e.g., financial transaction data, website clicks, or sensor readings) and 1-2 smaller tables (e.g., customer, stock, store, or sensor IDs and attributes).\r\n\r\nWe'd like to enable people using pandas for these workloads today to seamlessly accelerate their code, but these kinds of workflows are at risk of running out of memory due to often requiring multiple dataframes to be active at once.\r\n\r\nFor example, loading the following CSV file containing ~12.5 GB of data (19 GB on disk) requires a peak of about 36 GB of GPU memory. If a user's workflow will have already created nearly any cuDF objects, they'll be at high risk of running out of memory on a 40 GB A100.\r\n\r\n```python\r\nimport cudf\r\nimport pandas as pd\r\nN = 260000000\r\nK = 5\r\n\r\ndtypes = {f\"x{i}\": float for i in range(K)}\r\ndtypes[\"id\"] = int\r\n\r\ndf = cudf.datasets.randomdata(\r\n    nrows=N,\r\n    dtypes=dtypes,\r\n    seed=12,\r\n)\r\nprint(df.memory_usage().sum() / 1e9)\r\ndf.to_csv(\"df1.csv\", chunksize=1e7)\r\n12.48\r\n```\r\n\r\n```python\r\nimport cudf\r\ndf = cudf.read_csv(\"df1.csv\")\r\n# Baseline GPU memory: 417.00 MB. Peak GPU memory: 35835.00 MB\r\n```\r\n\r\nAs cudf.pandas already uses the CPU when a workflow would otherwise throw an error in cuDF, we should explore enabling cuDF spilling to potentially prevent the out-of-memory errors arising from operations that would have succeeded if not for other cuDF objects in memory.","closed":false,"closedAt":null,"comments":[],"createdAt":"2023-11-27T17:53:38Z","id":"I_kwDOBWUGps53-OO_","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"LA_kwDOBWUGps8AAAABlj4eYg","name":"cudf.pandas","description":"Issues specific to cudf.pandas","color":"984DFB"}],"milestone":{"number":36,"title":"cudf.pandas API coverage","description":"","dueOn":null},"number":14498,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Enable cuDF spilling in cudf.pandas by default","updatedAt":"2024-05-16T05:09:14Z","url":"https://github.com/rapidsai/cudf/issues/14498"}
