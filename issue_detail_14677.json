{"assignees":[],"author":{"id":"MDQ6VXNlcjM0NDEzMjE=","is_bot":false,"login":"revans2","name":"Robert (Bobby) Evans"},"body":"**Is your feature request related to a problem? Please describe.**\r\nThis is very similar to https://github.com/rapidsai/cudf/issues/8227 except this is for instances of Table. Table is not nearly as important as Scalar because it does not directly reference GPU memory. But it would still be very nice to not leak them as they can cause off heap memory to grow.\r\n\r\n**Describe the solution you'd like**\r\nThe same leak tracking and debugging done for ColumnVector should be applied to Table. Except Table does not do reference counting so it should be much simpler.","closed":false,"closedAt":null,"comments":[],"createdAt":"2023-12-27T22:38:47Z","id":"I_kwDOBWUGps56p-Ad","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxNDA1MTQ1NjIz","name":"cuDF (Java)","description":"Affects Java cuDF API.","color":"006b75"},{"id":"MDU6TGFiZWwxNDA1MTQ2OTc1","name":"Spark","description":"Functionality that helps Spark RAPIDS","color":"7400ff"}],"milestone":null,"number":14677,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Leak Tracking for java Table instances","updatedAt":"2024-03-04T15:41:52Z","url":"https://github.com/rapidsai/cudf/issues/14677"}
