{"assignees":[],"author":{"id":"MDQ6VXNlcjE5OTQ5MjA3","is_bot":false,"login":"ayushdg","name":"Ayush Dattagupta"},"body":"**Is your feature request related to a problem? Please describe.**\r\nPandas supports exploding multiple columns with `df.explode`, but currently cudf fails for that case.\r\n\r\n**Describe the solution you'd like**\r\nSupport explode with multiple column names. The doc contains an example of the expected output from a multi column explode:\r\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.explode.html#pandas-dataframe-explode\r\n\r\n\r\n**Describe alternatives you've considered**\r\nI haven't been able to come up with a workaround to this, but it might be 2 separate explodes + a merge of some kind to get to the same result. \r\n\r\n**Additional context**\r\nAdd any other context, code examples, or references to existing implementations about the feature request here.\r\n","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps49yeHY","author":{"login":"beckernick"},"authorAssociation":"MEMBER","body":"I think this could possibly be done with the workaround you suggest and adding a bit of index \"magic\" because we know that all columns being exploded must have, for any given row, each list must have the same number of elements.\r\n\r\nIf you create a monotonically increasing id , you can merge with that key across your frames. Then, I think you can leverage the = elements per list requirement to do something like:\r\n\r\n```python\r\noriginal_df = ...\r\nmerged_result = ...\r\n\r\nindex_repeats = = original_df.repeat(original_df[col].list.len().replace(0, 1)) # dont drop ones with 0 elements, so set as 1\r\nmerged_result.set_index(cudf.RangeIndex(start=0, stop=len(original_df)).repeat(index_repeats))\r\n```\r\n\r\nEDIT: This logic might get messy with more than a few columns, as you'd need to keep track of which frames get which columns","createdAt":"2022-02-11T21:30:09Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10271#issuecomment-1036640728","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps4_jO8S","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2022-03-13T23:03:34Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10271#issuecomment-1066200850","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5Euca-","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2022-06-12T00:11:07Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10271#issuecomment-1153025726","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5g5VOl","author":{"login":"wence-"},"authorAssociation":"CONTRIBUTOR","body":"Just to note, I _think_ that `explode` in libcudf is order-preserving. If so, you could just do:\r\n```python\r\ncolumns = ...\r\ncurrent, *columns = columns\r\nresult = df.drop(set(columns) - {current}, axis=1).explode(current)\r\nrequired_len = df[current].list.len()\r\nwhile columns:\r\n    current, *columns = columns\r\n    if not (required_len == df[current].list.len()).all():\r\n        raise ValueError(...)\r\n    result[current] = df[current].explode()\r\nresult = result.reindex(df.keys(), axis=1)\r\n```\r\n","createdAt":"2023-07-07T16:13:14Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10271#issuecomment-1625641893","viewerDidAuthor":false}],"createdAt":"2022-02-11T00:28:05Z","id":"I_kwDOBWUGps5DbrIh","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":{"number":5,"title":"Pandas API Alignment and Coverage","description":"","dueOn":null},"number":10271,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] df.explode with multiple columns","updatedAt":"2024-02-23T18:42:57Z","url":"https://github.com/rapidsai/cudf/issues/10271"}
