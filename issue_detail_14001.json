{"assignees":[{"id":"MDQ6VXNlcjExMjY5ODE=","login":"wence-","name":"Lawrence Mitchell"}],"author":{"id":"MDQ6VXNlcjEwNjQ3MDgy","is_bot":false,"login":"mroeschke","name":"Matthew Roeschke"},"body":"**Describe the bug**\r\nDataFrame.join(Series) does not maintain order of Series values\r\n\r\n**Steps/Code to reproduce bug**\r\n```python\r\nIn [12]: import cudf\r\n\r\nIn [13]: df = cudf.DataFrame([1, 2])\r\n\r\nIn [16]: ser = cudf.Series(list(\"abcdef\"), index=[0, 0, 0, 1, 1, 1], name=\"var1\")\r\n\r\nIn [17]: df.join(ser)\r\nOut[17]: \r\n   0 var1\r\n0  1    a\r\n0  1    c\r\n0  1    b\r\n1  2    d\r\n1  2    e\r\n1  2    f\r\n\r\nIn [18]: df.to_pandas().join(ser.to_pandas())\r\nOut[18]: \r\n   0 var1\r\n0  1    a\r\n0  1    b\r\n0  1    c\r\n1  2    d\r\n1  2    e\r\n1  2    f\r\n```\r\n\r\n**Expected behavior**\r\nI would expect the order of the joined values to be maintained.\r\n\r\n**Environment overview (please complete the following information)**\r\n - Environment location: Bare-metal\r\n - Method of cuDF install: conda\r\n   - If method of install is [Docker], provide `docker pull` & `docker run` commands used\r\n\r\n**Environment details**\r\nPlease run and paste the output of the `cudf/print_env.sh` script here, to gather any other relevant environment details\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5lOQne","author":{"login":"bdice"},"authorAssociation":"CONTRIBUTOR","body":"We should only expect this is a bug when `mode.pandas_compatible` is set to `True`, right?\r\n\r\nOtherwise these docs about [no result ordering guarantee](https://docs.rapids.ai/api/cudf/stable/user_guide/pandas-comparison/#result-ordering) applies, from what I can tell.","createdAt":"2023-08-29T22:42:01Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14001#issuecomment-1698236894","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5lORKD","author":{"login":"mroeschke"},"authorAssociation":"CONTRIBUTOR","body":"Ah totally forgot about the ordering guarantee. Yes, this is probably a bug only when `cudf.set_option(\"mode.pandas_compatible\", True)` (the OP still reproduces even when setting it)","createdAt":"2023-08-29T22:45:15Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14001#issuecomment-1698239107","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5lOXOK","author":{"login":"bdice"},"authorAssociation":"CONTRIBUTOR","body":"This will likely require some nontrivial changes, like adding a sequential index column before joining, then sorting after the join? Or perhaps some intermediate sorting of the join indices (can't recall the implementation details to know if this is viable at the moment). Either way, preserving order for a hash join is not ideal for performance, which is why this hasn't been done yet. I am not sure if there's any better way -- we did find some clever ways to implement `drop_duplicates` in an order-preserving way, and perhaps the same can be done here. I suspect libcudf changes will be needed to resolve this (at least, in an efficient way). If you'd like me to pursue this, please let me know. Some related issues/PRs:\r\n-  #12236\r\n- #1781\r\n- #11656","createdAt":"2023-08-29T23:16:36Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14001#issuecomment-1698263946","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5pyqfq","author":{"login":"shwina"},"authorAssociation":"CONTRIBUTOR","body":"> like adding a sequential index column before joining, then sorting after the join\r\n\r\nI think we should go ahead and implement this solution for now (when Pandas compatibility is enabled).","createdAt":"2023-10-23T10:24:47Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14001#issuecomment-1774888938","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5p8IkE","author":{"login":"shwina"},"authorAssociation":"CONTRIBUTOR","body":"@mroeschke -- by default, `sort=False` in the `.join()` method.\r\n\r\nIs it an implementation detail of Pandas that when `sort=False`, ordering of keys is preserved? Or is it a guarantee? (I couldn't find where in the docs this is defined).\r\n\r\ncc: @wence- ","createdAt":"2023-10-24T14:40:34Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14001#issuecomment-1777371396","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5p8n3U","author":{"login":"mroeschke"},"authorAssociation":"CONTRIBUTOR","body":"`join` uses `merge` under the hood so the key ordering follow what's described in the `how` section here: https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.merge.html","createdAt":"2023-10-24T15:35:12Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14001#issuecomment-1777499604","viewerDidAuthor":false}],"createdAt":"2023-08-29T22:33:30Z","id":"I_kwDOBWUGps5vnXiJ","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":null,"number":14001,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] DataFrame.join(Series) does not maintain order of Series values in mode.pandas_compatible","updatedAt":"2023-10-24T15:37:43Z","url":"https://github.com/rapidsai/cudf/issues/14001"}
