{"assignees":[],"author":{"id":"MDQ6VXNlcjM0NDEzMjE=","is_bot":false,"login":"revans2","name":"Robert (Bobby) Evans"},"body":"**Is your feature request related to a problem? Please describe.**\r\nI am filing this to capture what Spark does, but it feels very Spark specific, which could be problematic. The solution here might be related to a solution to #15222 so we don't cause too much performance impact to others.\r\n\r\nhttps://github.com/NVIDIA/spark-rapids/issues/10458 is the corresponding issue in the Spark Plugin and https://github.com/NVIDIA/spark-rapids/issues/10218 is related to it.\r\n\r\nI don't really know 100% the solution I would like. This is where it gets to be kind of ugly/difficult.\r\n\r\nWhen Spark processes JSON it parses the JSON into tokens, and then converts that back to a String when it is done. This results in things like numbers being converted to integers, doubles or java BigDecimal values, and then converted back to a String. For integers and BigDecimal values (numbers that do not include a decimal point or scientific notation) The processing is mostly a noop.\r\n\r\n-0 becomes just 0. If there are any leading zeros on the number, then they are removed (but only if validations didn't already mark that as a problem #15222)\r\n\r\nFor floating point numbers it is more complicated, and I need to get some more specifics to put in here. The hard part is detecting overflow and converting the number to +/- Infinity. Conversion from scientific notation to regular floating point notation and back. Then there is also making sure that the number fits the actual floating point notation.\r\n\r\nI almost want to have a way for me to provide my own code for this to happen, but I'm not sure if there is any good way to do that, because I am nervous that Spark will change some of these things over time.","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps54o2Gk","author":{"login":"ttnghia"},"authorAssociation":"CONTRIBUTOR","body":"Related:\r\n * https://github.com/NVIDIA/spark-rapids-jni/pull/1897","createdAt":"2024-03-27T20:56:15Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/15318#issuecomment-2023973284","viewerDidAuthor":false}],"createdAt":"2024-03-15T15:50:44Z","id":"I_kwDOBWUGps6CeHl4","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMTg1MjQ0MTQy","name":"cuIO","description":"cuIO issue","color":"fef2c0"},{"id":"MDU6TGFiZWwxNDA1MTQ2OTc1","name":"Spark","description":"Functionality that helps Spark RAPIDS","color":"7400ff"}],"milestone":null,"number":15318,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] JSON number normalization when returned as a string","updatedAt":"2024-03-27T20:56:23Z","url":"https://github.com/rapidsai/cudf/issues/15318"}
