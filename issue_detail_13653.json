{"assignees":[{"id":"MDQ6VXNlcjExMjY5ODE=","login":"wence-","name":"Lawrence Mitchell"}],"author":{"id":"MDQ6VXNlcjExMjY5ODE=","is_bot":false,"login":"wence-","name":"Lawrence Mitchell"},"body":"**Describe the bug**\r\n\r\n`loc`-based lookup does (I think incorrect) fallback to positional indexing rather than label-based lookup when the index is a categorical one with integer values.\r\n\r\n**Steps/Code to reproduce bug**\r\n```python\r\nimport cudf\r\n\r\ns = cudf.Series([1, 2], index=cudf.CategoricalIndex([3, 4], categories=[3, 4]))\r\ns.loc[3] # IndexError: single positional indexer is out-of-bounds\r\n```\r\n\r\n**Expected behavior**\r\n\r\n```python\r\ns.to_pandas().loc[3]\r\n# 1\r\n```\r\n\r\n~Annoyingly, one can't just stop doing positional indexing fallback in all cases because if the index is (say) a string index then integer indexing _does_ fall back to positional.~ This is for `Series.__getitem__` and the behaviour is deprecated in pandas 2.","closed":false,"closedAt":null,"comments":[],"createdAt":"2023-07-03T12:11:57Z","id":"I_kwDOBWUGps5qdQZ0","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxMDEzOTg3NTAz","name":"2 - In Progress","description":"Currently a work in progress","color":"fef2c0"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":{"number":5,"title":"Pandas API Alignment and Coverage","description":"","dueOn":null},"number":13653,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] Scalar loc-based lookup in integer categorical indices is incorrect","updatedAt":"2023-07-05T16:40:49Z","url":"https://github.com/rapidsai/cudf/issues/13653"}
