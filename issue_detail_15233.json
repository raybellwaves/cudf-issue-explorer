{"assignees":[],"author":{"id":"U_kgDOBb2DzQ","is_bot":false,"login":"dagardner-nv","name":"David Gardner"},"body":"**Describe the bug**\r\nUnable to update values of a dataframe for a column of type array for a subset of rows via `.loc` with a `list[list]`. \r\n\r\nTested with versions: 24.02.02 & nightly 24.04.00a508\r\n\r\nUpdating the values for all rows works:\r\n```py\r\ndf['a'] = [[0,0,0], [9, 10, 11], [20, 21, 22]]\r\n```\r\nhowever updating a subset of rows with a bool mask fails:\r\n```py\r\ndf.loc[mask, 'a'] = new_values\r\n```\r\n\r\nI believe at least part of the problem is (python/cudf/cudf/core/column/lists.py) ~line 90:\r\n```\r\n    def __setitem__(self, key, value):\r\n        if isinstance(value, list):\r\n            value = cudf.Scalar(value)\r\n        if isinstance(value, cudf.Scalar):\r\n            if value.dtype != self.dtype:\r\n                raise TypeError(\"list nesting level mismatch\")\r\n```\r\nWhen the column is `ListDtype(int64)` and the incoming values look like `[[9, 10, 11], [20, 21, 22]]`\r\nIt will create a `cudf.Scalar` which will have a dtype of `ListDtype(ListDtype(int64))` .\r\n\r\nCausing the `value.dtype != self.dtype` to fail.\r\n\r\n\r\n**Steps/Code to reproduce bug**\r\n```py\r\nimport os\r\n\r\nimport cupy\r\nimport numpy\r\nimport pandas as pd\r\nimport cudf\r\n\r\ndata = {'apple': ['pie', 'cake', 'candy'], 'a': [[3,2,1], [4,5,6], [8,7,9]], 'b': [10, 20, 30]}\r\n\r\n\r\nif os.environ.get('USE_PANDAS') != None:\r\n    df = pd.DataFrame(data)\r\nelse:\r\n    df = cudf.DataFrame(data)\r\n\r\nmask = [False, True, True]\r\nnew_values = [[9, 10, 11], [20, 21, 22]]\r\n\r\n# Other datatypes work\r\ndf.loc[mask, 'b'] = [25, 35]\r\ndf['b'].loc[mask] = [26, 36]\r\nprint(df)\r\n\r\nprint(f\"array column type: {repr(df['a'].dtype)}\", flush=True)\r\n\r\ntry:\r\n    df.loc[mask, 'a'] = new_values\r\nexcept ValueError as e:\r\n    print(f\"Encoundered error setting new values ({e}) trying another way\")\r\n\r\n    try:\r\n        df['a'].loc[mask] = new_values\r\n    except TypeError as e:\r\n        print(f\"Encoundered error setting new values ({e})\")\r\n\r\nprint(df)\r\n```\r\n\r\n**Expected behavior**\r\nUpdate the values\r\n\r\n**Environment overview (please complete the following information)**\r\n - Environment location: [Bare-metal]\r\n - Method of cuDF install: [conda]\r\n","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps52CnIL","author":{"login":"wence-"},"authorAssociation":"CONTRIBUTOR","body":"Related #11944 and #13291. I think the workaround I posted in https://github.com/rapidsai/cudf/issues/11944#issuecomment-1286971706 should work, but I don't like it","createdAt":"2024-03-06T09:05:58Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/15233#issuecomment-1980396043","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps52X-fH","author":{"login":"dagardner-nv"},"authorAssociation":"CONTRIBUTOR","body":"@wence- Thanks, the work-around in #11944 works for me. Feel free to close this issue as a duplicate.","createdAt":"2024-03-08T16:24:05Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/15233#issuecomment-1985996743","viewerDidAuthor":false}],"createdAt":"2024-03-05T21:16:00Z","id":"I_kwDOBWUGps6BWfa7","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"}],"milestone":null,"number":15233,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] Unable to update array column for subset of rows","updatedAt":"2024-03-08T16:24:06Z","url":"https://github.com/rapidsai/cudf/issues/15233"}
