{"assignees":[],"author":{"id":"U_kgDOBb2DzQ","is_bot":false,"login":"dagardner-nv","name":"David Gardner"},"body":"**Is your feature request related to a problem? Please describe.**\r\nCurrently building up a list of selected indices for a slice requires doing something like:\r\n```\r\nstd::vector<cudf::size_type> selected_ranges;\r\n....\r\nselected_ranges.push_back(slice_start);\r\nselected_ranges.push_back(cur_row);\r\n...\r\nauto slices = cudf::slice(table_v, selected_ranges);\r\n```\r\n\r\nThe problem is I need to use the selected ranges for other purposes. \r\nSpecifically I have several related tensors that I want to slice the same rows from,\r\nwhich requires me to do something like:\r\n```\r\n// todo assert ranges.size() is even\r\nfor (std::size_t i=0; i < ranges.size()-1; i += 2) \r\n{\r\n    start = ranges[i];\r\n    end = ranges[i+1];\r\n}\r\n```\r\n\r\n**Describe the solution you'd like**\r\nIt would be nice to instead be able to do something like:\r\n```\r\nstd::vector<std::pair<cudf::size_type, cudf::size_type>> selected_ranges;\r\nselected_ranges.push_back(std::make_pair(slice_start, cur_row));\r\n```","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5H9ff_","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2022-08-07T00:13:11Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11223#issuecomment-1207302143","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5Mrsid","author":{"login":"GregoryKimball"},"authorAssociation":"CONTRIBUTOR","body":"Would it be correct to say that you would like `cudf::slice` to accept a vector of (start, end) tuples?","createdAt":"2022-10-21T06:37:19Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11223#issuecomment-1286523037","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5Mt9KO","author":{"login":"dagardner-nv"},"authorAssociation":"CONTRIBUTOR","body":"Yes a vector of either tuples or pairs","createdAt":"2022-10-21T15:21:51Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11223#issuecomment-1287115406","viewerDidAuthor":false}],"createdAt":"2022-07-07T23:57:56Z","id":"I_kwDOBWUGps5NYliB","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMDEzOTg3MzUy","name":"0 - Backlog","description":"In queue waiting for assignment","color":"d4c5f9"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"}],"milestone":null,"number":11223,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Add overload of cudf::slice that accepts host_span<pair<size_type, size_type>> ","updatedAt":"2022-10-21T15:21:52Z","url":"https://github.com/rapidsai/cudf/issues/11223"}
