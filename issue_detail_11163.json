{"assignees":[],"author":{"id":"MDQ6VXNlcjM0NDEzMjE=","is_bot":false,"login":"revans2","name":"Robert (Bobby) Evans"},"body":"**Is your feature request related to a problem? Please describe.**\r\nAs a part of https://github.com/rapidsai/cudf/issues/11162 we really could use the ability to do if/else statements in AST.\r\n\r\n**Describe the solution you'd like**\r\nJust like I said. It would be great to have a way to do if/else statements in AST.  Takes a boolean value, a true expression and a false expression as input. If the boolean predicate is true then the true expression is evaluated and returned. If boolean predicate is false, then the false expression is evaluated and returned. For performance/consistency reasons I am fine if we evaluate both paths and just pick the one needed at the end.\r\n\r\n**Describe alternatives you've considered**\r\nWe really have no good way to simulate this with existing operators, except in some very rare corner cases.\r\n","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5HbDZr","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2022-07-28T15:03:08Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11163#issuecomment-1198274155","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5MrpMy","author":{"login":"GregoryKimball"},"authorAssociation":"CONTRIBUTOR","body":"Thanks @revans2 for sharing this issue. Do you think there is enough value in expanding our AST implementation to warrant a repo milestone?","createdAt":"2022-10-21T06:17:56Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11163#issuecomment-1286509362","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5MuCVR","author":{"login":"revans2"},"authorAssociation":"CONTRIBUTOR","body":"I don't know what you mean by a repo milestone? Is this just for tracking purposes?  If so @sameerz what is the high priority on this? ","createdAt":"2022-10-21T15:40:01Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11163#issuecomment-1287136593","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5MuH0M","author":{"login":"sameerz"},"authorAssociation":"CONTRIBUTOR","body":"I think what @GregoryKimball is referring to as a milestone is effectively an epic of work for AST.  \r\n\r\nIn terms of priority, AST helps the the RAPIDS Spark plugin and is necessary for some queries.  It is worth tracking as a milestone.  ","createdAt":"2022-10-21T16:01:39Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11163#issuecomment-1287159052","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5mVvy4","author":{"login":"GregoryKimball"},"authorAssociation":"CONTRIBUTOR","body":"Hello @jlowe yesterday you mentioned a few uses that the Spark-RAPIDS plugin would have for the ternary operator in libcudf ASTs. Would you please list some of those uses and link to open Spark-RAPIDS issues on this topic? (FYI @karthikeyann)","createdAt":"2023-09-13T05:35:29Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11163#issuecomment-1716976824","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5mYm9j","author":{"login":"jlowe"},"authorAssociation":"MEMBER","body":"One key use case is described in #11162 where there's a higher order function used to perform the operation and we need the ability to translate that.  AST isn't the only way to solve that particular issue, but it's a more general solution.  See NVIDIA/spark-rapids#5227 for more context.\r\n\r\nAnother case would be optimizing complex projections.  Take one-hot encodings, for example, where currently queries are doing a potentially large series of comparisons in a CASE WHEN that today turns into a long chain of copy_if_else operations.  Using a chain of IF/ELSE in AST instead would avoid the manifestation of intermediates.","createdAt":"2023-09-13T14:18:30Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/11163#issuecomment-1717727075","viewerDidAuthor":false}],"createdAt":"2022-06-28T14:05:22Z","id":"I_kwDOBWUGps5MvD8j","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMDEzOTg3MzUy","name":"0 - Backlog","description":"In queue waiting for assignment","color":"d4c5f9"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"}],"milestone":{"number":21,"title":"Expression evaluation","description":"","dueOn":null},"number":11163,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Support if/else in AST","updatedAt":"2023-09-13T14:18:31Z","url":"https://github.com/rapidsai/cudf/issues/11163"}
