{"assignees":[],"author":{"id":"MDQ6VXNlcjI0ODQ0NzA1","is_bot":false,"login":"mlahir1","name":"Lahir Marni"},"body":"Weighted sampling with cudf series is documented as supported but throws the following error\r\n\r\nRepro:\r\n```\r\na = cudf.Series(range(100))\r\na.sample(n=10, weights=a.values_host, random_state=0)\r\n\r\nor\r\n\r\na = cudf.Series(range(100))\r\na.sample(n=10, weights=a.values_host, random_state=0)\r\n\r\n```\r\n\r\nException:\r\n```\r\n---------------------------------------------------------------------------\r\nNotImplementedError                       Traceback (most recent call last)\r\nFile /conda/envs/rapids-22.12/lib/python3.9/site-packages/cudf/core/indexed_frame.py:2952, in IndexedFrame._sample_axis_0(self, n, weights, replace, random_state, ignore_index)\r\n   2951 try:\r\n-> 2952     gather_map_array = random_state.choice(\r\n   2953         len(self), size=n, replace=replace, p=weights\r\n   2954     )\r\n   2955 except NotImplementedError as e:\r\n\r\nFile /conda/envs/rapids-22.12/lib/python3.9/site-packages/cupy/random/_generator.py:1066, in RandomState.choice(self, a, size, replace, p)\r\n   1065 if not replace:\r\n-> 1066     raise NotImplementedError\r\n   1068 if p is not None:\r\n\r\nNotImplementedError: \r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nNotImplementedError                       Traceback (most recent call last)\r\nCell In [25], line 2\r\n      1 a = cudf.Series(range(100))\r\n----> 2 a.sample(n=10, weights=a, random_state=0)\r\n\r\nFile /conda/envs/rapids-22.12/lib/python3.9/contextlib.py:79, in ContextDecorator.__call__.<locals>.inner(*args, **kwds)\r\n     76 @wraps(func)\r\n     77 def inner(*args, **kwds):\r\n     78     with self._recreate_cm():\r\n---> 79         return func(*args, **kwds)\r\n\r\nFile /conda/envs/rapids-22.12/lib/python3.9/site-packages/cudf/core/indexed_frame.py:2930, in IndexedFrame.sample(self, n, frac, replace, weights, random_state, axis, ignore_index)\r\n   2927     weights = weights / weights.sum()\r\n   2929 if axis == 0:\r\n-> 2930     return self._sample_axis_0(\r\n   2931         n, weights, replace, random_state, ignore_index\r\n   2932     )\r\n   2933 else:\r\n   2934     if isinstance(random_state, cp.random.RandomState):\r\n\r\nFile /conda/envs/rapids-22.12/lib/python3.9/site-packages/cudf/core/indexed_frame.py:2956, in IndexedFrame._sample_axis_0(self, n, weights, replace, random_state, ignore_index)\r\n   2952     gather_map_array = random_state.choice(\r\n   2953         len(self), size=n, replace=replace, p=weights\r\n   2954     )\r\n   2955 except NotImplementedError as e:\r\n-> 2956     raise NotImplementedError(\r\n   2957         \"Random sampling with cupy does not support these inputs.\"\r\n   2958     ) from e\r\n   2960 return self._gather(\r\n   2961     cudf.core.column.as_column(gather_map_array),\r\n   2962     keep_index=not ignore_index,\r\n   2963     check_bounds=False,\r\n   2964 )\r\n\r\nNotImplementedError: Random sampling with cupy does not support these inputs.\r\n```","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5QxEyF","author":{"login":"wence-"},"authorAssociation":"CONTRIBUTOR","body":"This is a [current restriction](https://docs.cupy.dev/en/stable/reference/generated/cupy.random.choice.html) of cupy, which we use to generate random samples: it is not possible to sample without replacement when using non-uniform weighting probabilities. I suspect therefore that the best way to get this if you need it is to ask there. It is possible to work-around this restriction by creating a supplementary array that gives each entry in your series the correct multiplicity and then sampling uniformly without replacement, but that might be a bit fiddly depending on use case.","createdAt":"2022-12-16T15:15:58Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/12344#issuecomment-1355041925","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5RNTug","author":{"login":"GregoryKimball"},"authorAssociation":"CONTRIBUTOR","body":"@wence- Are there any cases where the `weights` argument is implemented? Should we update the [docs](https://docs.rapids.ai/api/cudf/nightly/api_docs/api/cudf.series.sample)?","createdAt":"2022-12-22T05:43:53Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/12344#issuecomment-1362443168","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5SAaMf","author":{"login":"wence-"},"authorAssociation":"CONTRIBUTOR","body":"> Are there any cases where the `weights` argument is implemented?\r\n\r\nSampling _with_ replacement is fine.","createdAt":"2023-01-09T15:48:49Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/12344#issuecomment-1375839007","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5SBcnq","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"When @isVoid wrote this, he and I didn't think too hard about documenting the exact supported cases since there are multiple different possibilities (CPU vs GPU sampling depending on whether we're operating row-wise or column-wise, weights, etc) and in most cases I think we just transparently support whatever the underlying libraries (numpy or cupy) support. In my weakly held opinion it would probably be easier to focus on making these error messages more instructive (e.g. \"Random sampling with cupy does not support the input [insert input here]. Either [switch to using numpy for sampling] or [try this other workaround]\") rather than trying to keep documentation up to date for each case.","createdAt":"2023-01-09T18:41:52Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/12344#issuecomment-1376111082","viewerDidAuthor":false}],"createdAt":"2022-12-08T17:08:17Z","id":"I_kwDOBWUGps5YhBee","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxMDEzOTg3MzUy","name":"0 - Backlog","description":"In queue waiting for assignment","color":"d4c5f9"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":null,"number":12344,"projectCards":[{"project":{"name":"Bug Squashing"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] Random sampling with cupy does not support these inputs","updatedAt":"2023-01-09T18:41:52Z","url":"https://github.com/rapidsai/cudf/issues/12344"}
