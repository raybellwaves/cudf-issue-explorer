{"assignees":[],"author":{"id":"MDQ6VXNlcjMxOTA0MDU=","is_bot":false,"login":"shwina","name":"Ashwin Srinath"},"body":"To `.to_dlpack()` and `.from_dlpack()` methods in cuDF currently always perform a copy to/from the DLTensor. This is reasonable for DataFrames, as the columns of a dataframe in cuDF are not contiguous in memory, nor are they always of the same data type.\r\n\r\nFor a Series however, I believe we should be able to zero-copy to and from DLPack. That is not the case today:\r\n\r\n```python\r\n>>> import cudf\r\n>>> import cupy as cp\r\n>>> s = cudf.Series([1, 2, 3])\r\n>>> arr = cp.from_dlpack(s.to_dlpack())\r\n>>> s._column.data.ptr\r\n139742968545280\r\n>>> arr.data.ptr\r\n139742968545792\r\n```","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5DSclp","author":{"login":"jrhemstad"},"authorAssociation":"CONTRIBUTOR","body":"This wouldn't be possible with the existing [`from_dlpack`](https://github.com/rapidsai/cudf/blob/6352b4efa3169bcf9174d5073b8879841a7ad6ff/cpp/include/cudf/interop.hpp#L52-L54) function in libcudf as it always returns a `unique_ptr<column>` that expects to own the data.\r\n\r\nThat said, we could add a `view_dlpack` function that returns a `column_view/table_view`.\r\n\r\nI think a non-copying `to_dlpack` could also be possible by adding an overload of `to_dlpack` that takes a `column&&` or `table&&` and therefore takes ownership of those objects and gives it to the returned `DLManagedTensor` object. ","createdAt":"2022-05-17T14:00:35Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"EYES","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/10874#issuecomment-1128909161","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5DS5lI","author":{"login":"shwina"},"authorAssociation":"CONTRIBUTOR","body":"> I think a non-copying to_dlpack could also be possible by adding an overload of to_dlpack that takes a column&& or table&& and therefore takes ownership of those objects and gives it to the returned DLManagedTensor object.\r\n\r\nI don't think this would work for Python since we never own any column objects ourselves.","createdAt":"2022-05-17T15:42:27Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10874#issuecomment-1129027912","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5FA1dA","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2022-06-16T16:03:23Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10874#issuecomment-1157846848","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5LB_V9","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2022-09-27T00:19:12Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10874#issuecomment-1258812797","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps59tXBA","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"This work is adjacent to #10849","createdAt":"2024-05-14T00:19:18Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10874#issuecomment-2109042752","viewerDidAuthor":false}],"createdAt":"2022-05-17T13:03:27Z","id":"I_kwDOBWUGps5J07H7","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":null,"number":10874,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Don't copy data in to/from_dlpack when unnecessary","updatedAt":"2024-05-17T14:57:29Z","url":"https://github.com/rapidsai/cudf/issues/10874"}
