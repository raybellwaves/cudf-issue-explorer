{"assignees":[],"author":{"id":"MDQ6VXNlcjI2MTY5Nzcx","is_bot":false,"login":"miguelusque","name":"Miguel Mart√≠nez"},"body":"**Is your feature request related to a problem? Please describe.**\r\nHi,\r\n\r\nI was wondering if, instead of providing the following methods, it would be better to accept different datatypes when creating a DataFrame:\r\n \r\n  - DataFrame.from_pandas\r\n  - DataFrame.from_records\r\n  - DataFrame.from_gpu_matrix\r\n  - DataFrame.from_arrow\r\n\r\nI think it would make easier to create DataFrames by allowing these datatypes as input when creating a DataFrame, instead of having specific methods. \r\n\r\nIn the future, if other datatypes are supported, the code would remain valid without any change.\r\n\r\nI am looking forward for your comments on this.\r\n\r\nRegards,\r\nMiguel","closed":false,"closedAt":null,"comments":[{"id":"MDEyOklzc3VlQ29tbWVudDY0MTcxNDIwMQ==","author":{"login":"jl-massey"},"authorAssociation":"NONE","body":"I think the main driver is to try to stay consistent with the look and feel of Pandas.","createdAt":"2020-06-10T04:32:32Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/5277#issuecomment-641714201","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDY0MTc3MTQ3Mg==","author":{"login":"miguelusque"},"authorAssociation":"MEMBER","body":"Hi @jl-massey ,\r\n\r\nIIRC, Pandas has from_records method, but none of the other methods detailed in my comment.\r\n\r\nIMO, It might make sense to keep from_records for compatibility purposes, but a different approach could be considered for the other sources of data.","createdAt":"2020-06-10T06:56:59Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/5277#issuecomment-641771472","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDY0NjQwOTM1OA==","author":{"login":"jl-massey"},"authorAssociation":"NONE","body":"@miguelusque Fair enough, pandas uses from_<format> or read_<format>.   I expect, with the broad range of source types and handling, that your request would 'practically' be added as a method that calls one of the others after type inference?  i.e. read_type(\"some_file.csv.gz\") --> read_csv(\"some_file.csv.gz\") ??","createdAt":"2020-06-19T03:05:55Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/5277#issuecomment-646409358","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDc5ODk2MjQ1Ng==","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2021-03-14T19:13:08Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/5277#issuecomment-798962456","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDc5ODk2MjUwNA==","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2021-03-14T19:13:19Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/5277#issuecomment-798962504","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5L9n1U","author":{"login":"miguelusque"},"authorAssociation":"MEMBER","body":"I have just double-checked this feature request, and the only missing datatype from the list above to be supported by `cudf.DataFrame()` is  `cudf.DataFrame.from_arrow()`.\r\n\r\nCould you please consider adding support to that method too? Thanks!","createdAt":"2022-10-11T10:03:08Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/5277#issuecomment-1274445140","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5L-hp_","author":{"login":"shwina"},"authorAssociation":"CONTRIBUTOR","body":"I think ultimately we want to deprecate/remove the `.from_pandas()` API and be able to support constructing from other \"DataFrameLike\" objects (e.g., Pandas, Modin, Vaex) via the `.from_dataframe()` API. Currently, that depends on https://github.com/rapidsai/cudf/pull/11392. \r\n\r\nAs for `.from_arrow()`, I'd rather we have a more _explicit_ `.from_arrow` constructor than an _implicit_ one that goes through the constructor. I understand that Pandas does not have the equivalent `.from_arrow()` method, but neither does it allow passing pyarrow tables as input to the `DataFrame` constructor (AFAICT). What do you think?","createdAt":"2022-10-11T13:23:56Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/5277#issuecomment-1274681983","viewerDidAuthor":false}],"createdAt":"2020-05-25T17:37:49Z","id":"MDU6SXNzdWU2MjQ0MTY5ODg=","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":null,"number":5277,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Remove from_xxx methods in DataFrame interface, or at least add other datatype sources to DataFrame object","updatedAt":"2024-02-23T18:43:27Z","url":"https://github.com/rapidsai/cudf/issues/5277"}
