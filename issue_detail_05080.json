{"assignees":[],"author":{"id":"MDQ6VXNlcjQ1Njk3MDYy","is_bot":false,"login":"OlivierNV","name":""},"body":"**Describe the bug**\r\ndata type detection represents ~25% of the CSV reader total time\r\n\r\n**Steps/Code to reproduce bug**\r\nnvprof read_csv(<large csv file>)\r\n\r\n**Expected behavior**\r\ndata type detection time should be negligible\r\n","closed":false,"closedAt":null,"comments":[{"id":"MDEyOklzc3VlQ29tbWVudDYyMzY3NTMxNg==","author":{"login":"OlivierNV"},"authorAssociation":"CONTRIBUTOR","body":"I initially suspected the heavy use of atomics, which is a big problem, but almost entirely masked by the  cache trashfest problem of having many threads each reading one byte a few hundred bytes from each other when searching for the end of a column field, so fixing this will have to involve rewriting the way we read data from the row (maybe multiple threads per row and/or small shared mem scratch buffer per row).\r\nThe good news is that fixing that will also automatically benefit the data conversion stage as well.","createdAt":"2020-05-04T20:01:08Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/5080#issuecomment-623675316","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDc5ODk2MjU1OA==","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2021-03-14T19:13:33Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/5080#issuecomment-798962558","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDc5ODk2MjU5MQ==","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2021-03-14T19:13:43Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/5080#issuecomment-798962591","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5FhVGb","author":{"login":"GregoryKimball"},"authorAssociation":"CONTRIBUTOR","body":"@PointKernel based on your recent study of CSV type inference, do you think we should keep this issue open?","createdAt":"2022-06-25T21:34:27Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/5080#issuecomment-1166365083","viewerDidAuthor":false}],"createdAt":"2020-05-02T01:22:48Z","id":"MDU6SXNzdWU2MTEwODA2MjE=","labels":[{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"},{"id":"MDU6TGFiZWwxMTg1MjQ0MTQy","name":"cuIO","description":"cuIO issue","color":"fef2c0"},{"id":"MDU6TGFiZWwxMzIyMjUyNjE3","name":"Performance","description":"Performance related issue","color":"C2E0C6"}],"milestone":{"number":12,"title":"CSV continuous improvement","description":"","dueOn":null},"number":5080,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[PERF] CSV reader data type detection is slow","updatedAt":"2024-02-23T18:43:30Z","url":"https://github.com/rapidsai/cudf/issues/5080"}
