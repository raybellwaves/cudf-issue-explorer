{"assignees":[],"author":{"id":"MDQ6VXNlcjE1MzgxNjU=","is_bot":false,"login":"vyasr","name":"Vyas Ramasubramani"},"body":"**Is your feature request related to a problem? Please describe.**\r\n`DataFrame.dtypes` is used in many places in the code. For pandas compatibility, this method constructs a `pd.Series` from the column dtypes. This construction introduces unnecessary overhead that could be avoided, especially because in many cases the output is immediately converted back to a list or a `{colname: dtype}` dict.\r\n\r\n**Describe the solution you'd like**\r\n`DataFrame.dtypes` should be decorated with `_external_only_api`. All usage should be switched to instead use `Frame._dtypes`, which simply constructs a dict and avoids the unnecessary overhead. Here's a quick indication of the benefits:\r\n```\r\nIn [1]: import cudf\r\n\r\nIn [2]: df = cudf.DataFrame({f\"{i}\": [i] for i in range(10)})\r\n\r\nIn [3]: %timeit df._dtypes\r\n2.31 µs ± 15.8 ns per loop (mean ± std. dev. of 7 runs, 100,000 loops each)\r\n\r\nIn [4]: %timeit df.dtypes\r\n165 µs ± 314 ns per loop (mean ± std. dev. of 7 runs, 10,000 loops each)\r\n\r\nIn [5]: df = cudf.DataFrame({f\"{i}\": [i] for i in range(100)})\r\n\r\nIn [6]: %timeit df._dtypes\r\n13.9 µs ± 47.3 ns per loop (mean ± std. dev. of 7 runs, 100,000 loops each)\r\n\r\nIn [7]: %timeit df.dtypes\r\n316 µs ± 3.54 µs per loop (mean ± std. dev. of 7 runs, 1,000 loops each)\r\n\r\n```\r\n\r\n**Describe alternatives you've considered**\r\nNone\r\n\r\n**Additional context**\r\nIf there is any internal functionality that is actually relying on the output of `dtypes` being a `Series`, we should carefully consider whether that method should be reimplemented. There is almost no reason that a `Series` should be preferable to a `dict` internally.\r\n","closed":false,"closedAt":null,"comments":[],"createdAt":"2022-08-03T23:47:14Z","id":"I_kwDOBWUGps5PJg9h","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMDE2MzMyOTQ4","name":"good first issue","description":"Good for newcomers","color":"7057ff"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"},{"id":"MDU6TGFiZWwxMzIyMjUyNjE3","name":"Performance","description":"Performance related issue","color":"C2E0C6"}],"milestone":{"number":6,"title":"cuDF Python Refactoring","description":"Refactor Python layers to improve performance, robustness, and extensibility. Ongoing development is being guided by the roadmap and evolving development guide.","dueOn":null},"number":11458,"projectCards":[{"project":{"name":"Other Issues"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Mark `DataFrame.dtypes` as `_external_only_api`","updatedAt":"2022-11-21T05:23:15Z","url":"https://github.com/rapidsai/cudf/issues/11458"}
