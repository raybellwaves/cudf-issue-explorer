{"assignees":[],"author":{"id":"MDQ6VXNlcjMwMzQ5MTg0","is_bot":false,"login":"aroraakshit","name":"Akshit Arora"},"body":"**Describe the bug**\r\n\r\n`read_avro` method incorrectly reads avro file with columns that have array data type.\r\n\r\n- When `type` of a column is an array, it does not read correctly. Example: schema ( [sample.avsc.txt](https://github.com/rapidsai/cudf/files/5279551/sample.avsc.txt) ), corresponding avro file ( \r\n[peters.avro.txt](https://github.com/rapidsai/cudf/files/5279548/peters.avro.txt) )\r\n    ```\r\n    {\r\n    \"name\": \"feature81078\",\r\n    \"type\": \r\n        {\r\n            \"type\": \"array\",\r\n            \"items\": \"string\"\r\n        }\r\n  },   \r\n  ```\r\n    - The following works though:\r\n        ```\r\n        {\r\n            \"name\": \"feature9996\",\r\n            \"type\": \"boolean\"\r\n        },\r\n        ```\r\n       Example schema: [samplew.avsc.txt](https://github.com/rapidsai/cudf/files/5279435/samplew.avsc.txt); Corresponding Avro file: [petersw.avro.txt](https://github.com/rapidsai/cudf/files/5279436/petersw.avro.txt)\r\n\r\n**Steps/Code to reproduce bug**\r\n\r\n```\r\nimport cudf\r\na = cudf.io.read_avro('peters.avro')\r\n```\r\n\r\nresults in:\r\n```\r\n\tusername\ttweet\tfeature81079\ttimestamp\r\n0\tSample\tSample\tTrue\t0\r\n1\t<NA>\t<NA>\tFalse\t0\r\n2\t<NA>\t<NA>\tFalse\t0\r\n3\t<NA>\t<NA>\tFalse\t0\r\n4\t<NA>\t<NA>\tFalse\t0\r\n5\t<NA>\t<NA>\tFalse\t0\r\n6\t<NA>\t<NA>\tFalse\t0\r\n7\t<NA>\t<NA>\tFalse\t0\r\n8\t<NA>\t<NA>\tFalse\t0\r\n9\t<NA>\t<NA>\tFalse\t0\r\n```\r\n\r\n\r\n**Expected behavior**\r\n\r\n`read_avro` should be able to read the avro file. You can use the following code to validate the avro file:\r\n\r\n```\r\nfrom avro.datafile import DataFileReader, DataFileWriter\r\nfrom avro.io import DatumReader, DatumWriter\r\n\r\nreader = DataFileReader(open(\"peters.avro\", \"rb\"), DatumReader())\r\nfor user in reader:\r\n    print(user)\r\nreader.close()\r\n```\r\n\r\n`pip install avro-python3` may be needed to execute the above piece of code.\r\n\r\noutput: \r\n```\r\n{'username': 'Sample', 'tweet': 'Sample', 'feature81079': True, 'feature81078': ['Sample', 'Sample', 'Sample', 'Sample', 'Sample'], 'timestamp': 2}\r\n{'username': 'Sample', 'tweet': 'Sample', 'feature81079': True, 'feature81078': ['Sample', 'Sample', 'Sample', 'Sample', 'Sample'], 'timestamp': 2}\r\n{'username': 'Sample', 'tweet': 'Sample', 'feature81079': True, 'feature81078': ['Sample', 'Sample', 'Sample', 'Sample', 'Sample'], 'timestamp': 2}\r\n{'username': 'Sample', 'tweet': 'Sample', 'feature81079': True, 'feature81078': ['Sample', 'Sample', 'Sample', 'Sample', 'Sample'], 'timestamp': 2}\r\n{'username': 'Sample', 'tweet': 'Sample', 'feature81079': True, 'feature81078': ['Sample', 'Sample', 'Sample', 'Sample', 'Sample'], 'timestamp': 2}\r\n{'username': 'Sample', 'tweet': 'Sample', 'feature81079': True, 'feature81078': ['Sample', 'Sample', 'Sample', 'Sample', 'Sample'], 'timestamp': 2}\r\n{'username': 'Sample', 'tweet': 'Sample', 'feature81079': True, 'feature81078': ['Sample', 'Sample', 'Sample', 'Sample', 'Sample'], 'timestamp': 2}\r\n{'username': 'Sample', 'tweet': 'Sample', 'feature81079': True, 'feature81078': ['Sample', 'Sample', 'Sample', 'Sample', 'Sample'], 'timestamp': 2}\r\n{'username': 'Sample', 'tweet': 'Sample', 'feature81079': True, 'feature81078': ['Sample', 'Sample', 'Sample', 'Sample', 'Sample'], 'timestamp': 2}\r\n{'username': 'Sample', 'tweet': 'Sample', 'feature81079': True, 'feature81078': ['Sample', 'Sample', 'Sample', 'Sample', 'Sample'], 'timestamp': 2}\r\n```\r\n\r\n**Environment overview (please complete the following information)**\r\n - Environment location: Docker\r\n - Method of cuDF install: Docker\r\n   - If method of install is [Docker], provide `docker pull` & `docker run` commands used\r\n```\r\ndocker pull nvcr.io/nvidia/rapidsai/rapidsai:0.15-cuda11.0-base-ubuntu18.04\r\ndocker run --gpus all --rm -it -p 7777:8888 -p 7676:8787 -p 7675:8786 nvcr.io/nvidia/rapidsai/rapidsai:0.15-cuda11.0-base-ubuntu18.04\r\n```\r\n\r\n**Environment details**\r\nPlease run and paste the output of the `cudf/print_env.sh` script here, to gather any other relevant environment details\r\n\r\n[env.log](https://github.com/rapidsai/cudf/files/5279465/env.log)\r\n\r\n**Additional context**\r\nN/A","closed":false,"closedAt":null,"comments":[{"id":"MDEyOklzc3VlQ29tbWVudDY5ODY1MTMxNg==","author":{"login":"OlivierNV"},"authorAssociation":"CONTRIBUTOR","body":"cudf avro reader currently does not support nesting (structs, unions or lists, except for trivial unions with a null type).\r\nReally #6319, #6322 , #6323 could be combined in a single \"[FEA] nesting support for avro reader\" (not sure if cudf has union types yet, but could be converted to a nullable struct form).","createdAt":"2020-09-25T00:16:00Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/6322#issuecomment-698651316","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDc4MDEyMzQyMQ==","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been marked rotten due to no recent activity in the past 90d. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2021-02-16T21:17:33Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/6322#issuecomment-780123421","viewerDidAuthor":false}],"createdAt":"2020-09-24T22:34:02Z","id":"MDU6SXNzdWU3MDg1MTQ4NjU=","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"},{"id":"MDU6TGFiZWwxMTg1MjQ0MTQy","name":"cuIO","description":"cuIO issue","color":"fef2c0"}],"milestone":null,"number":6322,"projectCards":[{"project":{"name":"Bug Squashing"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] read_avro method incorrectly reads avro.schema.ArraySchema","updatedAt":"2023-04-06T05:28:44Z","url":"https://github.com/rapidsai/cudf/issues/6322"}
