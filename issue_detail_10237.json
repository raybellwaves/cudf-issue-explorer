{"assignees":[],"author":{"id":"MDQ6VXNlcjU2MDczMzA=","is_bot":false,"login":"mythrocks","name":"MithunR"},"body":"It appears that the group-by scan aggregation result for `COUNT()` returns a 0-based value. i.e. when the group has 1 row, the `COUNT` seems to return 0.\r\n\r\nConsider the JNI [`TableTest::testGroupByScan()`](https://github.com/rapidsai/cudf/blob/branch-22.04/java/src/test/java/ai/rapids/cudf/TableTest.java#L3953):\r\n```java\r\ntry (Table t1 = new Table.TestBuilder()\r\n    .column( \"1\",  \"1\",  \"1\",  \"1\",  \"1\",  \"1\",  \"1\",  \"2\",  \"2\",  \"2\",  \"2\")\r\n    .column(   0,    1,    3,    3,    5,    5,    5,    5,    5,    5,    5)\r\n// ...\r\n// with `COUNT(*)` aggregation.\r\n    GroupByScanAggregation.count(NullPolicy.INCLUDE).onColumn(2),\r\n// ...\r\n// yields the following results:\r\n   .column(   0,    0,    0,    1,    0,    1,    2,    0,    1,    2,    3) // odd why is this not 1 based?\r\n```\r\nOne would have expected the following results instead:\r\n```java\r\n   .column(   1,    1,    1,    2,    1,    2,    3,    1,    2,    3,    4)\r\n```\r\nThis might well be by design, but it warrants investigation.","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps49gguf","author":{"login":"jrhemstad"},"authorAssociation":"CONTRIBUTOR","body":"It definitely isn't by design. ","createdAt":"2022-02-07T21:16:01Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/10237#issuecomment-1031932831","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps4_ZKmG","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2022-03-10T01:30:17Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10237#issuecomment-1063561606","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5Egajl","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2022-06-08T01:31:30Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10237#issuecomment-1149348069","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5FoUhg","author":{"login":"GregoryKimball"},"authorAssociation":"CONTRIBUTOR","body":"@mythrocks Would you please make a C++ repro for this bug? Or is it only happening in the JNI layer?","createdAt":"2022-06-28T04:11:44Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/10237#issuecomment-1168197728","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5K8_LD","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2022-09-26T05:31:02Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10237#issuecomment-1257501379","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5K_jPA","author":{"login":"revans2"},"authorAssociation":"CONTRIBUTOR","body":"@mythrocks is this still an issue? It looks like it is waiting for you to have a non-java repro case.  Do you need someone else to help you write it?","createdAt":"2022-09-26T15:01:59Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10237#issuecomment-1258173376","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5K_y21","author":{"login":"davidwendt"},"authorAssociation":"CONTRIBUTOR","body":"It does indeed look intentional if I'm reading these gtests right.\r\nhttps://github.com/rapidsai/cudf/blob/fb703b1a5384606e7fc13e5e931c6f57eb0bb8ff/cpp/tests/groupby/count_scan_tests.cpp#L49-L53\r\nhttps://github.com/rapidsai/cudf/blob/fb703b1a5384606e7fc13e5e931c6f57eb0bb8ff/cpp/tests/groupby/count_scan_tests.cpp#L146-L151\r\nhttps://github.com/rapidsai/cudf/blob/fb703b1a5384606e7fc13e5e931c6f57eb0bb8ff/cpp/tests/groupby/count_scan_tests.cpp#L177-L181","createdAt":"2022-09-26T15:42:41Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10237#issuecomment-1258237365","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5LAc51","author":{"login":"mythrocks"},"authorAssociation":"CONTRIBUTOR","body":">  It looks like it is waiting for you to have a non-java repro case. \r\n\r\nI have been otherwise occupied, so I didn't get the time to write a repro. \r\n\r\n> Do you need someone else to help you write it?\r\n\r\nNo, the issue really was time/focus. I'll get on writing a suitable test.\r\n\r\nEdit: From @davidwendt's post, it does appear that this is intentional. Big yikes.\r\n\r\nCould someone please help me understand how this is the right behaviour?\r\ncc @karthikeyann. Perhaps I'm misreading what this function should be doing.","createdAt":"2022-09-26T17:58:17Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10237#issuecomment-1258409589","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5LAgNu","author":{"login":"jrhemstad"},"authorAssociation":"CONTRIBUTOR","body":"I missed in the original issue description that this was for groupby *scan*. I had thought this was just for regular groupby `count`.\r\n\r\nI don't know much about the groupby scan implementation, so it sounds like a bug of using exclusive scan vs inclusive scan. ","createdAt":"2022-09-26T18:10:53Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/10237#issuecomment-1258423150","viewerDidAuthor":false}],"createdAt":"2022-02-07T20:27:52Z","id":"I_kwDOBWUGps5DJHXg","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"},{"id":"MDU6TGFiZWwxNDA1MTQ1NjIz","name":"cuDF (Java)","description":"Affects Java cuDF API.","color":"006b75"}],"milestone":null,"number":10237,"projectCards":[{"project":{"name":"Bug Squashing"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] Investigate group-by scan `COUNT` aggregation returning 0-based results","updatedAt":"2024-02-23T18:43:00Z","url":"https://github.com/rapidsai/cudf/issues/10237"}
