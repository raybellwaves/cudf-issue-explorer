{"assignees":[],"author":{"id":"MDQ6VXNlcjE2OTI5MTQ=","is_bot":false,"login":"randerzander","name":"Randy Gelhausen"},"body":"It's embarrassingly common to accidentally produce empty \"CSV\" files, then for a downstream system to fail on attempting to read them.\r\n\r\nIf I'm trying to read an empty file with Pandas, I get a helpful error message indicating the problem.\r\n\r\n```\r\nimport pandas as pd\r\n\r\nwith open('test.csv', 'w') as fp:\r\n    fp.write('')\r\n\r\npd.read_csv('test.csv')\r\n```\r\n```\r\n---------------------------------------------------------------------------\r\nEmptyDataError                            Traceback (most recent call last)\r\n/tmp/ipykernel_3734411/2382990058.py in <module>\r\n      4     fp.write('')\r\n      5 \r\n----> 6 pd.read_csv('test.csv')\r\n\r\n~/conda/envs/dsql-dask-main/lib/python3.8/site-packages/pandas/util/_decorators.py in wrapper(*args, **kwargs)\r\n    309                     stacklevel=stacklevel,\r\n    310                 )\r\n--> 311             return func(*args, **kwargs)\r\n    312 \r\n    313         return wrapper\r\n\r\n~/conda/envs/dsql-dask-main/lib/python3.8/site-packages/pandas/io/parsers/readers.py in read_csv(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, error_bad_lines, warn_bad_lines, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options)\r\n    584     kwds.update(kwds_defaults)\r\n    585 \r\n--> 586     return _read(filepath_or_buffer, kwds)\r\n    587 \r\n    588 \r\n\r\n~/conda/envs/dsql-dask-main/lib/python3.8/site-packages/pandas/io/parsers/readers.py in _read(filepath_or_buffer, kwds)\r\n    480 \r\n    481     # Create the parser.\r\n--> 482     parser = TextFileReader(filepath_or_buffer, **kwds)\r\n    483 \r\n    484     if chunksize or iterator:\r\n\r\n~/conda/envs/dsql-dask-main/lib/python3.8/site-packages/pandas/io/parsers/readers.py in __init__(self, f, engine, **kwds)\r\n    809             self.options[\"has_index_names\"] = kwds[\"has_index_names\"]\r\n    810 \r\n--> 811         self._engine = self._make_engine(self.engine)\r\n    812 \r\n    813     def close(self):\r\n\r\n~/conda/envs/dsql-dask-main/lib/python3.8/site-packages/pandas/io/parsers/readers.py in _make_engine(self, engine)\r\n   1038             )\r\n   1039         # error: Too many arguments for \"ParserBase\"\r\n-> 1040         return mapping[engine](self.f, **self.options)  # type: ignore[call-arg]\r\n   1041 \r\n   1042     def _failover_to_python(self):\r\n\r\n~/conda/envs/dsql-dask-main/lib/python3.8/site-packages/pandas/io/parsers/c_parser_wrapper.py in __init__(self, src, **kwds)\r\n     67         kwds[\"dtype\"] = ensure_dtype_objs(kwds.get(\"dtype\", None))\r\n     68         try:\r\n---> 69             self._reader = parsers.TextReader(self.handles.handle, **kwds)\r\n     70         except Exception:\r\n     71             self.handles.close()\r\n\r\n~/conda/envs/dsql-dask-main/lib/python3.8/site-packages/pandas/_libs/parsers.pyx in pandas._libs.parsers.TextReader.__cinit__()\r\n\r\nEmptyDataError: No columns to parse from file\r\n```\r\n\r\nWhen I try to read an empty CSV file from Dask-cudf (or cudf directly), it's not clear if I perhaps OOMed or some other non-input-file-related problem:\r\n```\r\n~/conda/envs/dsql-dask-main/lib/python3.8/site-packages/cudf-21.12.0a0+254.g84e5a03032-py3.8-linux-x86_64.egg/cudf/io/csv.py in read_csv(filepath_or_buffer, lineterminator, quotechar, quoting, doublequote, header, mangle_dupe_cols, usecols, sep, delimiter, delim_whitespace, skipinitialspace, names, dtype, skipfooter, skiprows, dayfirst, compression, thousands, decimal, true_values, false_values, nrows, byte_range, skip_blank_lines, parse_dates, comment, na_values, keep_default_na, na_filter, prefix, index_col, use_python_file_object, **kwargs)\r\n     78         na_values = [na_values]\r\n     79 \r\n---> 80     return libcudf.csv.read_csv(\r\n     81         filepath_or_buffer,\r\n     82         lineterminator=lineterminator,\r\n\r\ncudf/_lib/csv.pyx in cudf._lib.csv.read_csv()\r\n\r\ncudf/_lib/csv.pyx in cudf._lib.csv.make_csv_reader_options()\r\n\r\ncudf/_lib/io/utils.pyx in cudf._lib.io.utils.make_source_info()\r\n\r\nIndexError: Out of bounds on buffer access (axis 0)\r\n```","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps47TXN4","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2021-12-15T16:02:49Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/9676#issuecomment-994931576","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps4_qvVz","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2022-03-15T16:07:48Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/9676#issuecomment-1068168563","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5Iif86","author":{"login":"galipremsagar"},"authorAssociation":"CONTRIBUTOR","body":"With the recent changes to csv reader, the current behavior seems to be that we are returning an empty dataframe. To me, it seems like an _okay_ behavior?:\r\n\r\n```python\r\nIn [4]: import pandas as pd\r\n   ...: \r\n   ...: with open('test.csv', 'w') as fp:\r\n   ...:     fp.write('')\r\n   ...: \r\n\r\nIn [5]: cudf.read_csv(\"test.csv\")\r\nOut[5]: \r\nEmpty DataFrame\r\nColumns: []\r\nIndex: []\r\n```\r\n\r\n@randerzander is this an agreeable behavior in this scenario? or do you think otherwise?","createdAt":"2022-08-16T18:33:26Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/9676#issuecomment-1217003322","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps59tJEN","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"The above is still the status quo here:\r\n```\r\n>>> import pandas as pd\r\n>>> import cudf\r\n>>> with open(\"test.csv\", \"w\") as fp:\r\n...     fp.write(\"\")\r\n... \r\n0\r\n>>> pd.read_csv(\"test.csv\")\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/coder/.conda/envs/rapids/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 1026, in read_csv\r\n    return _read(filepath_or_buffer, kwds)\r\n  File \"/home/coder/.conda/envs/rapids/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 620, in _read\r\n    parser = TextFileReader(filepath_or_buffer, **kwds)\r\n  File \"/home/coder/.conda/envs/rapids/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 1620, in __init__\r\n    self._engine = self._make_engine(f, self.engine)\r\n  File \"/home/coder/.conda/envs/rapids/lib/python3.10/site-packages/pandas/io/parsers/readers.py\", line 1898, in _make_engine\r\n    return mapping[engine](f, **self.options)\r\n  File \"/home/coder/.conda/envs/rapids/lib/python3.10/site-packages/pandas/io/parsers/c_parser_wrapper.py\", line 93, in __init__\r\n    self._reader = parsers.TextReader(src, **kwds)\r\n  File \"parsers.pyx\", line 581, in pandas._libs.parsers.TextReader.__cinit__\r\npandas.errors.EmptyDataError: No columns to parse from file\r\n>>> cudf.read_csv(\"test.csv\")\r\nEmpty DataFrame\r\nColumns: []\r\nIndex: []\r\n```\r\n\r\nGiven the growth of cudf.pandas since this issue was first created, we probably want to aim for closer matching now.","createdAt":"2024-05-13T23:23:50Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/9676#issuecomment-2108985613","viewerDidAuthor":false}],"createdAt":"2021-11-12T22:16:00Z","id":"I_kwDOBWUGps4-uwwm","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":{"number":5,"title":"Pandas API Alignment and Coverage","description":"","dueOn":null},"number":9676,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Improve cudf.read_csv empty file error message","updatedAt":"2024-05-13T23:23:51Z","url":"https://github.com/rapidsai/cudf/issues/9676"}
