{"assignees":[],"author":{"id":"MDQ6VXNlcjExMjY5ODE=","is_bot":false,"login":"wence-","name":"Lawrence Mitchell"},"body":"In many places in the cudf code we zip two (or more) iterables together with the assumption/precondition that they are all of equal length. The pattern is (approximately):\r\n\r\n```python\r\nnames: list[str]\r\ncolumns: list[Column]\r\ndata: dict[str, Column] = dict(zip(names, columns))\r\n```\r\n\r\nThis has, by design of zip, a potential problem lurking in that if the two inputs are _not_ of equal length, we only keep the first `min(len(names), len(columns))` objects.\r\n\r\nTo avoid check this at user-input boundaries we need to be careful to check (and then raise if not) that the inputs we are zipping _do_ have equal length. This is easy to forget.\r\n\r\n[Python 3.10](https://docs.python.org/3/library/functions.html#zip) introduces a new keyword-argument to `zip`, `strict`, which can be used to assert that the inputs have the same length. We should consider using this across the code-base when no longer supporting Python 3.9.\r\n","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5-zgXH","author":{"login":"mroeschke"},"authorAssociation":"CONTRIBUTOR","body":"+1. Also there's a ruff rule that would allow us to enforce this https://docs.astral.sh/ruff/rules/zip-without-explicit-strict/","createdAt":"2024-05-23T15:30:58Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/15835#issuecomment-2127431111","viewerDidAuthor":false}],"createdAt":"2024-05-23T09:59:08Z","id":"I_kwDOBWUGps6J1bG3","labels":[{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"},{"id":"MDU6TGFiZWwyNTQ2NTIxMDI0","name":"improvement","description":"Improvement / enhancement to an existing function","color":"bfd4f2"}],"milestone":null,"number":15835,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[ENH] Use `strict=True` argument to `zip` once py39 support is dropped","updatedAt":"2024-05-23T15:31:13Z","url":"https://github.com/rapidsai/cudf/issues/15835"}
