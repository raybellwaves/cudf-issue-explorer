{"assignees":[],"author":{"id":"MDQ6VXNlcjMxOTA0MDU=","is_bot":false,"login":"shwina","name":"Ashwin Srinath"},"body":"When we roundtrip a `Frame` between Python and libcudf, we potentially lose a bunch of metadata:\r\n\r\n1. Names of columns\r\n2. Whether the columns have multiple levels (i.e., the Frame has a MultiIndex as its columns(\r\n3. The level names\r\n\r\n## The problem\r\n\r\nlibcudf functions return a `unique_ptr<cudf::table>`, we  convert that `table` into a  `Frame` in the function [from_unique_ptr](https://github.com/rapidsai/cudf/blob/ec5364c2fc0a3c63583e648ec90efa8d3b5675bc/python/cudf/cudf/_lib/table.pyx#L82). Here, we pass the column names (1), but not the multiindex (2) or level_names (3) metadata.\r\n\r\nThis can lead to surprising behaviour in many situations. For example, consider the `loc` call below where we lose the `multiindex` part of our metadata:\r\n\r\n```python\r\nIn [10]: df\r\nOut[10]:\r\n    a       b\r\n  sum min max min\r\na\r\n2   4   2   5   4\r\n1   3   1   3   1\r\n\r\nIn [11]: df.loc[[2, 2, 1, 1], :]\r\nOut[11]:\r\n   (a, sum)  (a, min)  (b, max)  (b, min)\r\na\r\n2         4         2         5         4\r\n2         4         2         5         4\r\n1         3         1         3         1\r\n1         3         1         3         1\r\n\r\nIn [12]: df.to_pandas().loc[[2, 2, 1, 1], :]\r\nOut[12]:\r\n    a       b\r\n  sum min max min\r\na\r\n2   4   2   5   4\r\n2   4   2   5   4\r\n1   3   1   3   1\r\n1   3   1   3   1\r\n```\r\n\r\n## Proposed solution\r\n\r\nWe could introduce an internal `ColumnMeta` type:\r\n\r\n```python\r\nclass ColumnMeta:\r\n    names: Tuple[Any]\r\n    multiindex: bool\r\n    level_names: Optional[Tuple[Any]]\r\n```\r\n\r\nwhich could be a property of `Frame` objects for convenience:\r\n\r\n```python\r\nclass Frame:\r\n    @cached_property\r\n    def _column_meta(self):\r\n         ...\r\n```\r\n\r\nNow, instead of passing just the column names and index names to `from_unique_ptr`, we could pass the full metadata for both:\r\n\r\n```python\r\ncdef Table from_unique_ptr(\r\n    unique_ptr[table] c_tbl,\r\n    ColumnMeta data_meta,\r\n    ColumnMeta index_meta=None\r\n):\r\n```\r\n\r\nand it would construct the resulting `Frame` with the correct column metadata.\r\n\r\n--\r\n\r\nWith this, a typical Python wrapper around a libcudf API would be:\r\n\r\n```python\r\ndef py_func(Table foo, ...):\r\n    cdef table_view c_input = foo.view()\r\n    cdef unique_ptr[table] c_result\r\n    with nogil:\r\n        c_result = cpp_func(c_input)\r\n    return Table.from_unique_ptr(c_result, foo._column_meta, foo.index._column_meta)\r\n```","closed":false,"closedAt":null,"comments":[{"id":"MDEyOklzc3VlQ29tbWVudDgyMTk4OTM1NA==","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2021-04-18T13:09:24Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/7644#issuecomment-821989354","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps49geS4","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2022-02-07T21:05:19Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/7644#issuecomment-1031922872","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps59fcn7","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"We will want to revisit something like this when we refactor cudf internals around pylibcudf. The translation layer can then be in pure Python with the C++/libcudf complexities abstracted away by pylibcudf.","createdAt":"2024-05-11T00:05:22Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/7644#issuecomment-2105395707","viewerDidAuthor":false}],"createdAt":"2021-03-18T22:07:35Z","id":"MDU6SXNzdWU4MzUzMDk0MjM=","labels":[{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":null,"number":7644,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA][INTERNALS] A `ColumnMeta` type to represent the column metadata of a `Frame`","updatedAt":"2024-05-11T00:05:23Z","url":"https://github.com/rapidsai/cudf/issues/7644"}
