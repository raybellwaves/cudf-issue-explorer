{"assignees":[],"author":{"id":"MDQ6VXNlcjc0MTY5MzU=","is_bot":false,"login":"ttnghia","name":"Nghia Truong"},"body":"Currently, `experimental/row_operators.cuh` file is huge: over 1200LOC and is growing. Including the entire file into a source file that only uses a small part of it is burdensome. I also feel dizzy while navigating it trying to find a struct/function of interest.\r\n\r\nWe should split it up (and re-organize files) into separate files like:\r\n * `experimental/row_operators/common.cuh`\r\n * `experimental/row_operators/lexicographic.cuh`\r\n * `experimental/row_operators/equality.cuh`\r\n * `experimental/row_operators/hashing.cuh`\r\n * ...","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5EGJhH","author":{"login":"ttnghia"},"authorAssociation":"CONTRIBUTOR","body":"Tag directly related devs: @devavret @jrhemstad @bdice.","createdAt":"2022-05-31T18:13:35Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11012#issuecomment-1142462535","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5EGMsc","author":{"login":"devavret"},"authorAssociation":"CONTRIBUTOR","body":"The only reason it was one monolithic header is because it was a replacement of the single `row_operators.cuh` header. Splitting it is fine. We might need to keep equality and hashing in the same header because they use each other's pre-processed table ","createdAt":"2022-05-31T18:17:57Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11012#issuecomment-1142475548","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5EGQho","author":{"login":"ttnghia"},"authorAssociation":"CONTRIBUTOR","body":"Then the hashing header can just include the equality header. Some source files just need equality comparison.\r\n\r\nWait: Using each other table? Then I'm not sure...","createdAt":"2022-05-31T18:21:19Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/11012#issuecomment-1142491240","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5EGbah","author":{"login":"bdice"},"authorAssociation":"CONTRIBUTOR","body":"This idea seems fine to me. We'll want to make sure that the designs stay parallel (wherever possible) despite being in separate files.","createdAt":"2022-05-31T19:00:56Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11012#issuecomment-1142535841","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5EGdE4","author":{"login":"ttnghia"},"authorAssociation":"CONTRIBUTOR","body":"Thanks all. Then I'll go ahead and do this split. Will have a PR up shortly.","createdAt":"2022-05-31T19:08:44Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11012#issuecomment-1142542648","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5EGmzU","author":{"login":"jrhemstad"},"authorAssociation":"CONTRIBUTOR","body":"I'm fine with this, but let's wait on splitting them up until we are ready to move them out of \"experimental\". Then we can split them as we move their namespaces. ","createdAt":"2022-05-31T19:54:11Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/11012#issuecomment-1142582484","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5HdTpQ","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2022-07-29T04:21:32Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11012#issuecomment-1198864976","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5MuxNQ","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"I believe that addressing this is blocked on #11844, or at least should be conditioned on addressing that issue. Once the newer comparators are used everywhere, we can remove the old comparators and move the new ones into the places that we want them.","createdAt":"2022-10-21T18:54:38Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/11012#issuecomment-1287328592","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5U183C","author":{"login":"divyegala"},"authorAssociation":"MEMBER","body":"@vyasr @bdice @ttnghia @GregoryKimball \r\n\r\nI am about to go ahead and start on this issue, please let me know your thoughts. I prefer breaking these up as:\r\n\r\n- `lexicographical/row_operators.cuh`\r\n- `equality/row_operators.cuh`\r\n- `hash/row_operators.cuh`\r\n\r\nThe reason I prefer to split them up this way is that we will be mirroring the sub-directory structure with the namespaces.\r\n\r\nAny common code can be present in `row_operators_common.cuh/hpp`.\r\n\r\nFurthermore, in my PR I will add some redundancy if any code in `experimental` relies on the current version of `row_operators.cuh` by copying over those sections. By doing this, when we are ready to drop `experimental`, we just delete the old `row_operators.cuh`, move up contents of `experimental` to the parent directory, and perform simple find-and-replace to remove `experimental::` from the call sites.","createdAt":"2023-02-09T00:33:29Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11012#issuecomment-1423429058","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5VA3bu","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"I have a slight preference for subdirectories over underscores as well, and I am fine with the temporary duplication.","createdAt":"2023-02-10T20:15:25Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11012#issuecomment-1426290414","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5VA5SR","author":{"login":"bdice"},"authorAssociation":"CONTRIBUTOR","body":"This proposal sounds fine to me. Roughly how far are we from migrating entirely to \"experimental\" comparators? Are there any hard cases left, or are all the remaining instances relatively straightforward?","createdAt":"2023-02-10T20:23:17Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11012#issuecomment-1426298001","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5VA6DO","author":{"login":"divyegala"},"authorAssociation":"MEMBER","body":"@bdice there are a couple of hard cases left. The most notorious one being joins. The actual update is easy, of course, but it's going to be difficult testing each and every single join for nested types in terms of it being a mechanical, time consuming process.\n\nThat being said, I'm hoping we can drop experimental by the very end of 23.04 release, or very start of 23.06 release.","createdAt":"2023-02-10T20:26:00Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11012#issuecomment-1426301134","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5VBH3a","author":{"login":"ttnghia"},"authorAssociation":"CONTRIBUTOR","body":"So you're proposing:\r\n```\r\nlexicographic/row_operators.cuh\r\nequality/row_operators.cuh\r\n...\r\n```\r\ninstead of\r\n```\r\nrow_operators/common.cuh\r\nrow_operators/lexicographic.cuh\r\n...\r\n```\r\n\r\nThen what other files will be in these directories (`lexicographic/`, `equality/`,  etc)? And where the `row_operators_common.cuh/hpp` files will be placed?","createdAt":"2023-02-10T21:17:22Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11012#issuecomment-1426357722","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5VBIZc","author":{"login":"divyegala"},"authorAssociation":"MEMBER","body":"@ttnghia no other files for now, but giving us the option to have comparator-specific files to put in these sub-directories in the future.\r\n\r\n`row_operators_common.cuh/hpp` file will be in the parent directory, which in this case is: `cudf/include/table/`\r\n\r\nI suggest this because the namespacing is super confusing right now. `row::lexicographic::...` but we have no directories called `row` or `lexicographic`","createdAt":"2023-02-10T21:19:59Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11012#issuecomment-1426359900","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5VBMfJ","author":{"login":"ttnghia"},"authorAssociation":"CONTRIBUTOR","body":"The namespace does not always align with directories. You can see many files like `cudf/detail/something.hpp` vs `cudf/something/detail/something_detail.hpp` which all have the same namespace hierarchy.","createdAt":"2023-02-10T21:39:43Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11012#issuecomment-1426376649","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5VBweI","author":{"login":"divyegala"},"authorAssociation":"MEMBER","body":"That is a specific structure of the `detail` API that libcudf follows - I don't see where else cudf doesn't follow namespace <-> directory.\r\n\r\nAlternatively, I would also be okay with `row/lexicographic.cuh` to follow the namespace `row::lexicographic`.\r\n\r\nWhile I have been doing these updates to the experimental API, I *always* forget what the actual namespace of the comparators are because they don't make any sense when it comes to the directory/file naming.","createdAt":"2023-02-11T00:20:15Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11012#issuecomment-1426524040","viewerDidAuthor":false}],"createdAt":"2022-05-31T18:05:23Z","id":"I_kwDOBWUGps5Kwcn9","labels":[{"id":"MDU6TGFiZWwxMDEzOTg3OTIx","name":"proposal","description":"Change current process or code","color":"2a2c89"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"}],"milestone":{"number":25,"title":"Helps libcudf C++ integrations","description":"","dueOn":null},"number":11012,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Split `experimental/row_operators.cuh`","updatedAt":"2024-02-23T18:42:33Z","url":"https://github.com/rapidsai/cudf/issues/11012"}
