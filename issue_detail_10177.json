{"assignees":[{"id":"MDQ6VXNlcjE1MzgxNjU=","login":"vyasr","name":"Vyas Ramasubramani"}],"author":{"id":"MDQ6VXNlcjM5NDM3NjE=","is_bot":false,"login":"bdice","name":"Bradley Dice"},"body":"**Is your feature request related to a problem? Please describe.**\r\n`cudf.Series` does not have reverse binary operators for bitwise operators like `__rxor__`. This was caught after changing the output of `Series.hash_values` from a `cupy.array` to a `cudf.Series` in #9390, which broke NVTabular: https://github.com/NVIDIA-Merlin/NVTabular/pull/1376#pullrequestreview-868327738. The `cupy.array` class supports both directions, like `array ^ scalar` and `scalar ^ array`. Similarly, pandas supports both directions. Currently `cudf.Series` only supports `series ^ scalar`.\r\n\r\n**Describe the solution you'd like**\r\nAdd reverse binary operators for all cases that are missing, which include at least bitwise operators like `__rxor__` but possibly others as well. Missing operators have been addressed several times in the past (#208, #213, #1292, #8598, ...). Resolving this issue should involve checking the full list in the [Python object model documentation](https://docs.python.org/3/reference/datamodel.html#object.__radd__) to make sure we catch everything that pandas supports.\r\n\r\n**Additional context**\r\nA workaround is to use the binary operator in the reverse order (for commutative operators).","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps49zNsm","author":{"login":"bdice"},"authorAssociation":"CONTRIBUTOR","body":"List of other operators I've found are implemented in pandas but not cudf:\r\n- `__divmod__(self, other)` (docs on [divmod](https://docs.python.org/3/library/functions.html#divmod))\r\n- `__rdivmod__(self, other)`\r\n- `__round__(self, ndigits)`","createdAt":"2022-02-12T00:23:33Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10177#issuecomment-1036835622","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps4-qqFr","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"#10360 handles the reverse binary operators. The three that you listed in your last comment are not yet done. divmod and rdivmod are out of scope for #10360 but are in general trivial to implement in the relevant classes once that PR is merged since they are just \r\n```\r\ndef __divmod__(self, other):\r\n    return self // other, self % other\r\ndef __rdivmod__(self, other):\r\n    return other // self, other % self\r\n```\r\nI think they should probably just bypass the new binop machinery, but maybe there will be a benefit to including them.\r\n\r\n`round` is a little different from other binary operations because the second parameter is optional, i.e. `round(x)` will not pass a parameter for `ndigits` so you have to make sure to handle the `None` case. Obviously trivial to do, but a reason to perhaps not shoehorn it into the same patterns and instead implement it separately.","createdAt":"2022-02-25T23:45:29Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/10177#issuecomment-1051369835","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps4-0KS8","author":{"login":"bdice"},"authorAssociation":"CONTRIBUTOR","body":"@vyasr Awesome. I subscribed to notifications on #10360 and I can take a look at the missing operators after that PR is merged. I changed the title of this issue to reflect the change in scope.","createdAt":"2022-02-28T04:02:48Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10177#issuecomment-1053861052","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5CPkhz","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2022-04-27T19:07:56Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10177#issuecomment-1111378035","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5HSFlj","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2022-07-26T20:03:28Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10177#issuecomment-1195923811","viewerDidAuthor":false}],"createdAt":"2022-01-31T20:11:54Z","id":"I_kwDOBWUGps5CwBMO","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":{"number":5,"title":"Pandas API Alignment and Coverage","description":"","dueOn":null},"number":10177,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[{"content":"EYES","users":{"totalCount":1}}],"state":"OPEN","title":"[FEA] Support missing operators in cudf.Series (`__divmod__`, `__rdivmod__`, `__round__`).","updatedAt":"2024-02-23T18:43:02Z","url":"https://github.com/rapidsai/cudf/issues/10177"}
