{"assignees":[],"author":{"id":"MDQ6VXNlcjc0MTY5MzU=","is_bot":false,"login":"ttnghia","name":"Nghia Truong"},"body":"Currently, various cudf APIs need to use a special constant to denote an **invalid** row index for certain operations. However, there is not any guideline on what constant should be used to mark an invalid index row. Therefore, different APIs implement their own `INVALID_INDEX` constant.\r\n\r\nFor example:\r\n * `lists/explode.cu`: `constexpr size_type InvalidIndex = -1;`\r\n * `detail/scatter.cuh`:  `std::numeric_limits<size_type>::lowest()` is used\r\n * `lists/extract.cu`: `std::numeric_limits<size_type>::max()` is used\r\n\r\nAnd maybe more. As such, the constants used for `INVALID_INDEX` is not agreed across cudf development. We should explicitly add a sentinel constant in some of cudf main header and replace the existing ones with it. By doing so, we can enforce consistency and reduce confusion (why this file uses `-1` while other file uses `numeric_limit::lowest()` or `numeric_limit::max()`).","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps44MVDO","author":{"login":"harrism"},"authorAssociation":"MEMBER","body":"If this is added, be sure to add a section to the libcudf DEVELOPER_GUIDE.md as well.","createdAt":"2021-10-13T22:06:12Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/9426#issuecomment-942756046","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps45xp2I","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2021-11-15T21:02:50Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/9426#issuecomment-969317768","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps495Xyy","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2022-02-13T22:02:57Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/9426#issuecomment-1038449842","viewerDidAuthor":false}],"createdAt":"2021-10-13T03:26:58Z","id":"I_kwDOBWUGps49FCOE","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"},{"id":"MDU6TGFiZWwyNTQ2NTIxMDI0","name":"improvement","description":"Improvement / enhancement to an existing function","color":"bfd4f2"},{"id":"MDU6TGFiZWwyNTQ2NTIxMDY4","name":"non-breaking","description":"Non-breaking change","color":"0e8a16"}],"milestone":null,"number":9426,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[{"content":"EYES","users":{"totalCount":1}}],"state":"OPEN","title":"[FEA] Add a sentinel `constexpr` value to denote `INVALID_INDEX`","updatedAt":"2024-02-23T18:42:43Z","url":"https://github.com/rapidsai/cudf/issues/9426"}
