{"assignees":[],"author":{"id":"MDQ6VXNlcjExMjY1Mw==","is_bot":false,"login":"mattf","name":"Matthew Farrellee"},"body":"**Is your feature request related to a problem? Please describe.**\r\nworking with `import cudf as pd`\r\n\r\n**Describe the solution you'd like**\r\nsupport for math ops matching `pandas`\r\n\r\n```\r\nIn [1]: import cudf as pd\r\n\r\nIn [2]: pd.__version__\r\nOut[2]: '22.12.0'\r\n\r\nIn [3]: df = pd.DataFrame({'a': [1**2, 2**2, 3**2]})\r\n\r\nIn [4]: df.query('sqrt(a) >= 2')\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/dataframe.py:7559, in extract_col(df, col)\r\n   7558 try:\r\n-> 7559     return df._data[col]\r\n   7560 except KeyError:\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/column_accessor.py:155, in ColumnAccessor.__getitem__(self, key)\r\n    154 def __getitem__(self, key: Any) -> ColumnBase:\r\n--> 155     return self._data[key]\r\n\r\nKeyError: 'sqrt'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nKeyError                                  Traceback (most recent call last)\r\nCell In [4], line 1\r\n----> 1 df.query('sqrt(a) >= 2')\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/dataframe.py:4174, in DataFrame.query(self, expr, local_dict)\r\n   4168 callenv = {\r\n   4169     \"locals\": callframe.f_locals,\r\n   4170     \"globals\": callframe.f_globals,\r\n   4171     \"local_dict\": local_dict,\r\n   4172 }\r\n   4173 # Run query\r\n-> 4174 boolmask = queryutils.query_execute(self, expr, callenv)\r\n   4175 return self._apply_boolean_mask(boolmask)\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/utils/queryutils.py:214, in query_execute(df, expr, callenv)\r\n    211 columns = compiled[\"colnames\"]\r\n    213 # prepare col args\r\n--> 214 colarrays = [cudf.core.dataframe.extract_col(df, col) for col in columns]\r\n    216 # wait to check the types until we know which cols are used\r\n    217 if any(col.dtype not in SUPPORTED_QUERY_TYPES for col in colarrays):\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/utils/queryutils.py:214, in <listcomp>(.0)\r\n    211 columns = compiled[\"colnames\"]\r\n    213 # prepare col args\r\n--> 214 colarrays = [cudf.core.dataframe.extract_col(df, col) for col in columns]\r\n    216 # wait to check the types until we know which cols are used\r\n    217 if any(col.dtype not in SUPPORTED_QUERY_TYPES for col in colarrays):\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/dataframe.py:7567, in extract_col(df, col)\r\n   7561 if (\r\n   7562     col == \"index\"\r\n   7563     and col not in df.index._data\r\n   7564     and not isinstance(df.index, MultiIndex)\r\n   7565 ):\r\n   7566     return df.index._data.columns[0]\r\n-> 7567 return df.index._data[col]\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/column_accessor.py:155, in ColumnAccessor.__getitem__(self, key)\r\n    154 def __getitem__(self, key: Any) -> ColumnBase:\r\n--> 155     return self._data[key]\r\n\r\nKeyError: 'sqrt'\r\n\r\nIn [5]: df.to_pandas().query('sqrt(a) >= 2')\r\nOut[5]: \r\n   a\r\n1  4\r\n2  9\r\n```\r\n\r\n**Additional context**\r\nhttps://github.com/pandas-dev/pandas/blob/v1.5.2/pandas/core/computation/ops.py#L39-L60","closed":false,"closedAt":null,"comments":[],"createdAt":"2023-01-10T00:45:18Z","id":"I_kwDOBWUGps5a_Z3V","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMDEzOTg3MzUy","name":"0 - Backlog","description":"In queue waiting for assignment","color":"d4c5f9"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":{"number":5,"title":"Pandas API Alignment and Coverage","description":"","dueOn":null},"number":12510,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] DataFrame.query support for math ops","updatedAt":"2023-06-06T03:55:31Z","url":"https://github.com/rapidsai/cudf/issues/12510"}
