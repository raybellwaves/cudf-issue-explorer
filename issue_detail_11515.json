{"assignees":[],"author":{"id":"MDQ6VXNlcjEzMTMxMDk4","is_bot":false,"login":"ChrisJar","name":""},"body":"**Describe the bug**\r\nSome dask custom aggregations (ex: a custom sum of squares aggregation) fail with dask_cudf.\r\n\r\n**Steps/Code to reproduce bug**\r\n```\r\nimport cudf\r\nimport dask_cudf\r\nimport dask.dataframe as dd\r\n\r\ndf = cudf.DataFrame({\"a\":[1,2,3], \"b\":[1,1,2]})\r\nddf = dask_cudf.from_cudf(df, npartitions=1)\r\n\r\nsum_of_squares = dd.Aggregation(\r\n    name='sum_of_squares',\r\n    chunk=lambda s: s.agg(lambda x: (x**2).sum()),\r\n    agg=lambda s0: s0.sum()\r\n)\r\n\r\nddf.groupby(\"b\").agg(sum_of_squares).compute()\r\n```\r\nreturns:\r\n```\r\nTypeError: unsupported operand type(s) for ** or pow(): 'type' and 'int'\r\n```\r\nhowever when running with a pandas backed dask dataframe:\r\n```\r\nddf.to_dask_dataframe().groupby(\"b\").agg(sum_of_squares).compute()\r\n```\r\nthe expected result is returned:\r\n```\r\n   a\r\nb   \r\n1  5\r\n2  9\r\nâ€‹\r\n```\r\n\r\ncc: @randerzander \r\n","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5IQk7e","author":{"login":"shwina"},"authorAssociation":"CONTRIBUTOR","body":"This fundamentally comes down to cuDF not supporting custom aggregations, e.g.,:\r\n\r\n\r\n```python\r\n>>> df.groupby('b').agg(lambda x: (x**2).sum())\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nInput In [21], in <cell line: 1>()\r\n----> 1 df.groupby('b').agg(lambda x: (x**2).sum())\r\n\r\nFile /raid/ashwint/cudf-dev/lib/python3.9/contextlib.py:79, in ContextDecorator.__call__.<locals>.inner(*args, **kwds)\r\n     76 @wraps(func)\r\n     77 def inner(*args, **kwds):\r\n     78     with self._recreate_cm():\r\n---> 79         return func(*args, **kwds)\r\n\r\nFile /raid/ashwint/cudf-dev/lib/python3.9/site-packages/cudf/core/groupby/groupby.py:316, in GroupBy.agg(self, func)\r\n    307 column_names, columns, normalized_aggs = self._normalize_aggs(func)\r\n    309 # Note: When there are no key columns, the below produces\r\n    310 # a Float64Index, while Pandas returns an Int64Index\r\n    311 # (GH: 6945)\r\n    312 (\r\n    313     result_columns,\r\n    314     grouped_key_cols,\r\n    315     included_aggregations,\r\n--> 316 ) = self._groupby.aggregate(columns, normalized_aggs)\r\n    318 result_index = self.grouping.keys._from_columns_like_self(\r\n    319     grouped_key_cols,\r\n    320 )\r\n    322 multilevel = _is_multi_agg(func)\r\n\r\nFile groupby.pyx:295, in cudf._lib.groupby.GroupBy.aggregate()\r\n\r\nFile groupby.pyx:170, in cudf._lib.groupby.GroupBy.aggregate_internal()\r\n\r\nFile aggregation.pyx:873, in cudf._lib.aggregation.make_groupby_aggregation()\r\n\r\nInput In [21], in <lambda>(x)\r\n----> 1 df.groupby('b').agg(lambda x: (x**2).sum())\r\n\r\nTypeError: unsupported operand type(s) for ** or pow(): 'type' and 'int'\r\n```","createdAt":"2022-08-11T17:58:42Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"HEART","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/11515#issuecomment-1212305118","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5IRB8M","author":{"login":"ChrisJar"},"authorAssociation":"CONTRIBUTOR","body":"Ah I see. Is there any other way to square the elements of a SeriesGroupBy object?","createdAt":"2022-08-11T19:52:29Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11515#issuecomment-1212423948","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5KE5R7","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2022-09-10T20:02:56Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11515#issuecomment-1242797179","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5Mr1nw","author":{"login":"GregoryKimball"},"authorAssociation":"CONTRIBUTOR","body":"Would this be possible with `apply` instead of `agg`? Is there an extension of #11452 that could accept some custom aggregations?","createdAt":"2022-10-21T07:19:22Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11515#issuecomment-1286560240","viewerDidAuthor":false}],"createdAt":"2022-08-11T16:04:18Z","id":"I_kwDOBWUGps5PpGyM","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMDEzOTg3MzUy","name":"0 - Backlog","description":"In queue waiting for assignment","color":"d4c5f9"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":null,"number":11515,"projectCards":[{"project":{"name":"Bug Squashing"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] Some custom dask aggregations fail with dask_cudf dataframes","updatedAt":"2022-10-21T07:19:58Z","url":"https://github.com/rapidsai/cudf/issues/11515"}
