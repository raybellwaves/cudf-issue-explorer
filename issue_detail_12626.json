{"assignees":[],"author":{"id":"MDQ6VXNlcjExMjY1Mw==","is_bot":false,"login":"mattf","name":"Matthew Farrellee"},"body":"**Is your feature request related to a problem? Please describe.**\r\nworking with `import cudf as pd`\r\n\r\n**Describe the solution you'd like**\r\n`cudf.DataFrame.corr` matching `pandas.DataFrame.corr` behavior\r\n\r\n1. addition of `numeric_only` parameter \r\n2. default `numeric_only=None` with deprecation warning and lifecycle similar to `pandas`\r\n\r\n```\r\nIn [1]: import cudf as pd\r\n\r\nIn [2]: pd.__version__\r\nOut[2]: '22.12.0'\r\n\r\nIn [3]: df = pd.DataFrame({'a': range(10), 'b': range(10,20), 'c': list('zyxwvutsrq')})\r\n\r\nIn [4]: df.corr()\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\nCell In [4], line 1\r\n----> 1 df.corr()\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/dataframe.py:6490, in DataFrame.corr(self, method, min_periods)\r\n   6470 \"\"\"Compute the correlation matrix of a DataFrame.\r\n   6471 \r\n   6472 Parameters\r\n   (...)\r\n   6487     The requested correlation matrix.\r\n   6488 \"\"\"\r\n   6489 if method == \"pearson\":\r\n-> 6490     values = self.values\r\n   6491 elif method == \"spearman\":\r\n   6492     values = self.rank().values\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/frame.py:433, in Frame.values(self)\r\n    420 @property\r\n    421 def values(self):\r\n    422     \"\"\"\r\n    423     Return a CuPy representation of the DataFrame.\r\n    424 \r\n   (...)\r\n    431         The values of the DataFrame.\r\n    432     \"\"\"\r\n--> 433     return self.to_cupy()\r\n\r\nFile ~/.local/lib/python3.9/site-packages/nvtx/nvtx.py:101, in annotate.__call__.<locals>.inner(*args, **kwargs)\r\n     98 @wraps(func)\r\n     99 def inner(*args, **kwargs):\r\n    100     libnvtx_push_range(self.attributes, self.domain.handle)\r\n--> 101     result = func(*args, **kwargs)\r\n    102     libnvtx_pop_range(self.domain.handle)\r\n    103     return result\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/frame.py:533, in Frame.to_cupy(self, dtype, copy, na_value)\r\n    507 @_cudf_nvtx_annotate\r\n    508 def to_cupy(\r\n    509     self,\r\n   (...)\r\n    512     na_value=None,\r\n    513 ) -> cupy.ndarray:\r\n    514     \"\"\"Convert the Frame to a CuPy array.\r\n    515 \r\n    516     Parameters\r\n   (...)\r\n    531     cupy.ndarray\r\n    532     \"\"\"\r\n--> 533     return self._to_array(\r\n    534         (lambda col: col.values.copy())\r\n    535         if copy\r\n    536         else (lambda col: col.values),\r\n    537         cupy.empty,\r\n    538         dtype,\r\n    539         na_value,\r\n    540     )\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/frame.py:498, in Frame._to_array(self, get_column_values, make_empty_matrix, dtype, na_value)\r\n    491 matrix = make_empty_matrix(\r\n    492     shape=(len(self), ncol), dtype=dtype, order=\"F\"\r\n    493 )\r\n    494 for i, col in enumerate(self._data.values()):\r\n    495     # TODO: col.values may fail if there is nullable data or an\r\n    496     # unsupported dtype. We may want to catch and provide a more\r\n    497     # suitable error.\r\n--> 498     matrix[:, i] = get_column_values_na(col)\r\n    499 return matrix\r\n\r\nFile cupy/_core/core.pyx:1508, in cupy._core.core.ndarray.__setitem__()\r\n\r\nFile cupy/_core/_routines_indexing.pyx:51, in cupy._core._routines_indexing._ndarray_setitem()\r\n\r\nFile cupy/_core/_routines_indexing.pyx:997, in cupy._core._routines_indexing._scatter_op()\r\n\r\nFile cupy/_core/_kernel.pyx:1292, in cupy._core._kernel.ufunc.__call__()\r\n\r\nFile cupy/_core/_kernel.pyx:1319, in cupy._core._kernel.ufunc._get_ufunc_kernel()\r\n\r\nFile cupy/_core/_kernel.pyx:1025, in cupy._core._kernel._get_ufunc_kernel()\r\n\r\nFile cupy/_core/_kernel.pyx:66, in cupy._core._kernel._get_simple_elementwise_kernel()\r\n\r\nFile cupy/_core/_kernel.pyx:322, in cupy._core._kernel._get_kernel_params()\r\n\r\nFile cupy/_core/_kernel.pyx:298, in cupy._core._kernel._ArgInfo.get_param_c_type()\r\n\r\nFile cupy/_core/_kernel.pyx:285, in cupy._core._kernel._ArgInfo.get_c_type()\r\n\r\nFile cupy/_core/_scalar.pyx:68, in cupy._core._scalar.get_typename()\r\n\r\nFile cupy/_core/_scalar.pyx:73, in cupy._core._scalar.get_typename()\r\n\r\nKeyError: <class 'numpy.object_'>\r\n\r\nIn [5]: df.to_pandas().corr()\r\n<ipython-input-5-98783459b7d9>:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\r\n  df.to_pandas().corr()\r\nOut[5]: \r\n     a    b\r\na  1.0  1.0\r\nb  1.0  1.0\r\n```\r\n\r\n[`pandas` introduced a `numeric_only` parameter](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.corr.html)\r\n\r\n```\r\nIn [6]: df.to_pandas().corr(numeric_only=True)\r\nOut[6]: \r\n     a    b\r\na  1.0  1.0\r\nb  1.0  1.0\r\n\r\nIn [7]: df.corr(numeric_only=True)\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nCell In [7], line 1\r\n----> 1 df.corr(numeric_only=True)\r\n\r\nTypeError: corr() got an unexpected keyword argument 'numeric_only'\r\n```\r\n```","closed":false,"closedAt":null,"comments":[],"createdAt":"2023-01-26T22:41:43Z","id":"I_kwDOBWUGps5c6rxk","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMDEzOTg3MzUy","name":"0 - Backlog","description":"In queue waiting for assignment","color":"d4c5f9"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":{"number":5,"title":"Pandas API Alignment and Coverage","description":"","dueOn":null},"number":12626,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] support numeric_only for DataFrame.corr","updatedAt":"2023-06-06T04:22:25Z","url":"https://github.com/rapidsai/cudf/issues/12626"}
