{"assignees":[],"author":{"id":"MDQ6VXNlcjU2Njk1OTMw","is_bot":false,"login":"nvdbaranec","name":""},"body":"If you have a schema that contains a list-of-struct, selecting a subset of the inner columns doesn't work.  Example\r\n\r\n`list<struct<int, float>>`\r\nIf the schema for this column was\r\n\r\n```\r\nA           (list)\r\n   B        (struct)\r\n       C    (int)\r\n       D    (float)\r\n```\r\nAttempting to select \"A.B.C\" would not work.  I believe this is being caused by some schema preprocessing that we are doing that is injecting fake schema elements to ease schema interpretation.  Essentially we see a schema that looks like this:\r\n\r\n```\r\nA            (list)\r\n  list       (the fake element\r\n     B       (struct)\r\n        C    (int)\r\n        D    (float)\r\n```\r\nSo \"A.B.C\" doesn't actually exist, only \"A.list.B.C\" and the code returns 0 columns.","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5tWmA_","author":{"login":"nvdbaranec"},"authorAssociation":"CONTRIBUTOR","body":"Actually, upon further review, this mystery \"list\" element is in the parquet file itself (it's one of the odd ways in which the spec allows you to specify list columns).  A question here though would be what would a user expect to be the correct way to do it.  For Pandas or Spark, would you expect to have to put \"list\" in there when selecting a subset of columns?  @jlowe  @shwina ","createdAt":"2023-11-30T22:08:20Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14539#issuecomment-1834639423","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5tWm_D","author":{"login":"hyperbolic2346"},"authorAssociation":"CONTRIBUTOR","body":"The schema for this part of the file is \r\n```\r\n  optional group field_id=-1 func_params (List) {\r\n    repeated group field_id=-1 list {\r\n      optional group field_id=-1 item {\r\n        optional int32 field_id=-1 order;\r\n        optional int32 field_id=-1 size;\r\n        optional binary field_id=-1 type (String);\r\n      }\r\n    }\r\n  }\r\n```","createdAt":"2023-11-30T22:11:48Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14539#issuecomment-1834643395","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5tWnQx","author":{"login":"revans2"},"authorAssociation":"CONTRIBUTOR","body":"Unfortunately unless you can normalize the schema it is not clear because there are multiple ways to encode the schema and it is not \"required\"\r\n\r\nhttps://github.com/apache/parquet-format/blob/master/LogicalTypes.md#lists\r\n\r\nIdeally the repeated group is called \"list\" but \r\n\r\nhttps://github.com/apache/parquet-format/blob/master/LogicalTypes.md#backward-compatibility-rules\r\n\r\ngives a lot of other options","createdAt":"2023-11-30T22:12:53Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14539#issuecomment-1834644529","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5tWpSz","author":{"login":"nvdbaranec"},"authorAssociation":"CONTRIBUTOR","body":"Right, that's the question:  are these details something you'd expect the end user to know or care about, or would they just expect \"A.B.C\"?  Maybe this is a what-would-Pandas-do question.","createdAt":"2023-11-30T22:21:02Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14539#issuecomment-1834652851","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5tqTYq","author":{"login":"etseidl"},"authorAssociation":"CONTRIBUTOR","body":"@nvdbaranec It's been a few years, but I believe the way to query in the above situation is to use `explode` to convert the list to separate rows.  If there were another column at the top of the hierarchy ('X'), then the value for 'X' would be repeated for each new row that the list 'A' was exploded into. Here's a pyspark query I did years ago against the data @hyperbolic2346 quoted above:\r\n```python\r\ndf.createOrReplaceTempView(\"asm\")\r\n\r\nsql = \"\"\"\r\nselect func_name, func_addr_start, blk_addr_start, blk_id, flatten(sources.asm) as asm from (\r\n  select func_name, func_addr_start, bb.blk_addr_start, bb.blk_id, filter(bb.sources,x->x.asm_scrub_type = 'no_scrub') as sources\r\n    from (select func_name, func_addr_start, explode(basic_blocks) as bb from asm))\r\nwhere func_name='introduce'\r\n\"\"\" \r\n```","createdAt":"2023-12-05T00:42:06Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14539#issuecomment-1839805994","viewerDidAuthor":false}],"createdAt":"2023-11-30T21:30:21Z","id":"I_kwDOBWUGps54X70U","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxMDEzOTg3MzUy","name":"0 - Backlog","description":"In queue waiting for assignment","color":"d4c5f9"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"},{"id":"MDU6TGFiZWwxMTg1MjQ0MTQy","name":"cuIO","description":"cuIO issue","color":"fef2c0"}],"milestone":{"number":22,"title":"Parquet continuous improvement","description":"","dueOn":null},"number":14539,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] Parquet column selection by name with schemas including   list<struct<X, Y>> does not work.","updatedAt":"2024-02-16T23:02:49Z","url":"https://github.com/rapidsai/cudf/issues/14539"}
