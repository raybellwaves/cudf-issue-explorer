{"assignees":[{"id":"MDQ6VXNlcjUzNzk2MDk5","login":"brandon-b-miller","name":""}],"author":{"id":"MDQ6VXNlcjUzNzk2MDk5","is_bot":false,"login":"brandon-b-miller","name":""},"body":"**Describe the bug**\r\nPandas series and dataframe reductions default to `skipna=True`, our JIT operators don't fully support this behavior. \r\n\r\n\r\n**Steps/Code to reproduce bug**\r\n```python\r\nimport cudf\r\ndf = cudf.DataFrame({\r\n    'key1': [0,0],\r\n    'val1':[1, float('nan')]\r\n}, nan_as_null=False)\r\n\r\ndef func(df):\r\n    return df['val1'].sum()\r\n\r\nexpect = df.to_pandas().groupby('key1').apply(func)\r\ngot = df.groupby('key1').apply(func, engine='jit')\r\n\r\nprint(expect)\r\nprint(got)\r\n```\r\n```\r\nkey1\r\n0    1.0\r\ndtype: float64\r\nkey1\r\n0   NaN\r\ndtype: float64\r\n```\r\n\r\n\r\n**Expected behavior**\r\n`NaN` values should be ignored by default and the same numerical value should be returned from cuDF as pandas.\r\n\r\n**Environment overview (please complete the following information)**\r\n - Environment location: Bare-metal\r\n - Method of cuDF install: Source\r\n\r\n**Additional context**\r\nThe current operators have _some_ `NaN` handling, but it's mostly to cover cases where the entire sequence of values is `NaN` or for edge cases in some operators where we'd end up dividing by zero. However general `NaN` _skipping_ is not implemented leading to the buggy behavior. ","closed":false,"closedAt":null,"comments":[],"createdAt":"2024-01-24T13:57:57Z","id":"I_kwDOBWUGps59EfAx","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxMDE2MzIwNzI3","name":"numba","description":"Numba issue","color":"9c2cdd"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":null,"number":14860,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] Incorrect `NaN` ignoring in GroupBy JIT Reductions","updatedAt":"2024-01-24T13:57:58Z","url":"https://github.com/rapidsai/cudf/issues/14860"}
