{"assignees":[{"id":"MDQ6VXNlcjMxOTA0MDU=","login":"shwina","name":"Ashwin Srinath"}],"author":{"id":"MDQ6VXNlcjExNjY0MjU5","is_bot":false,"login":"galipremsagar","name":"GALI PREM SAGAR"},"body":"**Describe the bug**\r\nPandas-2.x introduced stricter checks for `.loc` when there is a `DatetimeIndex` present. We need to adapt similar checks and match the behavior in `pandas_2.0_feature_branch`\r\n\r\nFollowing are the failing pytests:\r\n```\r\nFAILED python/cudf/cudf/tests/test_indexing.py::test_loc_datetime_index[True-sli0]\r\nFAILED python/cudf/cudf/tests/test_indexing.py::test_loc_datetime_index[True-sli1]\r\nFAILED python/cudf/cudf/tests/test_indexing.py::test_loc_datetime_index[True-sli2]\r\nFAILED python/cudf/cudf/tests/test_indexing.py::test_loc_datetime_index[True-sli3]\r\nFAILED python/cudf/cudf/tests/test_indexing.py::test_loc_datetime_index[False-sli0]\r\nFAILED python/cudf/cudf/tests/test_indexing.py::test_loc_datetime_index[False-sli1]\r\nFAILED python/cudf/cudf/tests/test_indexing.py::test_loc_datetime_index[False-sli2]\r\nFAILED python/cudf/cudf/tests/test_indexing.py::test_loc_datetime_index[False-sli3]\r\n```\r\n\r\n","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5x3aBv","author":{"login":"shwina"},"authorAssociation":"CONTRIBUTOR","body":"@mroeschke in investigating this, I noticed an inconsistency in pandas behaviour. Could you verify if my expectations are correct?\r\n\r\nLet's start with this input:\r\n\r\n```python\r\nIn [16]: df\r\nOut[16]:\r\n2001-01-01    1\r\n2009-01-01    2\r\n2004-01-01    3\r\ndtype: int64\r\n```\r\n\r\nThe following should work, and it does ✅ \r\n\r\n\r\n```python\r\nIn [17]: df.loc[pd.to_datetime(\"2001\"):pd.to_datetime(\"2009\")]\r\nOut[17]:\r\n2001-01-01    1\r\n2009-01-01    2\r\ndtype: int64\r\n```\r\n\r\nThe following should work, and it does ✅ \r\n\r\n```python\r\nIn [19]: df.loc[\"2001\":]\r\nOut[19]:\r\n2001-01-01    1\r\n2009-01-01    2\r\n2004-01-01    3\r\ndtype: int64\r\n```\r\n\r\nThe following should raise with the new error in pandas 2, and it does ✅ \r\n\r\n```python\r\nIn [20]: df.loc[\"2001\":\"2006\"]\r\nKeyError: 'Value based partial slicing on non-monotonic DatetimeIndexes with non-existing keys is not allowed.'\r\n```\r\n\r\nThe following should work, but it doesn't ❌ \r\n\r\n```python\r\nIn [20]: df.loc[\"2001\":\"2009\"]\r\nKeyError: 'Value based partial slicing on non-monotonic DatetimeIndexes with non-existing keys is not allowed.'\r\n```\r\n","createdAt":"2024-01-25T14:43:04Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14863#issuecomment-1910349935","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5x4w44","author":{"login":"mroeschke"},"authorAssociation":"CONTRIBUTOR","body":"The last example is correct I believe albeit a bit confusing. \r\n\r\nWhen partial string indexing a `DatetimeIndex`, the `stop` slice is translated to a `Timestamp` at the end of the range that includes that date component so for the example `.loc[\"2001\":\"2009\"]`:\r\n\r\n`\"2001\"` -> `pd.Timestamp(\"2001-01-01 00:00:00.0000\")`\r\n`\"2009\"` -> `pd.Timestamp(\"2009-12-31 11:59:59.9999\")`\r\n\r\nThat behavior is described in https://pandas.pydata.org/docs/user_guide/timeseries.html#partial-string-indexing","createdAt":"2024-01-25T17:50:32Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14863#issuecomment-1910705720","viewerDidAuthor":false}],"createdAt":"2024-01-24T17:55:49Z","id":"I_kwDOBWUGps59GSaW","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":{"number":36,"title":"cudf.pandas API coverage","description":"","dueOn":null},"number":14863,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] `.loc` with `DatetimeIndex` needs to be have stricter checks similar to `pandas-2.x`","updatedAt":"2024-04-12T16:58:20Z","url":"https://github.com/rapidsai/cudf/issues/14863"}
