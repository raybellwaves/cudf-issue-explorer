{"assignees":[],"author":{"id":"MDQ6VXNlcjEwNjQ3MDgy","is_bot":false,"login":"mroeschke","name":"Matthew Roeschke"},"body":"**Is your feature request related to a problem? Please describe.**\r\nIn pandas, `nunique` ignores NA including nan. There is no way to currently mimic this behavior in cudf\r\n\r\n```\r\nIn [58]: import pandas\r\n\r\nIn [59]: import cudf\r\n\r\nIn [60]: import numpy as np\r\n\r\nIn [61]: cudf.Series([0.1, np.nan], nan_as_null=False).nunique()\r\nOut[61]: 2\r\n\r\nIn [62]: pandas.Series([0.1, np.nan]).nunique()\r\nOut[62]: 1\r\n```\r\n\r\n**Describe the solution you'd like**\r\nIt might be nice if `mode.pandas_compatible` would treat nan as NA and exclude `np.nan` from the `nunique`\r\n\r\n**Describe alternatives you've considered**\r\nAdding a `nan_as_null`, but I am not sure about thoughts of expanding the API\r\n\r\n**Additional context**\r\n\r\n","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5lUEHa","author":{"login":"galipremsagar"},"authorAssociation":"CONTRIBUTOR","body":"I'm a little confused because of conflicting pandas behavior in nullable-vs-non-nullable dtypes:\r\n```python\r\n\r\nIn [8]: cudf.Series([0.1, np.nan], nan_as_null=False).to_pandas(nullable=True)\r\nOut[8]: \r\n0    0.1\r\n1    NaN\r\ndtype: Float64\r\n\r\nIn [9]: cudf.Series([0.1, np.nan], nan_as_null=False).to_pandas(nullable=True).nunique()\r\nOut[9]: 2\r\n```\r\n\r\nLooks like we are matching `Float64`(nullable float) dtype behavior. Is this behavior incorrect? or is the one with numpy types incorrect?","createdAt":"2023-08-30T20:00:12Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/13988#issuecomment-1699758554","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5lULEt","author":{"login":"mroeschke"},"authorAssociation":"CONTRIBUTOR","body":"I would say the `Float64` (nullable float) behavior might be incorrect. Opened up https://github.com/pandas-dev/pandas/issues/54876 to confirm.\r\n\r\nAt least on the pandas since since `np.nan` is considered an `NA` value, I would expect nunique to ignore it","createdAt":"2023-08-30T20:23:05Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/13988#issuecomment-1699787053","viewerDidAuthor":false}],"createdAt":"2023-08-29T00:45:46Z","id":"I_kwDOBWUGps5vgJ56","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":null,"number":13988,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Allow mode.pandas_compatible to make nunique treat nan as NA","updatedAt":"2023-08-30T20:23:05Z","url":"https://github.com/rapidsai/cudf/issues/13988"}
