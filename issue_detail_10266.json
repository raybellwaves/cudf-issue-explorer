{"assignees":[],"author":{"id":"MDQ6VXNlcjEzMjA3MDY=","is_bot":false,"login":"wbo4958","name":"Bobby Wang"},"body":"This is part of FEA of https://github.com/NVIDIA/spark-rapids/issues/9\r\nWe have a JSON file\r\n\r\n``` json\r\n{name: \"Reynold Xin\"}\r\n```\r\n\r\nSpark can parse it when enabling `allowUnquotedFieldNames`\r\n\r\nCUDF parsing will throw exception\r\n\r\nWe expect there is a configure `allowUnquotedFieldNames` to control this behavior. ","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps4_jAmw","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2022-03-13T17:03:56Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10266#issuecomment-1066142128","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5DPin3","author":{"login":"revans2"},"authorAssociation":"CONTRIBUTOR","body":"Setting this to P1 as it is off by default in Spark","createdAt":"2022-05-16T21:19:02Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10266#issuecomment-1128147447","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5K8_KO","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2022-09-26T05:30:57Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10266#issuecomment-1257501326","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5L9_jp","author":{"login":"karthikeyann"},"authorAssociation":"CONTRIBUTOR","body":"should we support whitespace in the unquoted field names?\r\nWhat should be the behaviour if there is whitespace 1) at beginning of field name, 2) in middle of field name 3) after field name, but before `:` ?\r\nSimilarly what should be behaviour if there is newline for above 3 cases?\r\nShould we provide escape `\\` character support?","createdAt":"2022-10-11T11:35:10Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10266#issuecomment-1274542313","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5L_E-4","author":{"login":"revans2"},"authorAssociation":"CONTRIBUTOR","body":"> should we support whitespace in the unquoted field names?\r\n\r\nNo. see below for details\r\n\r\n> What should be the behaviour if there is whitespace 1) at beginning of field name, 2) in middle of field name 3) after field name, but before : ?\r\n\r\nWhite space at the beginning and after the name but before the `:` should be stripped out and removed. In the middle is an error.\r\n\r\n> Similarly what should be behaviour if there is newline for above 3 cases?\r\n\r\nThat would only show up for a non-json lines use case. In those cases newline is treated like other white space, and stripped from the beginning and end, but an error if it is in the middle.\r\n\r\n> Should we provide escape \\ character support?\r\n\r\nNot for unquoted names.  None quoted escape characters in the names of a field are considered an error. This is true even  if escaping any character is allowed as set by a second config.\r\n\r\nHere is the test files and code that I used.\r\n\r\n```\r\n\r\n$ cat test.json\r\n{name: \"A\", value : 100}\r\n{\"name\": \"B\", \"value \": 200}\r\n{name: \"C\", value\\ : 300}\r\n{name: \"D\",     value    : 400}\r\n{name: \"E\", name value: 500}\r\n{name: \"F\", name N value: 600}\r\n{name: \"G\", name\\nvalue: 700}\r\n{name: \"H\", \"name\\tvalue\": 800}\r\n{name: \"I\", \"name\\nvalue\": 900}\r\n{name: \"J\", va\\lue: 1000}\r\n{name: \"K\", \"va\\lue\": 1100}\r\n$ cat test_2.json\r\n{name: \"A\", value : 100,\r\n\"other \": 200, a\r\n:\r\n\"a\",\r\n\r\n\r\n\r\nABC: \"ABC\"}\r\n# spark-shell\r\nscala> spark.read.option(\"allowUnquotedFieldNames\", \"true\").option(\"multiLine\", \"true\").json(\"./test_2.json\").show(truncate = false)\r\n+---+---+----+------+-----+\r\n|ABC|a  |name|other |value|\r\n+---+---+----+------+-----+\r\n|ABC|a  |A   |200   |100  |\r\n+---+---+----+------+-----+\r\n\r\nscala> spark.read.options(Map(\"allowUnquotedFieldNames\" -> \"true\", \"allowBackslashEscapingAnyCharacter\" -> \"true\")).json(\"./test.json\").show(truncate = false)\r\n+------------------------------+----+-----------+-----------+-----+------+\r\n|_corrupt_record               |name|name\\tvalue|name\\nvalue|value|value |\r\n+------------------------------+----+-----------+-----------+-----+------+\r\n|null                          |A   |null       |null       |100  |null  |\r\n|null                          |B   |null       |null       |null |200   |\r\n|{name: \"C\", value\\ : 300}     |null|null       |null       |null |null  |\r\n|null                          |D   |null       |null       |400  |null  |\r\n|{name: \"E\", name value: 500}  |null|null       |null       |null |null  |\r\n|{name: \"F\", name N value: 600}|null|null       |null       |null |null  |\r\n|{name: \"G\", name\\nvalue: 700} |null|null       |null       |null |null  |\r\n|null                          |H   |800        |null       |null |null  |\r\n|null                          |I   |null       |900        |null |null  |\r\n|{name: \"J\", va\\lue: 1000}     |null|null       |null       |null |null  |\r\n|null                          |K   |null       |null       |1100 |null  |\r\n+------------------------------+----+-----------+-----------+-----+------+\r\n\r\n\r\nscala> spark.read.option(\"allowUnquotedFieldNames\", \"true\").json(\"./test.json\").show(truncate = false)\r\n+------------------------------+----+-----------+-----------+-----+------+\r\n|_corrupt_record               |name|name\\tvalue|name\\nvalue|value|value |\r\n+------------------------------+----+-----------+-----------+-----+------+\r\n|null                          |A   |null       |null       |100  |null  |\r\n|null                          |B   |null       |null       |null |200   |\r\n|{name: \"C\", value\\ : 300}     |null|null       |null       |null |null  |\r\n|null                          |D   |null       |null       |400  |null  |\r\n|{name: \"E\", name value: 500}  |null|null       |null       |null |null  |\r\n|{name: \"F\", name N value: 600}|null|null       |null       |null |null  |\r\n|{name: \"G\", name\\nvalue: 700} |null|null       |null       |null |null  |\r\n|null                          |H   |800        |null       |null |null  |\r\n|null                          |I   |null       |900        |null |null  |\r\n|{name: \"J\", va\\lue: 1000}     |null|null       |null       |null |null  |\r\n|{name: \"K\", \"va\\lue\": 1100}   |null|null       |null       |null |null  |\r\n+------------------------------+----+-----------+-----------+-----+------+\r\n```\r\n\r\nLike in the other examples you can ignore the \"_corrupt_record\" field it is generally not used and we don't support it on the GPU, but it shows which lines had errors in them .\r\n","createdAt":"2022-10-11T14:51:30Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10266#issuecomment-1274826680","viewerDidAuthor":false}],"createdAt":"2022-02-10T09:10:57Z","id":"I_kwDOBWUGps5DVZGi","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMDEzOTg3MzUy","name":"0 - Backlog","description":"In queue waiting for assignment","color":"d4c5f9"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"},{"id":"MDU6TGFiZWwxMTg1MjQ0MTQy","name":"cuIO","description":"cuIO issue","color":"fef2c0"},{"id":"MDU6TGFiZWwxNDA1MTQ2OTc1","name":"Spark","description":"Functionality that helps Spark RAPIDS","color":"7400ff"}],"milestone":{"number":13,"title":"Nested JSON reader","description":"Data-parallel reader for nested JSON text data","dueOn":null},"number":10266,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] JSON reader: support unquoted JSON field names.","updatedAt":"2023-04-02T22:40:00Z","url":"https://github.com/rapidsai/cudf/issues/10266"}
