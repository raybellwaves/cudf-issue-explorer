{"assignees":[],"author":{"id":"MDQ6VXNlcjExMjY5ODE=","is_bot":false,"login":"wence-","name":"Lawrence Mitchell"},"body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nAs discussed in #14229, cudf currently relies on fate (working well so far) to ensure there are no use-after-free bugs when calling into, and taking ownership of return values from, libcudf.\r\n\r\nIn cudf-classic cython wrappers, the memory resource argument is never exposed to cython land. In pylibcudf, it is not currently exposed either.\r\n\r\n**Describe the solution you'd like**\r\n\r\nAll pylibcudf calls should take a memory resource argument, that is then called with the memory resource cudf considers to be currently active. This needs to go hand-in-hand with #15163, since when both a stream and memory resource are exposed in the public libcudf API, the memory resource is second, so we can't rely on overloaded defaulting for the stream argument.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nNone.","closed":false,"closedAt":null,"comments":[],"createdAt":"2024-02-28T12:48:36Z","id":"I_kwDOBWUGps6AriNd","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"LA_kwDOBWUGps8AAAABoeP23w","name":"pylibcudf","description":"Issues specific to the pylibcudf package","color":"e99695"}],"milestone":null,"number":15170,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Expose memory_resource arguments in pylibcudf","updatedAt":"2024-05-28T23:33:45Z","url":"https://github.com/rapidsai/cudf/issues/15170"}
