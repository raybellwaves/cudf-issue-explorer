{"assignees":[],"author":{"id":"MDQ6VXNlcjEwNjQ1NTUy","is_bot":false,"login":"rwlee","name":"Ryan Lee"},"body":"Unlike timestamp2long, there is no timestamp format string used when casting string to timestamp in spark. Instead, the cast uses an incremental parsing approach that allows for a large set of parsable/accepted formats including single digit month, day, hour, minute, and second values.\r\n\r\nHere is the full list of supported timestamp formats https://github.com/apache/spark/blob/a4382f7fe1c36a51c64f460c6cb91e93470e0825/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/util/DateTimeUtils.scala#L192\r\n```\r\n   * `yyyy`\r\n   * `yyyy-[m]m`\r\n   * `yyyy-[m]m-[d]d`\r\n   * `yyyy-[m]m-[d]d `\r\n   * `yyyy-[m]m-[d]d [h]h:[m]m:[s]s.[ms][ms][ms][us][us][us]`\r\n   * `yyyy-[m]m-[d]d [h]h:[m]m:[s]s.[ms][ms][ms][us][us][us]Z`\r\n   * `yyyy-[m]m-[d]d [h]h:[m]m:[s]s.[ms][ms][ms][us][us][us]-[h]h:[m]m`\r\n   * `yyyy-[m]m-[d]d [h]h:[m]m:[s]s.[ms][ms][ms][us][us][us]+[h]h:[m]m`\r\n   * `yyyy-[m]m-[d]dT[h]h:[m]m:[s]s.[ms][ms][ms][us][us][us]`\r\n   * `yyyy-[m]m-[d]dT[h]h:[m]m:[s]s.[ms][ms][ms][us][us][us]Z`\r\n   * `yyyy-[m]m-[d]dT[h]h:[m]m:[s]s.[ms][ms][ms][us][us][us]-[h]h:[m]m`\r\n   * `yyyy-[m]m-[d]dT[h]h:[m]m:[s]s.[ms][ms][ms][us][us][us]+[h]h:[m]m`\r\n   * `[h]h:[m]m:[s]s.[ms][ms][ms][us][us][us]`\r\n   * `[h]h:[m]m:[s]s.[ms][ms][ms][us][us][us]Z`\r\n   * `[h]h:[m]m:[s]s.[ms][ms][ms][us][us][us]-[h]h:[m]m`\r\n   * `[h]h:[m]m:[s]s.[ms][ms][ms][us][us][us]+[h]h:[m]m`\r\n   * `T[h]h:[m]m:[s]s.[ms][ms][ms][us][us][us]`\r\n   * `T[h]h:[m]m:[s]s.[ms][ms][ms][us][us][us]Z`\r\n   * `T[h]h:[m]m:[s]s.[ms][ms][ms][us][us][us]-[h]h:[m]m`\r\n   * `T[h]h:[m]m:[s]s.[ms][ms][ms][us][us][us]+[h]h:[m]m`\r\n```\r\n\r\nA custring function that supports this conversion and returns `null` when a given string is not parsable. We've tried using the timestamp2long function, but the lack of generic format support makes it impossible to match the spark cast functionality in columns with heterogeneous formats.","closed":false,"closedAt":null,"comments":[],"createdAt":"2019-11-07T19:30:21Z","id":"MDU6SXNzdWU1MTk0NjY3NDE=","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"},{"id":"MDU6TGFiZWwxNDA1MTQ2OTc1","name":"Spark","description":"Functionality that helps Spark RAPIDS","color":"7400ff"},{"id":"MDU6TGFiZWwxNTE1NjE2MjUz","name":"strings","description":"strings issues (C++ and Python)","color":"0e8a16"}],"milestone":null,"number":3320,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] String timestamp parsing to match Spark casting string to timestamp","updatedAt":"2020-01-14T06:17:26Z","url":"https://github.com/rapidsai/cudf/issues/3320"}
