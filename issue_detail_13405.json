{"assignees":[{"id":"MDQ6VXNlcjc0MTY5MzU=","login":"ttnghia","name":"Nghia Truong"}],"author":{"id":"MDQ6VXNlcjc0MTY5MzU=","is_bot":false,"login":"ttnghia","name":"Nghia Truong"},"body":"There are actually two FEAs in  this issue which can be addressed separately:\r\n * In `stream_compaction` module, we have the API `apply_boolean_mask` which copies the input to the output depending on a boolean mask array. This is currently categorized into stream compaction, but it can also be put into the `copying` module too. Since we already have `copy_if_else` API in `copying`, and also have `cudf::detail::copy_if(input, binary_pred)` API that does similar thing, we should better move this `apply_boolean_mask` into `copying` for consistency.\r\n * In addition, the name `apply_boolean_mask` is very misleading. Its prefix `apply_` implies that we are doing something in place. However, what it does is actually copying from the (immutable) input into a new output table. Thus, it should be better rename into another overload of `copy_if` for better consistency with the current `cudf::detail::copy_if(input, binary_pred)` API.","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5c1pu0","author":{"login":"bdice"},"authorAssociation":"CONTRIBUTOR","body":"I think parts of this could make some sense for libcudf, but I think there's room for reasonable disagreement. From a surface review of the APIs in libcudf, I don't feel strongly enough in favor of (or against) this to make any changes.\r\n\r\nFirst, this _is_ the task of stream compaction. Moving to \"copying\" may not be a benefit here. The line between what goes in \"Stream Compaction\" and what goes in \"Copying\" is pretty vague to me, from looking at current APIs. Maybe others have opinions here.\r\n\r\nNote that there is also a Python API named `[_]apply_boolean_mask`:\r\n- https://github.com/rapidsai/cudf/blob/383c3cfe4232ace46273a85da97a26d6acc5220e/python/cudf/cudf/core/indexed_frame.py#L2899\r\n- https://github.com/rapidsai/cudf/blob/383c3cfe4232ace46273a85da97a26d6acc5220e/python/cudf/cudf/core/column/column.py#L1090\r\n\r\nThe Python API is similar to [DataFrame.mask](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.mask.html). There is precedence for a name with the word \"mask\" in it.","createdAt":"2023-05-22T16:52:37Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/13405#issuecomment-1557568436","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5c9cvt","author":{"login":"davidwendt"},"authorAssociation":"CONTRIBUTOR","body":"Although `thrust` considers `thrust::copy_if` a stream compaction function: https://nvidia.github.io/thrust/api/groups/group__stream__compaction.html\r\nThe function declaration is in `copy.h` https://nvidia.github.io/thrust/api/groups/group__stream__compaction.html#function-copy-if\r\nI think we should consider being consistent with this in our doxygen documentation.\r\n\r\nThe `std::copy_if` is no help since it declares the function in the `<algorithm>` header\r\nhttps://en.cppreference.com/w/cpp/algorithm/copy","createdAt":"2023-05-23T14:58:24Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/13405#issuecomment-1559612397","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5c9h2c","author":{"login":"bdice"},"authorAssociation":"CONTRIBUTOR","body":"Thanks @davidwendt -- you've given this topic a lot more attention than I have so I am interested in your thoughts.\r\n\r\n> I think we should consider being consistent with this in our doxygen documentation.\r\n\r\nJust to clarify, consistent with what? Calling `apply_boolean_mask` \"stream compaction\" because of the Thrust docs' organization, or calling it \"copying\" (because of `copy.h`)?\r\n\r\nDo you have opinions on the name of the function being `apply_boolean_mask` vs. `copy_if`?","createdAt":"2023-05-23T15:07:34Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/13405#issuecomment-1559633308","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5c9t-M","author":{"login":"davidwendt"},"authorAssociation":"CONTRIBUTOR","body":"Our [Stream Compaction](https://docs.rapids.ai/api/libcudf/stable/group__reorder__compact.html) page aligns well with the [thust page](https://nvidia.github.io/thrust/api/groups/group__stream__compaction.htmlhttps://nvidia.github.io/thrust/api/groups/group__stream__compaction.html).\r\nSo regardless of the name, I think it would be good to preserve this consistency.\r\n\r\nAs for the name, I agree that `cudf::copy_if` would be a better name for alignment with `thrust::copy_if` and `std::copy_if`.\r\nAlso, instead of a `column` for the mask, I'd like to propose a `device_span<bool>` parameter instead so we don't have to do a type-dispatch. Unless there is a compelling reason to support nulls in the mask or types besides bool.\r\n\r\nFor reference: https://docs.rapids.ai/api/libcudf/stable/group__reorder__compact.html#ga97d53fa661beb3217c01a0fb117a2ac1","createdAt":"2023-05-23T15:35:36Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":3}}],"url":"https://github.com/rapidsai/cudf/issues/13405#issuecomment-1559682956","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5c-s_c","author":{"login":"bdice"},"authorAssociation":"CONTRIBUTOR","body":"I really like that proposal @davidwendt. @ttnghia Looks like you assigned yourself -- happy to review if you want to make a PR. Thanks, both of you!","createdAt":"2023-05-23T18:25:48Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/13405#issuecomment-1559941084","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5dLW0l","author":{"login":"ttnghia"},"authorAssociation":"CONTRIBUTOR","body":"> Note that there is also a Python API named `[_]apply_boolean_mask`:\r\n> \r\n> * https://github.com/rapidsai/cudf/blob/383c3cfe4232ace46273a85da97a26d6acc5220e/python/cudf/cudf/core/indexed_frame.py#L2899\r\n> * https://github.com/rapidsai/cudf/blob/383c3cfe4232ace46273a85da97a26d6acc5220e/python/cudf/cudf/core/column/column.py#L1090\r\n> \r\n> The Python API is similar to [DataFrame.mask](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.mask.html). There is precedence for a name with the word \"mask\" in it.\r\n\r\n@bdice Can we also rename the python API?","createdAt":"2023-05-25T17:24:04Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/13405#issuecomment-1563258149","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5dMG6V","author":{"login":"ttnghia"},"authorAssociation":"CONTRIBUTOR","body":"> Also, instead of a column for the mask, I'd like to propose a device_span<bool> parameter instead so we don't have to do a type-dispatch. Unless there is a compelling reason to support nulls in the mask or types besides bool.\r\n\r\n@davidwendt There is an issue with nullable columns. Switching `device_span<bool>` will not be able to handle such nulls in the boolean mask. Switching to `device_span<bool>` will add much more (similar, repeated) codes to handle nulls at the callers than the amount of removed code for handling nulls for `column_view` input.","createdAt":"2023-05-25T20:16:11Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/13405#issuecomment-1563455125","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5dMVX_","author":{"login":"davidwendt"},"authorAssociation":"CONTRIBUTOR","body":"I'm not sure why allowing a nullable boolean mask is so important. I know we currently support it but it seems the caller could easily replace the null entries with `false` (in-place even) and get the same result. I'd like for us to consider removing support for nulls in the mask here.","createdAt":"2023-05-25T21:14:31Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}},{"content":"HEART","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/13405#issuecomment-1563514367","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5dQcGW","author":{"login":"bdice"},"authorAssociation":"CONTRIBUTOR","body":"> Can we also rename the python API?\r\n\r\nMaybe? I'd propose it and see what Python reviewers think. I'd be fine if this name change was for C++ only, or for both C++ and Python.","createdAt":"2023-05-26T15:47:50Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/13405#issuecomment-1564590486","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5f-ndk","author":{"login":"wence-"},"authorAssociation":"CONTRIBUTOR","body":"> > Note that there is also a Python API named `[_]apply_boolean_mask`:\r\n> > \r\n> > * https://github.com/rapidsai/cudf/blob/383c3cfe4232ace46273a85da97a26d6acc5220e/python/cudf/cudf/core/indexed_frame.py#L2899\r\n> > * https://github.com/rapidsai/cudf/blob/383c3cfe4232ace46273a85da97a26d6acc5220e/python/cudf/cudf/core/column/column.py#L1090\r\n> > \r\n> > The Python API is similar to [DataFrame.mask](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.mask.html). There is precedence for a name with the word \"mask\" in it.\r\n> \r\n> @bdice Can we also rename the python API?\r\n\r\nThese are both internal functions with no guarantee of api stability I suspect, so i am happy to change them if there is a better name. The pythonic name would probably be `filter` (although that has type `(a -> Bool) -> [a] -> [a]` rather than `[Bool] -> [a] -> [a]` so `copy_if` would be fine)","createdAt":"2023-06-27T21:34:29Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/13405#issuecomment-1610250084","viewerDidAuthor":false}],"createdAt":"2023-05-22T16:08:53Z","id":"I_kwDOBWUGps5mhSC3","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMDEzOTg3NDE3","name":"1 - On Deck","description":"To be worked on next","color":"bfd4f2"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"}],"milestone":null,"number":13405,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Rename `apply_boolean_mask` to `copy_if` and move it from `stream_compaction.hpp` into `copying.hpp`","updatedAt":"2024-02-23T17:59:07Z","url":"https://github.com/rapidsai/cudf/issues/13405"}
