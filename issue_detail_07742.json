{"assignees":[],"author":{"id":"MDQ6VXNlcjQyNDk0NDc=","is_bot":false,"login":"lmeyerov","name":""},"body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nIt's been frustrating adapting cudf -> dask_cudf kernels in two basic areas around cross-partition type mismatches:\r\n\r\n* ingest: loading json, csv, etc. that vary in column types across partitions: existence, nans, int vs float, etc. When the code writer isn't the user -- so a library, piece of software, a UI, this is common and you can't just workaround by specifying dtypes ahead of time\r\n\r\n* compute: when doing data cleaning (ex: date inference) or some algs, it's unclear what `meta` should be ahead of time, only after you actually do the calc. dask will sample the first df... which is often wrong\r\n\r\n**Describe the solution you'd like**\r\n\r\ndask_cudf ingest operators: an auto-coercion flag (\"when columns are in conflict across partitions, coerce to the closest common type, like float or str\")\r\n\r\ndask_cudf map, concat, etc: same thing\r\n\r\n\r\n**Describe alternatives you've considered**\r\n\r\nIt may also be possible to make each operator smarter via sampling or other tricks. dask core and some cudf io seems to be experimenting here.\r\n\r\nI like explicit flags b/c of their predictability/reliability, and uniformity... but ultimately, whatever work :)\r\n\r\n\r\n**Additional context**\r\n\r\nBy default, I'm guessing this issue will be ignored & deprioritized ;-)\r\n\r\nBefore doing that, it may be worth polling dask_cudf users -- not devs -- how they feel about this ;-) my bet is people spend a surprising % of their time on a few issues around here, well before actual perf\r\n","closed":false,"closedAt":null,"comments":[{"id":"MDEyOklzc3VlQ29tbWVudDgxMjY4MzA3OQ==","author":{"login":"argenisleon"},"authorAssociation":"NONE","body":"Hi @lmeyerov,\r\n\r\nWe were struggling with these issues some weeks ago and did not found a decent solution.\r\nAs we are using Dask-cuDF behind a low-code solution we don't want the user to be struggling in finding the right data types when they are just loading the data.\r\nAs @lmeyerov comments maybe are out of the scope of Dask-cuDF.\r\nFor the RAPIDS team any idea of a possible approach to handling this?\r\n","createdAt":"2021-04-02T19:45:07Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/7742#issuecomment-812683079","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDgzMzY2NTg2Ng==","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2021-05-06T16:31:41Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/7742#issuecomment-833665866","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps49gePd","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2022-02-07T21:05:06Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/7742#issuecomment-1031922653","viewerDidAuthor":false}],"createdAt":"2021-03-26T21:18:23Z","id":"MDU6SXNzdWU4NDIzMDI0MTk=","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"},{"id":"MDU6TGFiZWwxMTg1MjQwODk4","name":"dask","description":"Dask issue","color":"fcc25d"}],"milestone":null,"number":7742,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] dask_cudf cross-partition type coercions","updatedAt":"2024-02-23T18:43:04Z","url":"https://github.com/rapidsai/cudf/issues/7742"}
