{"assignees":[],"author":{"id":"U_kgDOBoYyOA","is_bot":false,"login":"reinzler","name":""},"body":"```\r\nnumba.core.errors.TypingError: Failed in cuda mode pipeline (step: nopython frontend)\r\nUntyped global name 'Master10DH': Cannot determine Numba type of <class 'abc.ABCMeta'>\r\n\r\nFile \"ik_GPU.py\", line 9:\r\ndef ik(row):\r\n    robot = Master10DH()\r\n```\r\nHello, I encountered the following error, how can I fix it?","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps55SAAr","author":{"login":"bdice"},"authorAssociation":"CONTRIBUTOR","body":"It looks like you're trying to use a user-defined function (UDF) that has a user-defined class `Master10DH`. This class isn't supported by the Numba CUDA JIT engine, which is limited to a set of basic Python types. Take a look at our guide on UDFs for examples: https://docs.rapids.ai/api/cudf/stable/user_guide/guide-to-udfs/\r\n\r\nYou may need to rewrite the functionality of this class into a simpler expression that can be JIT-compiled.\r\n\r\ncc: @gmarkall @brandon-b-miller for any further insight.","createdAt":"2024-04-03T14:20:25Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/15449#issuecomment-2034761771","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps55SEfq","author":{"login":"reinzler"},"authorAssociation":"NONE","body":"Thanks, @brandon-b-miller , @gmarkall, if I use in my custom function several methods from different libraries (spatialmath for example) what should I do? ","createdAt":"2024-04-03T14:25:44Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/15449#issuecomment-2034780138","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps55Uka9","author":{"login":"brandon-b-miller"},"authorAssociation":"CONTRIBUTOR","body":"@bdice is correct, we unfortunately don't support usage of arbitrary math libraries like `spatialmath` within the UDF expression. Sometimes, you can reconstruct a formula that produces your desired result by hand, and use that instead. \r\n\r\nFor instance, if instead of \r\n```python\r\nfrom mylib import myfunc\r\n\r\ndef use_myfunc(row):\r\n    return myfunc(row['some_col'], row['some_other_col'])\r\n\r\nsr.apply(use_myfunc)\r\n```\r\nperhaps there's a way to rewrite `myfunc` in terms of scalars:\r\n\r\n```python\r\nfrom numba import cuda\r\n\r\n@cuda.jit(device=True)\r\ndef myfunc(x, y):\r\n    return (2 * x) + (5 * y) * 3\r\n```\r\nThe limitation for now is that generally the logic of `myfunc` must be limited to scalar operations and control flow. Use of lists, dicts, or custom classes are not yet supported.\r\n\r\n\r\n","createdAt":"2024-04-03T19:39:42Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/15449#issuecomment-2035435197","viewerDidAuthor":false}],"createdAt":"2024-04-03T11:26:31Z","id":"I_kwDOBWUGps6Ee0DX","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjQ=","name":"question","description":"Further information is requested","color":"D4C5F9"}],"milestone":null,"number":15449,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[QST]Custom class with cuDF","updatedAt":"2024-04-03T19:40:24Z","url":"https://github.com/rapidsai/cudf/issues/15449"}
