{"assignees":[],"author":{"id":"MDQ6VXNlcjgxNjY0MTk=","is_bot":false,"login":"res-life","name":"Chong Gao"},"body":"**Describe the bug**\r\nThe GPU ORC file statistics show that the count for nested type is wrong while the CPU ORC file is correct.\r\n\r\nGPU file shows different counts for nested type:\r\nGPU:  \r\n```\r\nFile Statistics:\r\n  Column 0: count: 8 hasNull: true\r\n  Column 1: count: 1 hasNull: true\r\n```\r\nCPU: \r\n```\r\nFile Statistics:\r\n  Column 0: count: 8 hasNull: false\r\n  Column 1: count: 8 hasNull: false\r\n```\r\nThe data in both files are:\r\n```\r\n+------------+\r\n|    struct_s|\r\n+------------+\r\n|{null, null}|\r\n|      {1, 1}|\r\n|{null, null}|\r\n|      {3, 3}|\r\n|{null, null}|\r\n|      {5, 5}|\r\n|{null, null}|\r\n|      {7, 7}|\r\n+------------+\r\n```\r\n\r\n\r\n\r\n**Steps/Code to reproduce bug**\r\n##### Generate GPU file\r\n```cpp\r\nTEST_F(OrcWriterTest, NestedColumnSelection)\r\n{\r\n  auto const num_rows  = 8;\r\n  std::vector<int> child_col1_data(num_rows);\r\n  std::vector<int> child_col2_data(num_rows);\r\n  for (int i = 0; i < num_rows; ++i) {\r\n    child_col1_data[i] = i;\r\n    child_col2_data[i] = i;\r\n  }\r\n\r\n  auto validity = cudf::detail::make_counting_transform_iterator(0, [](auto i) { return i % 2; });\r\n  int32_col child_col1{child_col1_data.begin(), child_col1_data.end(), validity};\r\n  int32_col child_col2{child_col2_data.begin(), child_col2_data.end(), validity};\r\n  struct_col s_col{child_col1, child_col2};\r\n  cudf::table_view expected({s_col});\r\n\r\n  cudf::io::table_input_metadata expected_metadata(expected);\r\n  expected_metadata.column_metadata[0].set_name(\"struct_s\");\r\n  expected_metadata.column_metadata[0].child(0).set_name(\"field_a\");\r\n  expected_metadata.column_metadata[0].child(1).set_name(\"field_b\");\r\n\r\n  auto filepath = \"/tmp/test-count-for-nested-type-gpu.orc\";\r\n  cudf::io::orc_writer_options out_opts =\r\n    cudf::io::orc_writer_options::builder(cudf::io::sink_info{filepath}, expected)\r\n      .metadata(std::move(expected_metadata));\r\n  cudf::io::write_orc(out_opts);\r\n}\r\n```\r\n\r\nRead the GPU file\r\nSPARK_HOME/bin/pyspark\r\n\r\nspark.read.orc(\"/tmp/test-count-for-nested-type-gpu.orc\").show()\r\n+------------+\r\n|    struct_s|\r\n+------------+\r\n|{null, null}|\r\n|      {1, 1}|\r\n|{null, null}|\r\n|      {3, 3}|\r\n|{null, null}|\r\n|      {5, 5}|\r\n|{null, null}|\r\n|      {7, 7}|\r\n+------------+\r\n\r\n##### Generate CPU file\r\nSPARK_HOME/bin/pyspark\r\n\r\n```python\r\nfrom pyspark.sql.types import *\r\nschema = StructType([StructField(\"struct_s\",\r\n    StructType([\r\n        StructField(\"field_a\", IntegerType()),\r\n        StructField(\"field_b\", IntegerType()),\r\n]))])\r\n\r\ndef get_value(i):\r\n  if i % 2 == 0:\r\n    return None\r\n  else:\r\n    return i\r\n\r\ndata = [\r\n    ({ 'field_a': get_value(i), 'field_b': get_value(i) }, ) for i in range(0, 8)\r\n]\r\ndf = spark.createDataFrame(\r\n        SparkContext.getOrCreate().parallelize(data, numSlices=1),\r\n        schema)\r\n\r\npath = '/tmp/test-count-for-nested-type-cpu.orc'\r\ndf.coalesce(1).write.mode(\"overwrite\").orc(path)\r\nspark.read.orc(path).show()\r\n```\r\n\r\n```\r\n+------------+\r\n|    struct_s|\r\n+------------+\r\n|{null, null}|\r\n|      {1, 1}|\r\n|{null, null}|\r\n|      {3, 3}|\r\n|{null, null}|\r\n|      {5, 5}|\r\n|{null, null}|\r\n|      {7, 7}|\r\n+------------+\r\n```\r\n\r\n##### print count statistic for GPU file\r\n```\r\n$ orc-tool meta test-count-for-nested-type-gpu.orc\r\nProcessing data file test-count-for-nested-type-gpu.orc [length: 360]\r\nStructure for test-count-for-nested-type-gpu.orc\r\nFile Version: 0.12 with ORIGINAL by ORC Java \r\nRows: 8\r\nCompression: SNAPPY\r\nCompression size: 262144\r\nCalendar: Julian/Gregorian\r\nType: struct<struct_s:struct<field_a:int,field_b:int>>\r\n\r\nStripe Statistics:\r\n  Stripe 1:\r\n    Column 0: count: 8 hasNull: true\r\n    Column 1: count: 1 hasNull: true\r\n    Column 2: count: 4 hasNull: true min: 1 max: 7 sum: 16\r\n    Column 3: count: 4 hasNull: true min: 1 max: 7 sum: 16\r\n\r\nFile Statistics:\r\n  Column 0: count: 8 hasNull: true\r\n  Column 1: count: 1 hasNull: true\r\n  Column 2: count: 4 hasNull: true min: 1 max: 7 sum: 16\r\n  Column 3: count: 4 hasNull: true min: 1 max: 7 sum: 16\r\n\r\nStripes:\r\n  Stripe: offset: 3 data: 24 rows: 8 tail: 92 index: 70\r\n    Stream: column 0 section ROW_INDEX start: 3 length 7\r\n    Stream: column 1 section ROW_INDEX start: 10 length 11\r\n    Stream: column 2 section ROW_INDEX start: 21 length 26\r\n    Stream: column 3 section ROW_INDEX start: 47 length 26\r\n    Stream: column 2 section PRESENT start: 73 length 5\r\n    Stream: column 2 section DATA start: 78 length 7\r\n    Stream: column 3 section PRESENT start: 85 length 5\r\n    Stream: column 3 section DATA start: 90 length 7\r\n    Encoding column 0: DIRECT\r\n    Encoding column 1: DIRECT\r\n    Encoding column 2: DIRECT_V2\r\n    Encoding column 3: DIRECT_V2\r\n\r\nFile length: 360 bytes\r\nPadding length: 0 bytes\r\nPadding ratio: 0%\r\n```\r\n\r\n##### print count statistic for CPU file\r\n```\r\n$ orc-tool meta /tmp/test-count-for-nested-type-cpu.orc \r\nProcessing data file file:/tmp/test-count-for-nested-type-cpu.orc/part-00000-6b490836-0c65-4355-9d0e-fbaff96aec33-c000.snappy.orc [length: 388]\r\nStructure for file:/tmp/test-count-for-nested-type-cpu.orc/part-00000-6b490836-0c65-4355-9d0e-fbaff96aec33-c000.snappy.orc\r\nFile Version: 0.12 with ORC_14 by ORC Java 1.7.4\r\nRows: 8\r\nCompression: SNAPPY\r\nCompression size: 262144\r\nCalendar: Julian/Gregorian\r\nType: struct<struct_s:struct<field_a:int,field_b:int>>\r\n\r\nStripe Statistics:\r\n  Stripe 1:\r\n    Column 0: count: 8 hasNull: false\r\n    Column 1: count: 8 hasNull: false\r\n    Column 2: count: 4 hasNull: true bytesOnDisk: 12 min: 1 max: 7 sum: 16\r\n    Column 3: count: 4 hasNull: true bytesOnDisk: 12 min: 1 max: 7 sum: 16\r\n\r\nFile Statistics:\r\n  Column 0: count: 8 hasNull: false\r\n  Column 1: count: 8 hasNull: false\r\n  Column 2: count: 4 hasNull: true bytesOnDisk: 12 min: 1 max: 7 sum: 16\r\n  Column 3: count: 4 hasNull: true bytesOnDisk: 12 min: 1 max: 7 sum: 16\r\n\r\nStripes:\r\n  Stripe: offset: 3 data: 24 rows: 8 tail: 71 index: 76\r\n    Stream: column 0 section ROW_INDEX start: 3 length 11\r\n    Stream: column 1 section ROW_INDEX start: 14 length 11\r\n    Stream: column 2 section ROW_INDEX start: 25 length 27\r\n    Stream: column 3 section ROW_INDEX start: 52 length 27\r\n    Stream: column 2 section PRESENT start: 79 length 5\r\n    Stream: column 2 section DATA start: 84 length 7\r\n    Stream: column 3 section PRESENT start: 91 length 5\r\n    Stream: column 3 section DATA start: 96 length 7\r\n    Encoding column 0: DIRECT\r\n    Encoding column 1: DIRECT\r\n    Encoding column 2: DIRECT_V2\r\n    Encoding column 3: DIRECT_V2\r\n\r\nFile length: 388 bytes\r\nPadding length: 0 bytes\r\nPadding ratio: 0%\r\n\r\nUser Metadata:\r\n  org.apache.spark.version=3.3.0\r\n```\r\n\r\n\r\n\r\n**Expected behavior**\r\nThe all statistics should be correct, including the `hasNull`, refer to this [issue](https://github.com/rapidsai/cudf/issues/13817)\r\n\r\n**Environment details**\r\nEnvironment details\r\ncuDF 23.08 branch\r\nSpark 3.3.0\r\norc-core-1.7.4.jar\r\n\r\n**Additional context**\r\n","closed":false,"closedAt":null,"comments":[],"createdAt":"2023-08-09T05:57:28Z","id":"I_kwDOBWUGps5t0viX","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxMDEzOTg3MzUy","name":"0 - Backlog","description":"In queue waiting for assignment","color":"d4c5f9"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"},{"id":"MDU6TGFiZWwxMTg1MjQ0MTQy","name":"cuIO","description":"cuIO issue","color":"fef2c0"}],"milestone":{"number":23,"title":"ORC continuous improvement","description":"","dueOn":null},"number":13837,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] ORC file count statistic for nested type is wrong","updatedAt":"2023-08-18T16:18:21Z","url":"https://github.com/rapidsai/cudf/issues/13837"}
