{"assignees":[{"id":"MDQ6VXNlcjE5MDEwNTk=","login":"abellina","name":"Alessandro Bellina"},{"id":"MDQ6VXNlcjMxODc5Mzg=","login":"gerashegalov","name":"Gera Shegalov"}],"author":{"id":"MDQ6VXNlcjE5MDEwNTk=","is_bot":false,"login":"abellina","name":"Alessandro Bellina"},"body":"I've been looking at the `rle_stream` class in order to decode dictionary streams in addition to repetition streams in the parquet decoder. This is a component of the work that @nvdbaranec has done here https://github.com/rapidsai/cudf/pull/13622, where we'd like to separate out at least a \"fixed width\" and a \"fixed width dictionary encoded\" pair of kernels. \r\n\r\nWith the changes in `rle_stream`, the core of the logic is able to use more threads for the RLE stream decoder. Specifically, a first warp is in charge of generating a set of runs, and other warps are able to take each one of the runs and decode them in parallel. As part of the micro kernel work, we feel that focusing on `rle_stream` decoder and its effects on `gpuComputeStringPageBounds`, `gpuComputePageSizes` and the use in the new fixed kernels, is a good first step to get the micro kernel work merged. \r\n\r\nThis issue then is to get a new `rle_stream` into cuDF that can handle both repetition AND dictionary streams, and show that the performance impact is same or better than what we have now. We hope that having this decoder will help centralize code, helping cleanup the parquet code base.","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5ylAxi","author":{"login":"etseidl"},"authorAssociation":"CONTRIBUTOR","body":"It would be interesting to compare the `rle_stream` approach to dictionary decoding to the approach in [totalDictEntriesSize](https://github.com/rapidsai/cudf/blob/2b0d9876ed02c1e4ea50907ac0d917669d51348c/cpp/src/io/parquet/page_string_decode.cu#L318). The latter makes use of all warps for decoding work, and doesn't suffer from load balancing problems between warps, but it might be harder to save state and pick up again in a batch processing application.","createdAt":"2024-02-01T21:48:03Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14950#issuecomment-1922305122","viewerDidAuthor":false}],"createdAt":"2024-02-01T15:45:30Z","id":"I_kwDOBWUGps5970GG","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMTg1MjQ0MTQy","name":"cuIO","description":"cuIO issue","color":"fef2c0"},{"id":"MDU6TGFiZWwxMzIyMjUyNjE3","name":"Performance","description":"Performance related issue","color":"C2E0C6"},{"id":"MDU6TGFiZWwxNDA1MTQ2OTc1","name":"Spark","description":"Functionality that helps Spark RAPIDS","color":"7400ff"}],"milestone":{"number":22,"title":"Parquet continuous improvement","description":"","dueOn":null},"number":14950,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] parquet: rle_stream for dictionary pages","updatedAt":"2024-03-04T14:26:09Z","url":"https://github.com/rapidsai/cudf/issues/14950"}
