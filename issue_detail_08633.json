{"assignees":[],"author":{"id":"MDQ6VXNlcjU2Njk1OTMw","is_bot":false,"login":"nvdbaranec","name":""},"body":"\r\nScalars can be null and contain a validity bool.  The constructors for the various scalars take an `is_valid` parameter for this purpose.  But the factory functions themselves don't let you specify one in the call. Seems like an oversight. This applies to all scalar types.\r\n```\r\nstruct_scalar(table&& data,\r\n                bool is_valid                       = true,\r\n                rmm::cuda_stream_view stream        = rmm::cuda_stream_default,\r\n                rmm::mr::device_memory_resource* mr = rmm::mr::get_current_device_resource());\r\n```\r\n\r\n```\r\nstd::unique_ptr<scalar> make_struct_scalar(\r\n  table_view const& data,\r\n  rmm::cuda_stream_view stream        = rmm::cuda_stream_default,\r\n  rmm::mr::device_memory_resource* mr = rmm::mr::get_current_device_resource());\r\n```","closed":false,"closedAt":null,"comments":[{"id":"MDEyOklzc3VlQ29tbWVudDg3MTY0NTAwOQ==","author":{"login":"jrhemstad"},"authorAssociation":"CONTRIBUTOR","body":"The reason is because if you're constructing the scalar with an existing value, then it wouldn't make sense for it to be null. ","createdAt":"2021-06-30T18:47:37Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/8633#issuecomment-871645009","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDg3MTY1MjAwMw==","author":{"login":"nvdbaranec"},"authorAssociation":"CONTRIBUTOR","body":"The case here was for testing.  Creating a null scalar and doing some interesting things with it (exploding it to a column, running copy_if_else(), etc)","createdAt":"2021-06-30T18:59:15Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/8633#issuecomment-871652003","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDg3MTY2ODQ0NQ==","author":{"login":"jrhemstad"},"authorAssociation":"CONTRIBUTOR","body":"> The case here was for testing. Creating a null scalar and doing some interesting things with it (exploding it to a column, running copy_if_else(), etc)\r\n\r\nI don't think you'd use a factory then. I think you can just create a default constructed scalar of the appropriate type.","createdAt":"2021-06-30T19:26:09Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/8633#issuecomment-871668445","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDg3MTY3MzgxOQ==","author":{"login":"nvdbaranec"},"authorAssociation":"CONTRIBUTOR","body":"Another reason this doesn't work is:  for nested types, you need to have a fully formed hierarchy of columns (the type-is-defined-by-the-hierarchy issue), even if the root scalar is null.  So any constructor that takes just a validity bool isn't sufficient.","createdAt":"2021-06-30T19:35:24Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/8633#issuecomment-871673819","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDg3MTcxNjM5OQ==","author":{"login":"brandon-b-miller"},"authorAssociation":"CONTRIBUTOR","body":"> Another reason this doesn't work is: for nested types, you need to have a fully formed hierarchy of columns (the type-is-defined-by-the-hierarchy issue), even if the root scalar is null. So any constructor that takes just a validity bool isn't sufficient.\r\n\r\ndropping in to say we're running into this as well on the python side and creating basically an empty placeholder hierarchy and directly constructing the scalars without using the factories. cc @shaneding ","createdAt":"2021-06-30T20:46:58Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/8633#issuecomment-871716399","viewerDidAuthor":false},{"id":"MDEyOklzc3VlQ29tbWVudDg3MjI0Mzg2Ng==","author":{"login":"jrhemstad"},"authorAssociation":"CONTRIBUTOR","body":"I've no problem with changing the current design. I was only explaining the rational of the way things are now. ","createdAt":"2021-07-01T13:22:45Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/8633#issuecomment-872243866","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps45xp_p","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2021-11-15T21:03:28Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/8633#issuecomment-969318377","viewerDidAuthor":false}],"createdAt":"2021-06-30T18:32:32Z","id":"MDU6SXNzdWU5MzM5OTExMTE=","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"}],"milestone":null,"number":8633,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Scalar factory functions do not let you provide a validity bool.","updatedAt":"2023-04-06T05:26:44Z","url":"https://github.com/rapidsai/cudf/issues/8633"}
