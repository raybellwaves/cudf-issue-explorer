{"assignees":[],"author":{"id":"MDQ6VXNlcjExMjY5ODE=","is_bot":false,"login":"wence-","name":"Lawrence Mitchell"},"body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nIndices advertise a bunch of properties (for example `is_monotonic_increasing`). These are implemented by inheriting from `Frame` or `SingleColumnFrame`. But those latter classes are _mutable_, and so their implementation of the property must recompute every time.\r\n\r\nFor an index, this is not the case, and so we lose some performance (for example, every time we do a slice `.loc` we'll run a libcudf kernel to check if the index is sorted).\r\n\r\n**Describe the solution you'd like**\r\n\r\nIndex properties (especially where they return scalars, and therefore the memory footprint is negligible) should use `functools.cached_property` to provide their (immutable) properties.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nNone\r\n\r\n","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5cYhxd","author":{"login":"wence-"},"authorAssociation":"CONTRIBUTOR","body":"Here's a (possibly too magic) way of implementing this without too much code duplication:\r\n\r\n```python\r\nfrom functools import cached_property\r\n\r\nclass Immutable(type):\r\n    __immutable_properties__ = ()\r\n    def __init__(cls, name, bases, dict):\r\n        super().__init__(name, bases, dict)\r\n        for prop in cls.__immutable_properties__:\r\n            cprop = cached_property(lambda self: getattr(super(cls, self), prop))\r\n            cprop.__set_name__(cls, prop)\r\n            setattr(cls, prop, cprop)\r\n\r\n\r\nclass Index(SingleColumnFrame, metaclass=Immutable):\r\n    __immutable_properties__ = (\"is_monotonic_increasing\", ...)\r\n    ...\r\n```","createdAt":"2023-05-16T15:51:19Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/13357#issuecomment-1549933661","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5d1Iis","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"Related to https://github.com/rapidsai/cudf/issues/9593 (the immutability is also mentioned there).","createdAt":"2023-06-02T19:23:36Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/13357#issuecomment-1574209708","viewerDidAuthor":false}],"createdAt":"2023-05-16T15:34:03Z","id":"I_kwDOBWUGps5mDx7Y","labels":[{"id":"MDU6TGFiZWwxMDEzOTg3MzUy","name":"0 - Backlog","description":"In queue waiting for assignment","color":"d4c5f9"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"},{"id":"MDU6TGFiZWwxMzIyMjUyNjE3","name":"Performance","description":"Performance related issue","color":"C2E0C6"}],"milestone":null,"number":13357,"projectCards":[],"projectItems":[],"reactionGroups":[{"content":"THUMBS_UP","users":{"totalCount":2}}],"state":"OPEN","title":"[ENH] Indices are immutable by definition and should take advantage of that","updatedAt":"2023-06-07T21:09:40Z","url":"https://github.com/rapidsai/cudf/issues/13357"}
