{"assignees":[],"author":{"id":"MDQ6VXNlcjc2NzQxNjgw","is_bot":false,"login":"tx2002","name":"TX"},"body":"At first, I see this article: [GPU-Accelerated JSON Data Processing with RAPIDS](https://developer.nvidia.com/blog/gpu-accelerated-json-data-processing-with-rapids/)\r\nI follow it to use the cudf.read_json(), but I get the warning\r\n`UserWarning: Using CPU via Pandas to read JSON dataset, this may be GPU accelerated in the future` \r\nand I use `%%cudf.pandas.line_profile`, it shows there is no GPU TIME.\r\n![image](https://github.com/rapidsai/cudf/assets/76741680/e96c4355-e6f9-430e-be36-71a78159ebd7)\r\n\r\nBut, when I load the cudf before by running `%load_ext cudf.pandas`\r\nand I change `import cudf as pd` to `import pandas as pd`\r\nIt still has the warning, but show the GPU TIME.\r\nSo I want to know does the read_json() method support GPU acceleration?\r\n![image](https://github.com/rapidsai/cudf/assets/76741680/5d4465aa-7b41-47af-bfbf-9692ff1025c8)\r\n\r\n","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5xzofu","author":{"login":"GregoryKimball"},"authorAssociation":"CONTRIBUTOR","body":"Thank you @tx2002 for raising this issue. I believe the root cause is that `cudf` only supports GPU-accelerated JSON reading with `orient=\"records\"` when also `lines=True`. \r\n\r\nIf you share a bit more about the contents of your string `json_data` I would be happy to help troubleshoot.","createdAt":"2024-01-25T05:03:35Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14669#issuecomment-1909360622","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5xzuAp","author":{"login":"tx2002"},"authorAssociation":"NONE","body":"Thank you for your reply. Actually, I run the same code based on the same json_data. The only difference is the way to import cudf.\r\nMy `json_data` is like this:\r\n```\r\n[{\r\n\r\n\"id\":\"1\",\r\n\r\n\"Col_01\":\"test\",\r\n\r\n\"Col_02\":\"77\"\r\n\r\n},\r\n\r\n{\r\n\r\n\"id\":\"2\",\r\n\r\n\"Col_01\":\"test\",\r\n\r\n\"Col_02\":\"13552652142\"\r\n\r\n},\r\n\r\n{\r\n\r\n\"id\":\"3\",\r\n\r\n\"Col_01\":\"test\",\r\n\r\n\"Col_02\":\"\"\r\n\r\n},\r\n\r\n{\r\n\r\n\"id\":\"4\",\r\n\r\n\"Col_01\":\"test\",\r\n\r\n\"Col_02\":\"\"\r\n\r\n},\r\n\r\n{\r\n\r\n\"id\":\"5\",\r\n\r\n\"Col_01\":\"test\",\r\n\r\n\"Col_02\":\"test\"\r\n\r\n}]\r\n```","createdAt":"2024-01-25T05:29:44Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14669#issuecomment-1909383209","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5zC2HC","author":{"login":"karthikeyann"},"authorAssociation":"CONTRIBUTOR","body":"This is readable with `orient=\"records\",  lines=False`. Following code works.\r\n```python\r\nIn [4]: df = cudf.read_json(StringIO(json_data), orient=\"records\",  lines=False, engine=\"cudf\")\r\nIn [5]: df\r\nOut[5]: \r\n  id Col_01       Col_02\r\n0  1   test           77\r\n1  2   test  13552652142\r\n2  3   test             \r\n3  4   test             \r\n4  5   test         test\r\n\r\nIn [6]: df.info()\r\n<class 'cudf.core.dataframe.DataFrame'>\r\nRangeIndex: 5 entries, 0 to 4\r\nData columns (total 3 columns):\r\n #   Column  Non-Null Count  Dtype\r\n---  ------  --------------  -----\r\n 0   id      5 non-null      object\r\n 1   Col_01  5 non-null      object\r\n 2   Col_02  5 non-null      object\r\ndtypes: object(3)\r\nmemory usage: 114.0+ bytes\r\n```","createdAt":"2024-02-06T16:01:42Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14669#issuecomment-1930125762","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5zDOAA","author":{"login":"karthikeyann"},"authorAssociation":"CONTRIBUTOR","body":"_cudf.read_json_ uses `cudf` engine for JSON Lines only. it doesnâ€™t use cudf engine automatically for other cases.\r\nhttps://github.com/rapidsai/cudf/blob/20ed009003944be776e28c26301354be287726f9/python/cudf/cudf/io/json.py#L60-L61\r\n\r\nRight now, libcudf Nested JSON reader will support `orient=\"records\"` and `orient=\"values\"` with `lines=False/True` (all 4 combinations should work).\r\nCould we enable it automatically for other supported formats as well?","createdAt":"2024-02-06T16:22:37Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14669#issuecomment-1930223616","viewerDidAuthor":false}],"createdAt":"2023-12-25T10:13:46Z","id":"I_kwDOBWUGps56hbLk","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjQ=","name":"question","description":"Further information is requested","color":"D4C5F9"}],"milestone":null,"number":14669,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[QST] Does the read_json() method support GPU acceleration?","updatedAt":"2024-03-04T15:41:50Z","url":"https://github.com/rapidsai/cudf/issues/14669"}
