{"assignees":[],"author":{"id":"MDQ6VXNlcjExMjY5ODE=","is_bot":false,"login":"wence-","name":"Lawrence Mitchell"},"body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nWe have already migrated to using [ruff](https://docs.astral.sh/ruff/) to replace flake8 and pyflakes. A previous barrier to using ruff's `isort` lint was lack of support for custom sections, [that is now supported](https://docs.astral.sh/ruff/settings/#isort-sections). Similarly, `ruff format` (which produces effectively black-compatible formatting) is now in \"stable\" beta and very usable.\r\n\r\nWe should consider migrating the separate `isort` and `black` configs to use `ruff check --fix` and `ruff format` respectively.\r\n\r\nThe advantage here is that ruff is orders of magnitude faster than both isort and black. For those of us that use format-on-save this is a significant quality of life improvement (formatting a large python file when editing cudf can easily take a few seconds with black).\r\n\r\nWe would also reduce our tool configuration options.\r\n\r\nWe might also at the same time consider increasing the default line length from the current (somewhat miserly) 79 characters.","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5x5SnD","author":{"login":"mroeschke"},"authorAssociation":"CONTRIBUTOR","body":"+1 pandas recently transitioned black (but not isort) to `ruff format` and didn't have issues.","createdAt":"2024-01-25T19:26:44Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14882#issuecomment-1910843843","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5x5dOs","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"@bdice and I were just talking about wanting to do this.\r\n\r\nThe main concern on the isort front is that [ruff does not support Cython yet](https://github.com/astral-sh/ruff/issues/1079), whereas isort does. We'd have to be willing to give that up, or alternatively migrate to ruff over isort only for Cython files (which seems a bit convoluted).\r\n\r\nruff has supported sectioning for quite a while in its isort functionality. I'm fairly certain it was available even at the time that I first enabled ruff. We just need to remember that we also use different sectioning for the different subprojects, so we would need to do something like this:\r\n\r\n```\r\n# pyproject.toml\r\n[tool.ruff]\r\n# standard ruff configuration\r\n\r\n# python/cudf/pyproject.toml\r\n[tool.ruff]\r\nextend = \"../../pyproject.toml\"\r\nsections = ...\r\n```\r\n\r\nI think that should work but have not tested it","createdAt":"2024-01-25T19:49:24Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14882#issuecomment-1910887340","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5x6sAw","author":{"login":"bdice"},"authorAssociation":"CONTRIBUTOR","body":"We should definitely remove pydocstyle in favor of ruff. Its [README](https://github.com/PyCQA/pydocstyle) says that the project is formally deprecated, and proposes ruff (with rules for `\"D\"`) as an alternative. pydocstyle is one of the longer-running checks today.\r\n\r\n> Ruff offers full parity with pydocstyle along with advanced features, better support for the latest Python versions, and ongoing development to ensure a top-notch linting experience. We highly recommend pydocstyle users to switch over to ruff for a seamless transition.","createdAt":"2024-01-26T00:20:06Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14882#issuecomment-1911210032","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5x8kny","author":{"login":"wence-"},"authorAssociation":"CONTRIBUTOR","body":"> The main concern on the isort front is that [ruff does not support Cython yet](https://github.com/astral-sh/ruff/issues/1079), whereas isort does. We'd have to be willing to give that up, or alternatively migrate to ruff over isort only for Cython files (which seems a bit convoluted).\r\n\r\nTBH, and this is perhaps a minority view, at the moment the cython file formatting is not as uniform any (there's no auto-formatting). So I am perhaps less concerned about dropping isort just for those.\r\n\r\n> I think that should work but have not tested it\r\n\r\nit does (I tried)","createdAt":"2024-01-26T09:03:42Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14882#issuecomment-1911704050","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5yxaCa","author":{"login":"bdice"},"authorAssociation":"CONTRIBUTOR","body":"Correct, there isn't much available for Cython formatting last I had looked. I do like that we at _least_ have isort for Cython, though. I would just keep that hook in place and transition everything else (besides isort) to ruff.","createdAt":"2024-02-04T02:21:14Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14882#issuecomment-1925554330","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5yyzgM","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"Personally I don't think isort does a good enough job on Cython files to be worth keeping around. Consider [copying.pyx](https://github.com/rapidsai/cudf/blob/branch-24.04/python/cudf/cudf/_lib/copying.pyx). There are 6 different groupings of cudf, with a libcpp cimport in the middle. AFAICT any cimport confuses isort and makes it restart grouping. If you manually edit this file and group all the imports together and group all the cimports separately (and move the extraneous libcpp cimport up to the top) then isort will properly sort within the groups, but you have to know to do that. Is the partial sort we get better than nothing? I'm sure that's debatable, but IMHO it gives a false sense of security that our imports are sorted better than they really are. I'd rather just use ruff for everything and wait until ruff adds Cython support or cython-lint starts sorting imports.","createdAt":"2024-02-04T21:22:54Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14882#issuecomment-1925920780","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5yz4Ha","author":{"login":"bdice"},"authorAssociation":"CONTRIBUTOR","body":"Interesting, I didnâ€™t realize it was like that. I have not assessed this in a while. I trust your judgement on that, and am fine with removing isort.","createdAt":"2024-02-05T04:15:54Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14882#issuecomment-1926201818","viewerDidAuthor":false}],"createdAt":"2024-01-25T12:30:01Z","id":"I_kwDOBWUGps59L_Ed","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"}],"milestone":null,"number":14882,"projectCards":[],"projectItems":[],"reactionGroups":[{"content":"HEART","users":{"totalCount":1}}],"state":"OPEN","title":"[FEA] Consolidate python code-style checking and formatting to just use `ruff`","updatedAt":"2024-03-04T15:42:01Z","url":"https://github.com/rapidsai/cudf/issues/14882"}
