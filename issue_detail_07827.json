{"assignees":[],"author":{"id":"MDQ6VXNlcjE2OTI5MTQ=","is_bot":false,"login":"randerzander","name":"Randy Gelhausen"},"body":"```\r\nimport cudf\r\nfrom cudf.core.dtypes import Decimal64Dtype\r\n\r\ndf = cudf.DataFrame({'id': [0, 1, 2]})\r\n\r\ndf['id_dec'] = df['id'].astype(Decimal64Dtype(7,2))\r\n\r\n#works\r\ndf.groupby('id').count()\r\n\r\n# fails\r\ndf.groupby('id_dec').count()\r\n```\r\n```\r\n---------------------------------------------------------------------------\r\nRecursionError                            Traceback (most recent call last)\r\n<ipython-input-6-a16bdd01391b> in <module>\r\n----> 1 df.groupby('id_dec').count()\r\n\r\n/conda/lib/python3.8/site-packages/cudf/core/groupby/groupby.py in _agg_func_name_with_args(self, func_name, *args, **kwargs)\r\n    605 \r\n    606     func.__name__ = func_name\r\n--> 607     return self.agg(func)\r\n    608 \r\n    609 \r\n\r\n/conda/lib/python3.8/contextlib.py in inner(*args, **kwds)\r\n     73         def inner(*args, **kwds):\r\n     74             with self._recreate_cm():\r\n---> 75                 return func(*args, **kwds)\r\n     76         return inner\r\n     77 \r\n\r\n/conda/lib/python3.8/site-packages/cudf/core/groupby/groupby.py in agg(self, func)\r\n    163         # a Float64Index, while Pandas returns an Int64Index\r\n    164         # (GH: 6945)\r\n--> 165         result = self._groupby.aggregate(self.obj, normalized_aggs)\r\n    166 \r\n    167         result = cudf.DataFrame._from_table(result)\r\n\r\n/conda/lib/python3.8/site-packages/cudf/utils/utils.py in __get__(self, instance, cls)\r\n    276             return self\r\n    277         else:\r\n--> 278             value = self.func(instance)\r\n    279             setattr(instance, self.func.__name__, value)\r\n    280             return value\r\n\r\n/conda/lib/python3.8/site-packages/cudf/core/groupby/groupby.py in _groupby(self)\r\n    102     @cached_property\r\n    103     def _groupby(self):\r\n--> 104         return libgroupby.GroupBy(self.grouping.keys, dropna=self._dropna)\r\n    105 \r\n    106     @annotate(\"GROUPBY_AGG\", domain=\"cudf_python\")\r\n\r\n/conda/lib/python3.8/site-packages/cudf/core/groupby/groupby.py in keys(self)\r\n    887             )\r\n    888         else:\r\n--> 889             return cudf.core.index.as_index(\r\n    890                 self._key_columns[0], name=self.names[0]\r\n    891             )\r\n\r\n/conda/lib/python3.8/site-packages/cudf/core/index.py in as_index(arbitrary, **kwargs)\r\n   2866     elif isinstance(arbitrary, range):\r\n   2867         return RangeIndex(arbitrary, **kwargs)\r\n-> 2868     return as_index(\r\n   2869         column.as_column(arbitrary, dtype=kwargs.get(\"dtype\", None)), **kwargs\r\n   2870     )\r\n\r\n... last 1 frames repeated, from the frame below ...\r\n\r\n/conda/lib/python3.8/site-packages/cudf/core/index.py in as_index(arbitrary, **kwargs)\r\n   2866     elif isinstance(arbitrary, range):\r\n   2867         return RangeIndex(arbitrary, **kwargs)\r\n-> 2868     return as_index(\r\n   2869         column.as_column(arbitrary, dtype=kwargs.get(\"dtype\", None)), **kwargs\r\n   2870     )\r\n\r\nRecursionError: maximum recursion depth exceeded in comparison\r\n```","closed":false,"closedAt":null,"comments":[{"id":"MDEyOklzc3VlQ29tbWVudDgzMDcyMDkwMw==","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2021-05-02T01:30:22Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/7827#issuecomment-830720903","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps45bZl9","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"@shwina should we introduce Decimal[32/64/128]Index classes? Making this work requires that the index of the groupby result is the decimal column, which is one of the underlying problems (it manifests quite differently now, as opposed to back in the 0.19 release, but same problem).","createdAt":"2021-11-08T19:07:45Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/7827#issuecomment-963484029","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps45bpJa","author":{"login":"shwina"},"authorAssociation":"CONTRIBUTOR","body":"Yes - likely we're going to have to go down that route.","createdAt":"2021-11-08T20:30:44Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/7827#issuecomment-963547738","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps49geM6","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2022-02-07T21:04:57Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/7827#issuecomment-1031922490","viewerDidAuthor":false}],"createdAt":"2021-04-01T22:08:37Z","id":"MDU6SXNzdWU4NDg4MjAxMjA=","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMDEzOTg3MzUy","name":"0 - Backlog","description":"In queue waiting for assignment","color":"d4c5f9"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":{"number":3,"title":"Decimal data type and operations","description":"","dueOn":null},"number":7827,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Groupby support with Decimal column as key column","updatedAt":"2023-06-27T03:48:33Z","url":"https://github.com/rapidsai/cudf/issues/7827"}
