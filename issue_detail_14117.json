{"assignees":[],"author":{"id":"MDQ6VXNlcjEzNTIxMDA4","is_bot":false,"login":"isVoid","name":"Michael Wang"},"body":"**Describe the bug**\r\nWhen executing cuDF code interleaved in certain tensorflow code paths, a device to host copy will result in a `CUDA_ERROR_INVALID_VALUE` error.\r\n\r\nFull stack trace\r\n```\r\ntests/test_tensorflow.py:188: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/home/nfs/wangm/mambaforge/envs/xdf-integration/lib/python3.10/site-packages/nvtx/nvtx.py:101: in inner\r\n    result = func(*args, **kwargs)\r\n/home/nfs/wangm/mambaforge/envs/xdf-integration/lib/python3.10/site-packages/cudf/core/dataframe.py:5055: in to_pandas\r\n    out_data[i] = self._data[col_key].to_pandas(\r\n/home/nfs/wangm/mambaforge/envs/xdf-integration/lib/python3.10/site-packages/cudf/core/column/numerical.py:685: in to_pandas\r\n    pd_series = pd.Series(self.values_host, copy=False)\r\n/home/nfs/wangm/mambaforge/envs/xdf-integration/lib/python3.10/site-packages/cudf/core/column/column.py:234: in values_host\r\n    return self.data_array_view(mode=\"read\").copy_to_host()\r\n/home/nfs/wangm/mambaforge/envs/xdf-integration/lib/python3.10/site-packages/cudf/core/column/column.py:156: in data_array_view\r\n    return cuda.as_cuda_array(obj).view(self.dtype)\r\n/home/nfs/wangm/mambaforge/envs/xdf-integration/lib/python3.10/site-packages/numba/cuda/api.py:76: in as_cuda_array\r\n    return from_cuda_array_interface(obj.__cuda_array_interface__,\r\n/home/nfs/wangm/mambaforge/envs/xdf-integration/lib/python3.10/site-packages/numba/cuda/cudadrv/devices.py:232: in _require_cuda_context\r\n    return fn(*args, **kws)\r\n/home/nfs/wangm/mambaforge/envs/xdf-integration/lib/python3.10/site-packages/numba/cuda/api.py:47: in from_cuda_array_interface\r\n    devptr = driver.get_devptr_for_active_ctx(desc['data'][0])\r\n/home/nfs/wangm/mambaforge/envs/xdf-integration/lib/python3.10/site-packages/numba/cuda/cudadrv/driver.py:2964: in get_devptr_for_active_ctx\r\n    driver.cuPointerGetAttribute(byref(devptr), attr, ptr)\r\n/home/nfs/wangm/mambaforge/envs/xdf-integration/lib/python3.10/site-packages/numba/cuda/cudadrv/driver.py:327: in safe_cuda_api_call\r\n    self._check_ctypes_error(fname, retcode)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <numba.cuda.cudadrv.driver.Driver object at 0x7ff5f744e7a0>, fname = 'cuPointerGetAttribute', retcode = 1\r\n\r\n    def _check_ctypes_error(self, fname, retcode):\r\n        if retcode != enums.CUDA_SUCCESS:\r\n            errname = ERROR_MAP.get(retcode, \"UNKNOWN_CUDA_ERROR\")\r\n            msg = \"Call to %s results in %s\" % (fname, errname)\r\n            _logger.error(msg)\r\n            if retcode == enums.CUDA_ERROR_NOT_INITIALIZED:\r\n                self._detect_fork()\r\n>           raise CudaAPIError(retcode, msg)\r\nE           numba.cuda.cudadrv.driver.CudaAPIError: [1] Call to cuPointerGetAttribute results in CUDA_ERROR_INVALID_VALUE\r\n\r\n/home/nfs/wangm/mambaforge/envs/xdf-integration/lib/python3.10/site-packages/numba/cuda/cudadrv/driver.py:395: CudaAPIError\r\n```\r\n\r\n**Steps/Code to reproduce bug**\r\nMin repro:\r\n```python\r\nimport cudf\r\nimport tensorflow as tf\r\n\r\ndf = cudf.DataFrame({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\r\n\r\nwith tf.device(\"/GPU:1\"):\r\n    # Perform some operations on the GPU with tf\r\n    inp = tf.keras.Input(shape=(), name=\"inp\", dtype=tf.int64)\r\n    b = inp[:, tf.newaxis]\r\n\r\n# Copy data to host\r\npdf = df.to_pandas()\r\n```\r\n\r\n**Expected behavior**\r\nSince keras layer only deal with constructing computation graph on the tensorflow side and shouldn't have interaction with cudf. cuDF operation shouldn't fail.\r\n\r\n**Environment overview (please complete the following information)**\r\n - Environment location: [Bare-metal]\r\n - Method of cuDF install: [conda]]\r\n\r\n**Environment details**\r\nN/A\r\n\r\n**Additional context**\r\nN/A\r\n","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5mtdo8","author":{"login":"wence-"},"authorAssociation":"CONTRIBUTOR","body":"> `with tf.device(\"/GPU:1\"):`\r\n\r\nDoes this leave device-1 as the currently active context?","createdAt":"2023-09-18T11:09:13Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14117#issuecomment-1723193916","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5mtfUj","author":{"login":"isVoid"},"authorAssociation":"CONTRIBUTOR","body":"It does: https://www.tensorflow.org/guide/gpu#manual_device_placement\r\n\r\n> you can use with tf.device to create a device context, and all the operations within that context will run on the same designated device.\r\n\r\nAlthough it doesn't matter which device I choose, the error is repeatable.\r\n","createdAt":"2023-09-18T11:14:13Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14117#issuecomment-1723200803","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5mtiYG","author":{"login":"wence-"},"authorAssociation":"CONTRIBUTOR","body":"FWIW, this WFM in a rapids-compose container (I did `mamba install tensorflow` to get version 2.12.1):\r\n```\r\nIn [1]: import cudf\r\n   ...: import tensorflow as tf\r\n   ...: from cuda import cudart\r\n   ...: df = cudf.DataFrame({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\r\n   ...: \r\n   ...: print(cudart.cudaGetDevice())\r\n   ...: with tf.device(\"/GPU:1\"):\r\n   ...:     # Perform some operations on the GPU with tf\r\n   ...:     inp = tf.keras.Input(shape=(), name=\"inp\", dtype=tf.int64)\r\n   ...:     b = inp[:, tf.newaxis]\r\n   ...:     print(cudart.cudaGetDevice())\r\n   ...: \r\n   ...: # Copy data to host\r\n   ...: print(cudart.cudaGetDevice())\r\n   ...: pdf = df.to_pandas()\r\n\r\n2023-09-18 12:22:32.889821: I tensorflow/core/util/port.cc:110] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.\r\n2023-09-18 12:22:32.928206: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.\r\nTo enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.\r\n(<cudaError_t.cudaSuccess: 0>, 0)\r\n2023-09-18 12:22:36.558988: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1635] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 46304 MB memory:  -> device: 0, name: NVIDIA RTX A6000, pci bus id: 0000:17:00.0, compute capability: 8.6\r\n2023-09-18 12:22:36.559648: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1635] Created device /job:localhost/replica:0/task:0/device:GPU:1 with 44191 MB memory:  -> device: 1, name: NVIDIA RTX A6000, pci bus id: 0000:b3:00.0, compute capability: 8.6\r\n(<cudaError_t.cudaSuccess: 0>, 1)\r\n(<cudaError_t.cudaSuccess: 0>, 1)\r\n```","createdAt":"2023-09-18T11:23:29Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14117#issuecomment-1723213318","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5mtkGv","author":{"login":"isVoid"},"authorAssociation":"CONTRIBUTOR","body":"I think I installed tensorflow the same way. It's also the same version (2.12.1). But running on bare metal.","createdAt":"2023-09-18T11:29:04Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14117#issuecomment-1723220399","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5mtlN5","author":{"login":"isVoid"},"authorAssociation":"CONTRIBUTOR","body":"Which cuda version do you use?","createdAt":"2023-09-18T11:32:27Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14117#issuecomment-1723224953","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5mtopL","author":{"login":"wence-"},"authorAssociation":"CONTRIBUTOR","body":"I have `NVIDIA-SMI 525.125.06   Driver Version: 525.125.06   CUDA Version: 12.0` and:\r\n```\r\n$ mamba list | grep cuda\r\n# packages in environment at /home/wence/Documents/src/rapids/compose/etc/conda/cuda_11.8/envs/rapids:\r\ncuda-nvtx                 11.8.86                       0    nvidia\r\ncuda-python               11.8.2          py310h01a121a_0    conda-forge\r\ncuda-sanitizer-api        11.8.86                       0    nvidia\r\ncuda-version              11.8                 h70ddcb2_2    conda-forge\r\ncudatoolkit               11.8.0              h4ba93d1_12    conda-forge\r\ndask-cuda                 23.10.00a       py310_230911_g63ba2cc_12    rapidsai-nightly\r\nlibkvikio                 23.10.00a       cuda11_230911_gc85abd5_17    rapidsai-nightly\r\ntensorflow                2.12.1          cuda112py310h457873b_0    conda-forge\r\ntensorflow-base           2.12.1          cuda112py310h622e808_0    conda-forge\r\ntensorflow-estimator      2.12.1          cuda112py310ha5e6de5_0    conda-forge\r\n```","createdAt":"2023-09-18T11:42:46Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14117#issuecomment-1723238987","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5m2N4J","author":{"login":"isVoid"},"authorAssociation":"CONTRIBUTOR","body":"xref: https://github.com/tensorflow/tensorflow/issues/61911","createdAt":"2023-09-19T13:16:15Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/14117#issuecomment-1725488649","viewerDidAuthor":false}],"createdAt":"2023-09-18T10:41:46Z","id":"I_kwDOBWUGps5xSbTH","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxMDEzOTg3MzUy","name":"0 - Backlog","description":"In queue waiting for assignment","color":"d4c5f9"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":null,"number":14117,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] Interleaving cuDF operations with Tensorflow results in `CUDA_ERROR_INVALID_VALUE`","updatedAt":"2023-11-09T17:42:07Z","url":"https://github.com/rapidsai/cudf/issues/14117"}
