{"assignees":[{"id":"MDQ6VXNlcjUzNzk2MDk5","login":"brandon-b-miller","name":""}],"author":{"id":"MDQ6VXNlcjUzNzk2MDk5","is_bot":false,"login":"brandon-b-miller","name":""},"body":"Recently we started work to add the `abs` operator to `apply`, in https://github.com/rapidsai/cudf/pull/13408. Previously we added several more built-in casting operators such as `float`, `int` and `bool`, in https://github.com/rapidsai/cudf/pull/11578. We should investigate adding anything else we conceivable _can_. From the list in [python's docs](https://docs.python.org/3/library/functions.html#abs), considering the numeric and string dtypes we currently support, I expect we can add the following operators:\r\n\r\n\r\n- `bin`\r\n- `chr`\r\n- `divmod` \r\n- `hash`\r\n- `hex`\r\n- `oct`\r\n- `ord`\r\n- `pow`\r\n- `round`\r\n- `str`\r\n\r\n\r\nIn addition, the following may be implemented once we have some kind of sensible list, tuple, and iterable types:\r\n\r\n- `all`, for supported iterables\r\n- `any`, for supported iterables\r\n- `list`\r\n- `range`\r\n- `slice`\r\n- `sum`\r\n- `tuple`\r\n","closed":false,"closedAt":null,"comments":[],"createdAt":"2023-05-26T16:45:43Z","id":"I_kwDOBWUGps5m_kJG","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMDE2MzIwNzI3","name":"numba","description":"Numba issue","color":"9c2cdd"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":null,"number":13462,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Support for builtin operators in `apply` functions","updatedAt":"2023-05-26T16:45:44Z","url":"https://github.com/rapidsai/cudf/issues/13462"}
