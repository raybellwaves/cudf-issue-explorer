{"assignees":[],"author":{"id":"MDQ6VXNlcjU2MDczMzA=","is_bot":false,"login":"mythrocks","name":"MithunR"},"body":"This bug is to track a (possible) misinterpretation of Parquet list schemas when stored in a legacy format. This is a follow-up to https://github.com/rapidsai/cudf/pull/13277.\r\n\r\nThis is specific to rules #3 and #4 in the [Parquet `LogicalType` spec](https://github.com/apache/parquet-format/blob/master/LogicalTypes.md#backward-compatibility-rules), which states:\r\n```\r\n3. If the repeated field is a group with one field and is named either array or uses the LIST-annotated group's name with _tuple appended then the repeated type is the element type and elements are required.\r\n4. Otherwise, the repeated field's type is the element type with the repeated field's repetition.\r\n```\r\nConsider the following schema, from the [Parquet file attached herewith](https://github.com/rapidsai/cudf/files/11427533/pq_array.zip):\r\n```\r\n <pyarrow._parquet.ParquetSchema object at 0x7fe1cc5849c0>\r\nrequired group field_id=-1 spark_schema {\r\n  required group field_id=-1 my_list (List) {\r\n    repeated group field_id=-1 array {\r\n      required int32 field_id=-1 item;\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n`libcudf` seems to interpret this as `List<Int32>`:\r\n```\r\n$ gtests/PARQUET_TEST --gtest_filter=ParquetReaderTest.Myth\r\n...\r\ncudf::list_view<int32_t>:\r\nLength : 1\r\nOffsets : 0, 2\r\n   0, 1\r\n```\r\nBy my reading of the spec, this should be interpreted as a `List<Struct<Int32>>`. Apache Spark seems to concur:\r\n```scala\r\nscala> spark.read.parquet(\"pq_array.parquet\").printSchema\r\nroot\r\n |-- my_list: array (nullable = true)\r\n |    |-- element: struct (containsNull = true)\r\n |    |    |-- item: integer (nullable = true)\r\n```","closed":false,"closedAt":null,"comments":[],"createdAt":"2023-05-09T05:16:14Z","id":"I_kwDOBWUGps5laI11","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxMDEzOTg3MzUy","name":"0 - Backlog","description":"In queue waiting for assignment","color":"d4c5f9"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"},{"id":"MDU6TGFiZWwxMTg1MjQ0MTQy","name":"cuIO","description":"cuIO issue","color":"fef2c0"}],"milestone":{"number":22,"title":"Parquet continuous improvement","description":"","dueOn":null},"number":13313,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] Misinterpretation of Parquet List schema with single GROUP child named \"array\"","updatedAt":"2024-02-16T23:37:26Z","url":"https://github.com/rapidsai/cudf/issues/13313"}
