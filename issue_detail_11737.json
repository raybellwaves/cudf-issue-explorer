{"assignees":[{"id":"MDQ6VXNlcjUzNzk2MDk5","login":"brandon-b-miller","name":""}],"author":{"id":"MDQ6VXNlcjE2OTI5MTQ=","is_bot":false,"login":"randerzander","name":"Randy Gelhausen"},"body":"Using the newly merged strings_udf support, I'm trying to pass scalar arguments to a string UDF:\r\n```\r\nimport cudf\r\n\r\ndf = cudf.DataFrame({\"str_col\": [\"a\", \"abb\", \"abc\"]})\r\n\r\ndef delim_count(row, delim):\r\n    return row[\"str_col\"].count(delim)\r\n\r\ndf.apply(delim_count, args=(\"b\",), axis=1)\r\n```\r\n\r\nBut I get udf compilation failed errors.\r\n\r\nTrace:\r\n```\r\n---------------------------------------------------------------------------\r\nNumbaNotImplementedError                  Traceback (most recent call last)\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/base.py in cast(self, builder, val, fromty, toty)\r\n    711         try:\r\n--> 712             impl = self._casts.find((fromty, toty))\r\n    713             return impl(self, builder, fromty, toty, val)\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/base.py in find(self, sig)\r\n     48         if out is None:\r\n---> 49             out = self._find(sig)\r\n     50             self._cache[sig] = out\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/base.py in _find(self, sig)\r\n     57         else:\r\n---> 58             raise errors.NumbaNotImplementedError(f'{self}, {sig}')\r\n     59 \r\n\r\nNumbaNotImplementedError: <numba.core.base.OverloadSelector object at 0x7f2498b3aca0>, (unicode_type, string_view)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nNumbaNotImplementedError                  Traceback (most recent call last)\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/base.py in cast(self, builder, val, fromty, toty)\r\n    712             impl = self._casts.find((fromty, toty))\r\n--> 713             return impl(self, builder, fromty, toty, val)\r\n    714         except errors.NumbaNotImplementedError:\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/cudf/core/udf/masked_lowering.py in cast_primitive_to_masked(context, builder, fromty, toty, val)\r\n    336 def cast_primitive_to_masked(context, builder, fromty, toty, val):\r\n--> 337     casted = context.cast(builder, val, fromty, toty.value_type)\r\n    338     ext = cgutils.create_struct_proxy(toty)(context, builder)\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/base.py in cast(self, builder, val, fromty, toty)\r\n    714         except errors.NumbaNotImplementedError:\r\n--> 715             raise errors.NumbaNotImplementedError(\r\n    716                 \"Cannot cast %s to %s: %s\" % (fromty, toty, val))\r\n\r\nNumbaNotImplementedError: Cannot cast unicode_type to string_view: %\"inserted.parent\" = insertvalue {i8*, i64, i32, i32, i64, i8*, i8*} %\"inserted.meminfo\", i8* %\"arg.delim.6\", 6\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nNumbaNotImplementedError                  Traceback (most recent call last)\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/cudf/core/indexed_frame.py in _apply(self, func, kernel_getter, *args, **kwargs)\r\n   1817         try:\r\n-> 1818             kernel, retty = _compile_or_get(\r\n   1819                 self, func, args, kernel_getter=kernel_getter\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/contextlib.py in inner(*args, **kwds)\r\n     78             with self._recreate_cm():\r\n---> 79                 return func(*args, **kwds)\r\n     80         return inner\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/cudf/core/udf/utils.py in _compile_or_get(frame, func, args, kernel_getter)\r\n    214 \r\n--> 215     kernel, scalar_return_type = kernel_getter(frame, func, args)\r\n    216     np_return_type = numpy_support.as_dtype(scalar_return_type)\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/cudf/core/udf/row_function.py in _get_row_kernel(frame, func, args)\r\n    132     )\r\n--> 133     scalar_return_type = _get_udf_return_type(row_type, func, args)\r\n    134     # this is the signature for the final full kernel compilation\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/contextlib.py in inner(*args, **kwds)\r\n     78             with self._recreate_cm():\r\n---> 79                 return func(*args, **kwds)\r\n     80         return inner\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/cudf/core/udf/utils.py in _get_udf_return_type(argty, func, args)\r\n     55     # needed here.\r\n---> 56     ptx, output_type = cudautils.compile_udf(func, compile_sig)\r\n     57     if not isinstance(output_type, MaskedType):\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/cudf/utils/cudautils.py in compile_udf(udf, type_signature)\r\n    249     # compilation with Numba\r\n--> 250     ptx_code, return_type = cuda.compile_ptx_for_current_device(\r\n    251         udf, type_signature, device=True\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/cuda/compiler.py in compile_ptx_for_current_device(pyfunc, args, debug, lineinfo, device, fastmath, opt)\r\n    289     cc = get_current_device().compute_capability\r\n--> 290     return compile_ptx(pyfunc, args, debug=debug, lineinfo=lineinfo,\r\n    291                        device=device, fastmath=fastmath, cc=cc, opt=True)\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/compiler_lock.py in _acquire_compile_lock(*args, **kwargs)\r\n     34             with self:\r\n---> 35                 return func(*args, **kwargs)\r\n     36         return _acquire_compile_lock\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/cuda/compiler.py in compile_ptx(pyfunc, args, debug, lineinfo, device, fastmath, cc, opt)\r\n    266 \r\n--> 267     cres = compile_cuda(pyfunc, None, args, debug=debug, lineinfo=lineinfo,\r\n    268                         nvvm_options=nvvm_options)\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/compiler_lock.py in _acquire_compile_lock(*args, **kwargs)\r\n     34             with self:\r\n---> 35                 return func(*args, **kwargs)\r\n     36         return _acquire_compile_lock\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/cuda/compiler.py in compile_cuda(pyfunc, return_type, args, debug, lineinfo, inline, fastmath, nvvm_options)\r\n    201     # Run compilation pipeline\r\n--> 202     cres = compiler.compile_extra(typingctx=typingctx,\r\n    203                                   targetctx=targetctx,\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/compiler.py in compile_extra(typingctx, targetctx, func, args, return_type, flags, locals, library, pipeline_class)\r\n    692                               args, return_type, flags, locals)\r\n--> 693     return pipeline.compile_extra(func)\r\n    694 \r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/compiler.py in compile_extra(self, func)\r\n    428         self.state.lifted_from = None\r\n--> 429         return self._compile_bytecode()\r\n    430 \r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/compiler.py in _compile_bytecode(self)\r\n    496         assert self.state.func_ir is None\r\n--> 497         return self._compile_core()\r\n    498 \r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/compiler.py in _compile_core(self)\r\n    475                     if is_final_pipeline:\r\n--> 476                         raise e\r\n    477             else:\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/compiler.py in _compile_core(self)\r\n    462                 try:\r\n--> 463                     pm.run(self.state)\r\n    464                     if self.state.cr is not None:\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/compiler_machinery.py in run(self, state)\r\n    352                 patched_exception = self._patch_error(msg, e)\r\n--> 353                 raise patched_exception\r\n    354 \r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/compiler_machinery.py in run(self, state)\r\n    340                 if isinstance(pass_inst, CompilerPass):\r\n--> 341                     self._runPass(idx, pass_inst, state)\r\n    342                 else:\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/compiler_lock.py in _acquire_compile_lock(*args, **kwargs)\r\n     34             with self:\r\n---> 35                 return func(*args, **kwargs)\r\n     36         return _acquire_compile_lock\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/compiler_machinery.py in _runPass(self, index, pss, internal_state)\r\n    295         with SimpleTimer() as pass_time:\r\n--> 296             mutated |= check(pss.run_pass, internal_state)\r\n    297         with SimpleTimer() as finalize_time:\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/compiler_machinery.py in check(func, compiler_state)\r\n    268         def check(func, compiler_state):\r\n--> 269             mangled = func(compiler_state)\r\n    270             if mangled not in (True, False):\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/typed_passes.py in run_pass(self, state)\r\n    393                                        metadata=metadata)\r\n--> 394                 lower.lower()\r\n    395                 if not flags.no_cpython_wrapper:\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/lowering.py in lower(self)\r\n    195             self.genlower = None\r\n--> 196             self.lower_normal_function(self.fndesc)\r\n    197         else:\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/lowering.py in lower_normal_function(self, fndesc)\r\n    249         self.extract_function_arguments()\r\n--> 250         entry_block_tail = self.lower_function_body()\r\n    251 \r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/lowering.py in lower_function_body(self)\r\n    278             self.builder.position_at_end(bb)\r\n--> 279             self.lower_block(block)\r\n    280         self.post_lower()\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/lowering.py in lower_block(self, block)\r\n    292                                    loc=self.loc, errcls_=defaulterrcls):\r\n--> 293                 self.lower_inst(inst)\r\n    294         self.post_block(block)\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/lowering.py in lower_inst(self, inst)\r\n    437             ty = self.typeof(inst.target.name)\r\n--> 438             val = self.lower_assign(ty, inst)\r\n    439             argidx = None\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/lowering.py in lower_assign(self, ty, inst)\r\n    623         elif isinstance(value, ir.Expr):\r\n--> 624             return self.lower_expr(ty, value)\r\n    625 \r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/lowering.py in lower_expr(self, resty, expr)\r\n   1158         elif expr.op == 'call':\r\n-> 1159             res = self.lower_call(resty, expr)\r\n   1160             return res\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/lowering.py in lower_call(self, resty, expr)\r\n    888         else:\r\n--> 889             res = self._lower_call_normal(fnty, expr, signature)\r\n    890 \r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/lowering.py in _lower_call_normal(self, fnty, expr, signature)\r\n   1111         else:\r\n-> 1112             argvals = self.fold_call_args(\r\n   1113                 fnty, signature, expr.args, expr.vararg, expr.kws,\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/lowering.py in fold_call_args(self, fnty, signature, pos_args, vararg, kw_args)\r\n    810                                           \"when calling %s\" % (fnty,))\r\n--> 811             argvals = [self._cast_var(var, sigty)\r\n    812                        for var, sigty in zip(pos_args, signature.args)]\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/lowering.py in <listcomp>(.0)\r\n    810                                           \"when calling %s\" % (fnty,))\r\n--> 811             argvals = [self._cast_var(var, sigty)\r\n    812                        for var, sigty in zip(pos_args, signature.args)]\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/lowering.py in _cast_var(self, var, ty)\r\n    793             val = self.loadvar(var.name)\r\n--> 794         return self.context.cast(self.builder, val, varty, ty)\r\n    795 \r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/numba/core/base.py in cast(self, builder, val, fromty, toty)\r\n    714         except errors.NumbaNotImplementedError:\r\n--> 715             raise errors.NumbaNotImplementedError(\r\n    716                 \"Cannot cast %s to %s: %s\" % (fromty, toty, val))\r\n\r\nNumbaNotImplementedError: Failed in cuda mode pipeline (step: native lowering)\r\nCannot cast unicode_type to Masked(string_view): %\"inserted.parent\" = insertvalue {i8*, i64, i32, i32, i64, i8*, i8*} %\"inserted.meminfo\", i8* %\"arg.delim.6\", 6\r\nDuring: lowering \"$12call_method.5 = call $8load_method.3(delim, func=$8load_method.3, args=[Var(delim, 3005899295.py:6)], kws=(), vararg=None, target=None)\" at /tmp/ipykernel_2334/3005899295.py (6)\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nValueError                                Traceback (most recent call last)\r\n/tmp/ipykernel_2334/3005899295.py in <module>\r\n      6     return row[\"str_col\"].count(delim)\r\n      7 \r\n----> 8 df.apply(delim_count, args=(\"b\",), axis=1)\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/contextlib.py in inner(*args, **kwds)\r\n     77         def inner(*args, **kwds):\r\n     78             with self._recreate_cm():\r\n---> 79                 return func(*args, **kwds)\r\n     80         return inner\r\n     81 \r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/cudf/core/dataframe.py in apply(self, func, axis, raw, result_type, args, **kwargs)\r\n   4089             raise ValueError(\"The `result_type` kwarg is not yet supported.\")\r\n   4090 \r\n-> 4091         return self._apply(func, _get_row_kernel, *args, **kwargs)\r\n   4092 \r\n   4093     def applymap(\r\n\r\n/opt/conda/envs/rapids/lib/python3.9/contextlib.py in inner(*args, **kwds)\r\n     77         def inner(*args, **kwds):\r\n     78             with self._recreate_cm():\r\n---> 79                 return func(*args, **kwds)\r\n     80         return inner\r\n     81 \r\n\r\n/opt/conda/envs/rapids/lib/python3.9/site-packages/cudf/core/indexed_frame.py in _apply(self, func, kernel_getter, *args, **kwargs)\r\n   1820             )\r\n   1821         except Exception as e:\r\n-> 1822             raise ValueError(\r\n   1823                 \"user defined function compilation failed.\"\r\n   1824             ) from e\r\n\r\nValueError: user defined function compilation failed.\r\n```\r\n\r\nnumba version: '0.55.2'\r\ncudf version: '22.10.00a+242.g387c5ff96d' (built from source)\r\n\r\ncc @brandon-b-miller ","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5MuZwk","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2022-10-21T17:12:56Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11737#issuecomment-1287232548","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5-O37n","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"See also #9639 ","createdAt":"2024-05-17T15:18:17Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/11737#issuecomment-2117828327","viewerDidAuthor":false}],"createdAt":"2022-09-21T16:17:00Z","id":"I_kwDOBWUGps5SUzwZ","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMDE2MzIwNzI3","name":"numba","description":"Numba issue","color":"9c2cdd"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":null,"number":11737,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Support passing scalar string args to string_udfs","updatedAt":"2024-05-17T15:18:18Z","url":"https://github.com/rapidsai/cudf/issues/11737"}
