{"assignees":[{"id":"MDQ6VXNlcjEzNTIxMDA4","login":"isVoid","name":"Michael Wang"}],"author":{"id":"MDQ6VXNlcjMxOTA0MDU=","is_bot":false,"login":"shwina","name":"Ashwin Srinath"},"body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nGPU memory is a valuable resource, and using int64/float64 columns where int32/float32 would suffice means using 2x as much memory unnecessarily. As opposed to scientific computing, 32-bit data types (or lower) are sufficient for many data science applications.\r\n\r\nEven only 32-bit data types as inputs, the resulting output can be a 64-bit type:\r\n\r\n```python\r\n>>> cudf.Series([1, 2, 3], dtype=\"int32\") + cudf.Scalar(1, dtype=\"float32\")\r\n0    2.0\r\n1    3.0\r\n2    4.0\r\ndtype: float64\r\n```\r\n\r\n(this is consistent with Pandas and NumPy)\r\n\r\n**Describe the solution you'd like**\r\n\r\nIt would be nice to be able to specify a maximum bitwidth for integer/floating types. If an operation would result in a value greater than could be accommodated, simply overflowing would be acceptable.\r\n\r\nThis could be another use case for [cudf.config](https://github.com/rapidsai/cudf/issues/5311).\r\n\r\n**Describe alternatives you've considered**\r\n\r\nThe user can carefully cast results back from 64bit to 32bit to reduce memory usage, but this is tedious and does not help with peak memory usage.\r\n","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps5CZt4t","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2022-04-30T19:02:56Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10558#issuecomment-1114037805","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5K8SyV","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2022-09-26T00:16:02Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10558#issuecomment-1257319573","viewerDidAuthor":false}],"createdAt":"2022-03-31T18:28:33Z","id":"I_kwDOBWUGps5G1p7R","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":null,"number":10558,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Provide a way to specify the maximum allowable precision for integers/floats","updatedAt":"2024-02-23T18:42:49Z","url":"https://github.com/rapidsai/cudf/issues/10558"}
