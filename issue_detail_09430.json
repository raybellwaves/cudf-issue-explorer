{"assignees":[{"id":"MDQ6VXNlcjE2MDA1Njkw","login":"vuule","name":"Vukasin Milovanovic"}],"author":{"id":"MDQ6VXNlcjE5MDEwNTk=","is_bot":false,"login":"abellina","name":"Alessandro Bellina"},"body":"The JNI cuDF bindings have a custom writer sink. Recent changes to the `cudf::io::data_sink` api added a `device_write_async` method and we updated our custom sink to pass CI and retain the old behavior. \r\n\r\nIf I try to return a future in this API, and do the work we used to do inside of it, our java tests fail for Orc but not for Parquet. \r\n\r\n```\r\ndiff --git a/java/src/main/native/src/TableJni.cpp b/java/src/main/native/src/TableJni.cpp\r\nindex 9e07f44..da036e9 100644\r\n--- a/java/src/main/native/src/TableJni.cpp\r\n+++ b/java/src/main/native/src/TableJni.cpp\r\n@@ -145,9 +145,9 @@ public:\r\n \r\n   std::future<void> device_write_async(void const *gpu_data, size_t size,\r\n                                        rmm::cuda_stream_view stream) override {\r\n-    // Call the sync version until figuring out how to write asynchronously.\r\n-    device_write(gpu_data, size, stream);\r\n-    return std::async(std::launch::deferred, [] {});\r\n+    return std::async(std::launch::deferred, [=] {\r\n+      device_write(gpu_data, size, stream);\r\n+    });\r\n   }\r\n```\r\n\r\nTest failure:\r\n\r\n```\r\nai.rapids.cudf.CudfException: cuDF failure at: /cudf/cpp/src/io/orc/reader_impl.cu:1321: Invalid index rowgroup stream data\r\n\tat ai.rapids.cudf.Table.readORC(Native Method)\r\n\tat ai.rapids.cudf.Table.readORC(Table.java:925)\r\n\tat ai.rapids.cudf.TableTest.testORCWriteToBufferChunked(TableTest.java:7058)\r\n```\r\n\r\nDiscussing with @devavret it seems that the issue is the value of `bytes_written`. The synchronous way, `bytes_written` in the sink was guaranteed to get updated in the same stack, but with the future approach, we have no such guarantee.\r\n\r\nI am adding this issue to try and document why we worked around this, and if there's a fix to our custom sink or if it's an API that needs to get changed in cuDF.","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps44Kx8_","author":{"login":"abellina"},"authorAssociation":"CONTRIBUTOR","body":"@vuule FYI","createdAt":"2021-10-13T14:13:33Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/9430#issuecomment-942350143","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps44K3Aq","author":{"login":"devavret"},"authorAssociation":"CONTRIBUTOR","body":"Also, the reason this doesn't break in parquet is because it only uses `device_write_async`. ORC also has a couple of host writes mixed in. Those host writes depend on the `bytes_written` being updated after any previous write call.\r\n\r\nBasically we need to rename `bytes_written` to mean offset in file to write into.\r\n\r\nAlso, this means this change in the tests is wrong: https://github.com/rapidsai/cudf/blob/8bb1e8603fbf5c41aad19bcbbfa39c249119b935/cpp/tests/io/parquet_test.cpp#L2061-L2073\r\nThis only worked because it's `launch::deferred`. Had it been `launch::async` then it would've broken too.","createdAt":"2021-10-13T14:35:15Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[{"content":"EYES","users":{"totalCount":1}}],"url":"https://github.com/rapidsai/cudf/issues/9430#issuecomment-942370858","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps46TWCc","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2021-11-24T19:07:32Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/9430#issuecomment-978149532","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps46TWye","author":{"login":"vuule"},"authorAssociation":"CONTRIBUTOR","body":"@devavret can we close this one? I think you merged a PR that addresses this.","createdAt":"2021-11-24T19:12:47Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/9430#issuecomment-978152606","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps46TX6W","author":{"login":"devavret"},"authorAssociation":"CONTRIBUTOR","body":"> @devavret can we close this one? I think you merged a PR that addresses this.\r\n\r\nI don't recall.\r\n\r\nTo \"fix\" this, we might need to rename the `bytes_written` member to `bytes_committed` or something similar. And we should also change the code in parquet test to somehow update the `bytes_committed` before returning.","createdAt":"2021-11-24T19:20:20Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/9430#issuecomment-978157206","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps47qP7c","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2021-12-24T21:03:09Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/9430#issuecomment-1000931036","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps479SuL","author":{"login":"revans2"},"authorAssociation":"CONTRIBUTOR","body":"We still are interested in this, but not really sure what the priority is.","createdAt":"2022-01-05T17:23:03Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/9430#issuecomment-1005923211","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5A8UzA","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2022-04-06T00:09:41Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/9430#issuecomment-1089555648","viewerDidAuthor":false}],"createdAt":"2021-10-13T14:05:52Z","id":"I_kwDOBWUGps49HMkK","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxNDA1MTQ1NjIz","name":"cuDF (Java)","description":"Affects Java cuDF API.","color":"006b75"}],"milestone":null,"number":9430,"projectCards":[{"project":{"name":"Bug Squashing"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] JNI testORCWriteToBufferChunked fails if `device_write_async` just returns a future","updatedAt":"2023-08-10T17:05:33Z","url":"https://github.com/rapidsai/cudf/issues/9430"}
