{"assignees":[],"author":{"id":"MDQ6VXNlcjc0MTY5MzU=","is_bot":false,"login":"ttnghia","name":"Nghia Truong"},"body":"Reproducible code:\r\n```\r\nusing f_wrapper = cudf::test::fixed_width_column_wrapper<double>;\r\nauto const input = f_wrapper{1.95, 2.95, 3.95, 4.95, 5.95, 6.95, 7.95, 8.95, 9.95};\r\n\r\nauto const result = cudf::round(input, 1, cudf::rounding_method::HALF_UP);\r\ncudf::test::print(*result);\r\n```\r\nOutput:\r\n```\r\n2,3,4,5,6,7,8,8.9000000000000004,9.9000000000000004\r\n```\r\n\r\nI digged into the code and see that the rounding operation is indeed doesn't do round up properly:\r\n```\r\ntemplate <typename T>\r\nstruct half_up_positive {\r\n  T n;\r\n  template <typename U = T, std::enable_if_t<cudf::is_floating_point<U>()>* = nullptr>\r\n  __device__ U operator()(U e)\r\n  {\r\n    T integer_part;\r\n    T const fractional_part = generic_modf(e, &integer_part);\r\n    return integer_part + generic_round(fractional_part * n) / n;\r\n  }\r\n```\r\nWhen debugging `generic_round`, given the input  I see that:\r\n```\r\ninput:    9.5000000000, output:   10.0000000000\r\ninput:    9.5000000000, output:   10.0000000000\r\ninput:    9.5000000000, output:   10.0000000000\r\ninput:    9.5000000000, output:   10.0000000000\r\ninput:    9.5000000000, output:   10.0000000000\r\ninput:    9.5000000000, output:   10.0000000000\r\ninput:    9.5000000000, output:   10.0000000000\r\ninput:    9.5000000000, output:    9.0000000000\r\ninput:    9.5000000000, output:    9.0000000000\r\n```\r\nIn other word, `generic_round` can produce different outputs due to very small round-off error.","closed":false,"closedAt":null,"comments":[],"createdAt":"2024-05-24T20:58:21Z","id":"I_kwDOBWUGps6KDyEH","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"}],"milestone":null,"number":15862,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] `cudf::round` with `HALF_UP` mode produces non-deterministic output","updatedAt":"2024-05-25T02:29:06Z","url":"https://github.com/rapidsai/cudf/issues/15862"}
