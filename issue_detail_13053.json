{"assignees":[{"id":"MDQ6VXNlcjUzNzk2MDk5","login":"brandon-b-miller","name":""}],"author":{"id":"MDQ6VXNlcjUzNzk2MDk5","is_bot":false,"login":"brandon-b-miller","name":""},"body":"With the introduction of string datatypes inside user defined functions as well as the merging of the groupby JIT engine, there are now certain objects allowed within UDFs that are individually backed by a device allocation. This issue tracks the introduction of a CUDA version of the reference counting mechanism that powers numba's nopython mode for the CPU target. This mechanism will provide much more robust cleanup for the objects in question than the current approach which attempts to clean everything up in post-processing.\r\n\r\nThe below tasklist is a draft for now and may change as things are merged.\r\n\r\n```[tasklist]\r\n### Tasks\r\n- [ ] https://github.com/rapidsai/cudf/pull/13060\r\n- [ ] https://github.com/rapidsai/cudf/pull/13098\r\n- [ ] https://github.com/rapidsai/cudf/pull/13125\r\n- [ ] https://github.com/rapidsai/cudf/pull/13172\r\n- [ ] https://github.com/rapidsai/cudf/pull/13181\r\n```\r\n","closed":false,"closedAt":null,"comments":[],"createdAt":"2023-04-04T13:58:40Z","id":"I_kwDOBWUGps5ilUup","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMDE2MzIwNzI3","name":"numba","description":"Numba issue","color":"9c2cdd"}],"milestone":null,"number":13053,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Reference counting for memory owning objects in numba kernels","updatedAt":"2024-02-23T18:02:39Z","url":"https://github.com/rapidsai/cudf/issues/13053"}
