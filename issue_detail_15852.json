{"assignees":[],"author":{"id":"MDQ6VXNlcjExMjY5ODE=","is_bot":false,"login":"wence-","name":"Lawrence Mitchell"},"body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nFor the cudf-polars work, I'd like to match dtypes with polars where possible, preferably without casting the result of a libcudf call post-hoc if the interface in theory supports specifying an output type.\r\n\r\nFor whole-frame aggregations (`cudf::reduce`) although one is able to specify an output_dtype, this is not obeyed for a number of aggregations. Specifically:\r\n\r\n- `MEDIAN` (always returns the datatype matching `double`)\r\n- `NUNIQUE` (always returns the datatype matching `cudf::size_type`)\r\n- `QUANTILE` (always returns the datatype matching `double`)\r\n\r\n\r\nThe same is true of many grouped aggregations.\r\n\r\n**Describe the solution you'd like**\r\n\r\nI'd like that aggregations could support output dtype as specified by the user.\r\n\r\n**Describe alternatives you've considered**\r\n\r\npost-hoc unary casting of the result, but this is yet another kernel launch, and produces more memory overhead.","closed":false,"closedAt":null,"comments":[],"createdAt":"2024-05-24T13:37:43Z","id":"I_kwDOBWUGps6KAs7w","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"},{"id":"LA_kwDOBWUGps8AAAABlj4mkw","name":"cudf.polars","description":"Issues specific to cudf.polars","color":"0075ff"}],"milestone":null,"number":15852,"projectCards":[],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Better control over the output dtype in aggregations","updatedAt":"2024-05-24T13:37:57Z","url":"https://github.com/rapidsai/cudf/issues/15852"}
