{"assignees":[],"author":{"id":"MDQ6VXNlcjg0NTczODg=","is_bot":false,"login":"beckernick","name":"Nick Becker"},"body":"Python groupby rolling aggregations return a single Index that corresponds to the original row position of the element, but in pandas return a MultiIndex that includes both the groupby key(s) and original row position.\r\n\r\nThis is not currently blocking any behavior with Dask + cuDF, as grouped rolling operations are blocked by #10173 \r\n\r\n\r\n```python\r\nimport pandas as pd\r\nimport cudf\r\nimport numpy as np\r\n​\r\ndf = cudf.datasets.randomdata(nrows=100000)\r\npdf = df.to_pandas()\r\n​\r\nprint(pdf.groupby(['id']).rolling(window=3).x.mean().head())\r\nprint(df.groupby(['id']).rolling(window=3).x.mean().head())\r\nid        \r\n879  43605   NaN\r\n881  3941    NaN\r\n882  29855   NaN\r\n884  14616   NaN\r\n     70864   NaN\r\nName: x, dtype: float64\r\n43605    <NA>\r\n3941     <NA>\r\n29855    <NA>\r\n14616    <NA>\r\n70864    <NA>\r\nName: x, dtype: float64\r\n```","closed":false,"closedAt":null,"comments":[{"id":"IC_kwDOBWUGps4_cJ5z","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.","createdAt":"2022-03-10T18:03:32Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10249#issuecomment-1064345203","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5Ej_1O","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2022-06-08T19:02:56Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10249#issuecomment-1150287182","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5hbaGS","author":{"login":"beckernick"},"authorAssociation":"MEMBER","body":"Took a quick look at this issue again. I suspect that the reason this occurs is due to the `__getitem__` call (`.x`). RollingGroupby inherits from Rolling, which has the getitem implementation.\r\n\r\nThis implementation returns a standard Rolling object:\r\n\r\nhttps://github.com/rapidsai/cudf/blob/3bacb12deca71667646057d1790f0786c20c2d53/python/cudf/cudf/core/window/rolling.py#L204-L211\r\n\r\nSo the call to `mean()` goes down the standard `Rolling._apply_agg` path rather than the `RollingGroupby._apply_agg`. This path doesn't create a MultiIndex:\r\n\r\nhttps://github.com/rapidsai/cudf/blob/3bacb12deca71667646057d1790f0786c20c2d53/python/cudf/cudf/core/window/rolling.py#L264-L284\r\n\r\n\r\nUnlike the `RollingGroupby._apply_agg` path:\r\n\r\nhttps://github.com/rapidsai/cudf/blob/3bacb12deca71667646057d1790f0786c20c2d53/python/cudf/cudf/core/window/rolling.py#L545-L559","createdAt":"2023-07-13T16:51:55Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10249#issuecomment-1634574738","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps5hbhPM","author":{"login":"beckernick"},"authorAssociation":"MEMBER","body":"To make this concrete:\r\n\r\n```python\r\nimport cudf\r\n\r\ndf = cudf.datasets.randomdata()\r\n\r\nprint(\"getitem call on the RollingGroupby object\")\r\nprint(df.groupby([\"id\"]).rolling(window=3).x.mean().head())\r\n\r\nprint(\"getitem call before the RollingGroupby is created\")\r\nprint(df.groupby([\"id\"]).x.rolling(window=3).mean().head())\r\ngetitem call on the RollingGroupby object\r\n3    <NA>\r\n8    <NA>\r\n6    <NA>\r\n7    <NA>\r\n9    <NA>\r\nName: x, dtype: float64\r\ngetitem call before the RollingGroupby is created\r\nid    \r\n918  3    <NA>\r\n963  8    <NA>\r\n967  6    <NA>\r\n990  7    <NA>\r\n     9    <NA>\r\nName: x, dtype: float64\r\n```","createdAt":"2023-07-13T17:07:18Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10249#issuecomment-1634603980","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps58-ASU","author":{"login":"beckernick"},"authorAssociation":"MEMBER","body":"Ran into this today while using cudf.pandas.\r\n\r\ncc @galipremsagar @vyasr , would this be a good first issue for a new contributor?","createdAt":"2024-05-06T18:11:51Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10249#issuecomment-2096628884","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps59tPn5","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"Yes, I think so!","createdAt":"2024-05-13T23:49:09Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/10249#issuecomment-2109012473","viewerDidAuthor":false}],"createdAt":"2022-02-08T17:18:48Z","id":"I_kwDOBWUGps5DNOOm","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NTk=","name":"bug","description":"Something isn't working","color":"d73a4a"},{"id":"MDU6TGFiZWwxMDE2MzMyOTQ4","name":"good first issue","description":"Good for newcomers","color":"7057ff"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"},{"id":"MDU6TGFiZWwxMTg1MjQwODk4","name":"dask","description":"Dask issue","color":"fcc25d"}],"milestone":{"number":5,"title":"Pandas API Alignment and Coverage","description":"","dueOn":null},"number":10249,"projectCards":[{"project":{"name":"Bug Squashing"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[BUG] Python groupby rolling aggregations return index inconsistent with pandas","updatedAt":"2024-05-13T23:49:14Z","url":"https://github.com/rapidsai/cudf/issues/10249"}
