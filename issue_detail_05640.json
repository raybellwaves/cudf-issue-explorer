{"assignees":[],"author":{"id":"MDQ6VXNlcjE0OTMyMjQy","is_bot":false,"login":"alecgunny","name":"Alec Gunny"},"body":"Hashing categorical features to a fixed number of bins is a common preprocessing operation, particularly for tabular deep learning models where memory requirements scale with the number of bins. For extension of CuDF to nested columns, it would be helpful if calls to `Series.hash_values` hashed the values *in* each element's list and not the list itself. This would allow categorical hashing to extend to multi-hot categorical features.\r\n\r\nAs an example:\r\n```\r\ndf = cudf.DataFrame({'a': [[0, 1, 2], [3, 4], [], [5], [6, 7, 8, 9]]})\r\ndf['a'].hash_values()\r\n\r\n# not sure what this representation will\r\n# print like but some like this\r\n[[ 29140149,  -247539971,  1683430573],  [1098043756,  1851360991], [],\r\n        [100260016],   [154726282, -1778135556, -1793932552,   246633392]]\r\n\r\ndf['a'].hash_values() % 4\r\n[[1, 1, 1], [0, 3], [], [0], [2, 0, 0, 0]]\r\n```\r\n\r\n**Additional context**\r\nNecessary for extension of [NVTabular HashBucket op](https://github.com/NVIDIA/NVTabular/blob/9f8216a89d565e00d8356ffef62f4437f3e2dee3/nvtabular/ops.py#L498) to multi-hot categorical data\r\n","closed":false,"closedAt":null,"comments":[{"id":"MDEyOklzc3VlQ29tbWVudDc5ODk2MjM0Ng==","author":{"login":"github-actions"},"authorAssociation":"NONE","body":"This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.","createdAt":"2021-03-14T19:12:40Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/5640#issuecomment-798962346","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps48EExY","author":{"login":"beckernick"},"authorAssociation":"MEMBER","body":"This might be feasible in the Python layer with existing capabilities:\r\n\r\n```python\r\nimport cudf\r\n​\r\ns = cudf.Series([[0,1,2],[2,4,2]])\r\n​\r\ncudf.Series(\r\n    cudf.core.column.build_list_column(\r\n        indices=s._column.base_children[0],\r\n        elements=s.list.leaves.hash_values()._column,\r\n        mask=s._column.base_mask,\r\n        size=s._column.size,\r\n        offset=s._column.offset,\r\n        null_count=s._column.null_count,\r\n    )\r\n)\r\n0      [29140149, -247539971, 1683430573]\r\n1    [1683430573, 1851360991, 1683430573]\r\ndtype: list\r\n```","createdAt":"2022-01-07T20:04:34Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/5640#issuecomment-1007701080","viewerDidAuthor":false},{"id":"IC_kwDOBWUGps48EP9_","author":{"login":"vyasr"},"authorAssociation":"CONTRIBUTOR","body":"@beckernick I think we'd probably want to wrap that functionality into a public API rather than advocating for users to access the internals of columns to the user. Looks like it would be straightforward to do so from your example though!","createdAt":"2022-01-07T21:16:45Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/rapidsai/cudf/issues/5640#issuecomment-1007746943","viewerDidAuthor":false}],"createdAt":"2020-07-06T13:43:29Z","id":"MDU6SXNzdWU2NTE1NTA5MjU=","labels":[{"id":"MDU6TGFiZWw1OTk2MjY1NjE=","name":"feature request","description":"New feature or request","color":"a2eeef"},{"id":"MDU6TGFiZWwxMTM5NzQwNjY2","name":"libcudf","description":"Affects libcudf (C++/CUDA) code.","color":"c5def5"},{"id":"MDU6TGFiZWwxMTM5NzQxMjEz","name":"cuDF (Python)","description":"Affects Python cuDF API.","color":"1d76db"}],"milestone":null,"number":5640,"projectCards":[{"project":{"name":"Feature Planning"},"column":{"name":"Needs prioritizing"}}],"projectItems":[],"reactionGroups":[],"state":"OPEN","title":"[FEA] Hash values in nested columns","updatedAt":"2023-04-06T05:28:34Z","url":"https://github.com/rapidsai/cudf/issues/5640"}
